{"version":3,"file":"react-pdf.browser.cjs.js","sources":["../src/utils/propsEqual.js","../src/renderer.js","../src/constants.js","../src/stylesheet/transformStyles.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/utils/warning.js","../src/font/index.js","../src/node/isImage.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/image/resolveImage.js","../src/image/getSource.js","../src/image/fetchImage.js","../src/text/emoji.js","../src/layout/resolveAssets.js","../src/stylesheet/flatten.js","../src/stylesheet/expandStyles.js","../src/stylesheet/transformUnits.js","../src/stylesheet/resolveMediaQueries.js","../src/layout/resolveStyles.js","../src/layout/resolveZIndex.js","../src/node/hasVerticalRuler.js","../src/node/hasHorizontalRuler.js","../src/layout/resolveRulers.js","../src/utils/matchPercent.js","../src/node/getOrigin.js","../src/layout/resolveOrigins.js","../src/page/getOrientation.js","../src/page/isLandscape.js","../src/page/getSize.js","../src/utils/assocIfNil.js","../src/layout/resolvePageSizes.js","../src/utils/firstPass.js","../src/node/getMargin.js","../src/node/getPadding.js","../src/node/getPosition.js","../src/node/getDimension.js","../src/node/getBorderWidth.js","../src/utils/upperFirst.js","../src/node/setYogaValue.js","../src/node/setFlex.js","../src/node/setDisplay.js","../src/node/setOverflow.js","../src/node/setFlexWrap.js","../src/node/setFlexGrow.js","../src/node/setFlexBasis.js","../src/node/setAlign.js","../src/node/setAlignSelf.js","../src/node/setFlexShrink.js","../src/node/setAspectRatio.js","../src/node/setAlignContent.js","../src/node/setPositionType.js","../src/node/setFlexDirection.js","../src/node/setJustifyContent.js","../src/node/setMargin.js","../src/node/setPadding.js","../src/node/setBorderWidth.js","../src/node/setPosition.js","../src/node/setDimension.js","../src/node/isText.js","../src/node/isNote.js","../src/node/isPage.js","../src/node/isCanvas.js","../src/text/standardFont.js","../src/text/fontSubstitution.js","../src/utils/capitalize.js","../src/text/ignorableChars.js","../src/node/isTextInstance.js","../src/text/getAttributedString.js","../src/text/layoutText.js","../src/text/linesWidth.js","../src/text/linesHeight.js","../src/text/measureText.js","../src/image/getRatio.js","../src/page/isHeightAuto.js","../src/image/measureImage.js","../src/canvas/measureCanvas.js","../src/layout/resolveDimensions.js","../src/layout/resolveTextLayout.js","../src/layout/resolveInheritance.js","../src/node/removeMargins.js","../src/layout/resolvePageMargins.js","../src/node/getNodesHeight.js","../src/node/shouldBreak.js","../src/page/getContentArea.js","../src/layout/resolvePageBreaks.js","../src/node/split.js","../src/layout/resolvePageSplitting.js","../src/layout/resolvePageWrapping.js","../src/layout/resolveNoteChildren.js","../src/layout/resolvePagePaddings.js","../src/layout/resolvePercentRadius.js","../src/layout/resolvePercentHeight.js","../src/node/isLink.js","../src/layout/resolveLinkSubstitution.js","../src/layout/resolveAbsoluteCoordinates.js","../src/utils/asyncCompose.js","../src/layout/index.js","../src/pdf/save.js","../src/pdf/restore.js","../src/pdf/renderText.js","../src/pdf/renderPage.js","../src/utils/url.js","../src/link/getSource.js","../src/pdf/renderLink.js","../src/pdf/renderNote.js","../src/pdf/clipNode.js","../src/image/resolveObjectFit.js","../src/pdf/renderImage.js","../src/canvas/painter.js","../src/pdf/renderCanvas.js","../src/pdf/renderRulers.js","../src/pdf/addMetadata.js","../src/pdf/renderDebug.js","../src/pdf/renderBorders.js","../src/pdf/renderBackground.js","../src/pdf/applyTransformations.js","../src/pdf/render.js","../src/stylesheet/index.js","../src/index.js","../src/canvas.js","../src/dom.js"],"sourcesContent":["/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\n// import { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = onChange => {\n  return ReactFiberReconciler({\n    supportsMutation: true,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit(a, b, c) {\n      // Noop\n    },\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n      onChange();\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n      onChange();\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n      onChange();\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n      onChange();\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n      onChange();\n    },\n  });\n};\n\nexport default createRenderer;\n","export const VIEW = 'VIEW';\nexport const TEXT = 'TEXT';\nexport const LINK = 'LINK';\nexport const PAGE = 'PAGE';\nexport const NOTE = 'NOTE';\nexport const IMAGE = 'IMAGE';\nexport const DOCUMENT = 'DOCUMENT';\nexport const CANVAS = 'CANVAS';\nexport const TEXT_INSTANCE = 'TEXT_INSTANCE';\n\nexport const DPI = 72; // 72pt per inch.\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nexport const FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nexport const PORTRAIT = 'portrait';\nexport const LANDSCAPE = 'landscape';\n\nexport const INHERITED_PROPERTIES = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const RULER_WIDTH = 13;\nexport const RULER_COLOR = 'white';\nexport const RULER_FONT_SIZE = 6;\nexport const DEFAULT_RULER_STEPS = 50;\nexport const LINE_WIDTH = 0.5;\nexport const LINE_COLOR = 'gray';\nexport const GRID_COLOR = '#ababab';\n","import * as R from 'ramda';\n\nimport { FONT_WEIGHTS } from '../constants';\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g;\n\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nconst isFontWeightStyle = key => key.match(/^fontWeight/);\n\nconst isBorderStyle = (key, value) =>\n  key.match(/^border(Top|Right|Bottom|Left)(Color|Width|Style)/) &&\n  typeof value === 'string';\n\nconst isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nexport const processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst matchNumber = R.when(\n  R.is(String),\n  R.compose(\n    R.complement(R.isEmpty),\n    R.match(/^-?\\d*\\.?\\d*$/),\n  ),\n);\n\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n\nconst transformStyles = style => {\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    resolvedStyle[key] = R.compose(\n      castFloat,\n      R.cond([\n        [isBorderStyle, processBorders],\n        [isBoxModelStyle, processBoxModel],\n        [isObjectPositionStyle, processObjectPosition],\n        [isTransformOriginStyle, processTransformOrigin],\n        [isFontWeightStyle, processFontWeight],\n        [R.T, R.always(value)],\n      ]),\n    )(key, value);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformStyles';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import * as R from 'ramda';\n\nimport { IMAGE } from '../constants';\n\n/**\n * Checks if node is image\n *\n * @param {Object} node\n * @returns {Boolean} is node image?\n */\nconst isImage = R.propEq('type', IMAGE);\n\nexport default isImage;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from '../utils/png';\nimport JPEG from '../utils/jpeg';\nimport createCache from '../utils/cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n","import * as R from 'ramda';\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String} image src\n */\nconst getSource = R.compose(\n  R.when(R.is(String), src => ({ uri: src })),\n  R.either(R.path(['props', 'src']), R.path(['props', 'source'])),\n);\n\nexport default getSource;\n","import resolveImage from './resolveImage';\nimport getSource from './getSource';\nimport warning from '../utils/warning';\n\nconst fetchImage = async node => {\n  const src = getSource(node);\n  const { cache } = node.props;\n\n  if (!src) {\n    warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    node.image = await resolveImage(src, { cache });\n  } catch (e) {\n    node.image = { width: 0, height: 0 };\n    console.warn(e.message);\n  }\n};\n\nexport default fetchImage;\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\n\nimport Font from '../font';\nimport resolveImage from '../image/resolveImage';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport fetchImage from '../image/fetchImage';\nimport { fetchEmojis } from '../text/emoji';\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nconst fetchAssets = node => {\n  const promises = [];\n  const listToExplore = node.children.slice(0);\n\n  while (listToExplore.length > 0) {\n    const node = listToExplore.shift();\n\n    if (isImage(node)) {\n      promises.push(fetchImage(node));\n    }\n\n    if (node.style && node.style.fontFamily) {\n      promises.push(Font.load(node.style));\n    }\n\n    if (typeof node === 'string') {\n      promises.push(...fetchEmojis(node));\n    }\n\n    if (typeof node.value === 'string') {\n      promises.push(...fetchEmojis(node.value));\n    }\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @returns {Object} root node\n */\nconst resolveAssets = node =>\n  R.compose(\n    R.then(R.always(node)),\n    p => Promise.all(p),\n    fetchAssets,\n  )(node);\n\nexport default resolveAssets;\n","import * as R from 'ramda';\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nconst compact = R.filter(Boolean);\n\n/**\n * Checks if value is array\n *\n * @param {any} value\n * @returns {Boolean} is value an array\n */\nconst isArray = R.is(Array);\n\n/**\n * Checks if value is not an array\n *\n * @param {any} value\n * @returns {Boolean} isn't value an array\n */\nconst isNotArray = R.complement(isArray);\n\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */\nconst castArray = R.when(isNotArray, v => [v]);\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nconst mergeStyles = styles =>\n  styles.reduce((acc, style) => {\n    const s = isArray(style) ? flatten(style) : style;\n\n    Object.keys(s).forEach(key => {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n\n    return acc;\n  }, {});\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nconst flatten = R.compose(\n  mergeStyles,\n  compact,\n  castArray,\n);\n\nexport default flatten;\n","import * as R from 'ramda';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Expand rules\n */\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\nconst expandedKeys = R.keys(styleShorthands);\n\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (R.includes(key, expandedKeys)) {\n      const expandedProps = styleShorthands[key];\n      for (const propName in expandedProps) {\n        if (hasOwnProperty.call(expandedProps, propName)) {\n          resolvedStyle[propName] = value;\n        }\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default expandStyles;\n","import * as R from 'ramda';\n\nimport { DPI } from '../constants';\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\n  return match\n    ? { value: parseFloat(match[1], 10), unit: match[2] || 'pt' }\n    : { value, unit: undefined };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * (1 / 25.4) * DPI;\n    case 'cm':\n      return scalar.value * (1 / 2.54) * DPI;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n});\n\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformUnits = (container, styles) =>\n  R.map(transformUnit(container), styles);\n\nexport default R.curryN(2, transformUnits);\n","import * as R from 'ramda';\nimport matchMedia from 'media-engine';\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nconst resolveMediaQueries = (container, styles) => {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: styles[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: styles[key] };\n  }, {});\n};\n\nexport default R.curryN(2, resolveMediaQueries);\n","import * as R from 'ramda';\n\nimport flattenStyles from '../stylesheet/flatten';\nimport expandStyles from '../stylesheet/expandStyles';\nimport transformUnits from '../stylesheet/transformUnits';\nimport transformStyles from '../stylesheet/transformStyles';\nimport resolveMediaQueries from '../stylesheet/resolveMediaQueries';\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nconst resolveStyles = container =>\n  R.compose(\n    transformUnits(container),\n    transformStyles,\n    expandStyles,\n    resolveMediaQueries(container),\n    flattenStyles,\n  );\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nconst resolveNodeStyles = page => node => {\n  const container = R.propOr({}, 'box', page);\n\n  return R.evolve({\n    style: resolveStyles(container),\n    children: R.map(resolveNodeStyles(page)),\n  })(node);\n};\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nconst resolvePageStyles = page => {\n  const pageBox = R.propOr({}, 'box', page);\n\n  return R.evolve({\n    children: R.map(resolveNodeStyles(page)),\n    style: R.compose(\n      transformUnits(pageBox),\n      transformStyles,\n      expandStyles,\n      flattenStyles,\n    ),\n  })(page);\n};\n\n/**\n * Resolves root styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nexport default R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageStyles),\n    }),\n  ),\n});\n","import * as R from 'ramda';\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolveZIndex = node =>\n  R.evolve({\n    children: R.compose(\n      R.map(resolveZIndex),\n      R.sortBy(R.path(['style', 'zIndex'])),\n    ),\n  })(node);\n\nexport default resolveZIndex;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render vertical ruler\n *\n * @param {Object} page\n * @returns {boolean} has vertical ruler\n */\nconst hasVerticalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'verticalRuler']),\n);\n\nexport default hasVerticalRuler;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render horizontal ruler\n *\n * @param {Object} page\n * @returns {boolean} has horizontal ruler\n */\nconst hasHorizontalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'horizontalRuler']),\n);\n\nexport default hasHorizontalRuler;\n","import * as R from 'ramda';\n\nimport { RULER_WIDTH } from '../constants';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\n\n/**\n * Adjust page size given ruler props\n *\n * @param {Object} page\n * @returns {boolean} page with size altered by ruler props\n */\nconst adjustPageSize = R.compose(\n  R.when(\n    hasVerticalRuler,\n    R.evolve({\n      box: { height: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { top: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n  R.when(\n    hasHorizontalRuler,\n    R.evolve({\n      box: { width: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { left: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n);\n\n/**\n * Adjust pages size given ruler props\n *\n * @param {Object} root\n * @returns {boolean} root with pages size altered by ruler props\n */\nconst resolveRulers = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(adjustPageSize),\n    }),\n  ),\n});\n\nexport default resolveRulers;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\nconst getTransformStyle = s => R.pathOr('50%', ['style', s]);\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nconst getOrigin = node => {\n  if (!node.box) return {};\n\n  const { left, top, width, height } = node.box;\n  const transformOriginX = getTransformStyle('transformOriginX')(node);\n  const transformOriginY = getTransformStyle('transformOriginY')(node);\n\n  const percentX = matchPercent(transformOriginX);\n  const percentY = matchPercent(transformOriginY);\n\n  const offsetX = percentX ? width * percentX.percent : transformOriginX;\n  const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n  return { left: left + offsetX, top: top + offsetY };\n};\n\nexport default getOrigin;\n","import * as R from 'ramda';\n\nimport getOrigin from '../node/getOrigin';\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nconst resolveNodeOrigin = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveNodeOrigin) }),\n    R.converge(R.assoc('origin'), [getOrigin, R.identity]),\n  )(node);\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\nconst resolveOrigin = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolveNodeOrigin),\n    }),\n  ),\n});\n\nexport default resolveOrigin;\n","import * as R from 'ramda';\n\nimport { PORTRAIT, LANDSCAPE } from '../constants';\n\nconst VALID_ORIENTATIONS = [PORTRAIT, LANDSCAPE];\n\n/**\n * Get page orientation. Defaults to landscape\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nconst getOrientation = R.compose(\n  R.ifElse(\n    R.includes(R.__, VALID_ORIENTATIONS),\n    R.identity,\n    R.always(PORTRAIT),\n  ),\n  R.pathOr(PORTRAIT, ['props', 'orientation']),\n);\n\nexport default getOrientation;\n","import * as R from 'ramda';\n\nimport getOrientation from './getOrientation';\n\nimport { LANDSCAPE } from '../constants';\n\nconst isLandscape = R.compose(\n  R.equals(LANDSCAPE),\n  getOrientation,\n);\n\nexport default isLandscape;\n","import * as R from 'ramda';\n\nimport isLandscape from './isLandscape';\nimport { PAGE_SIZES } from '../constants';\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nconst toSizeObject = R.applySpec({\n  width: R.prop(0),\n  height: R.prop(1),\n});\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nconst flipSizeObject = R.applySpec({\n  width: R.prop('height'),\n  height: R.prop('width'),\n});\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nconst getStringSize = R.compose(\n  toSizeObject,\n  R.prop(R.__, PAGE_SIZES),\n  R.toUpper,\n);\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nconst getNumberSize = R.compose(\n  toSizeObject,\n  v => [v],\n);\n\n/**\n * Throws invalid size error\n *\n * @param {String} invalid page size input\n */\nconst throwInvalidError = size => {\n  throw new Error(`Invalid Page size: ${JSON.stringify(size)}`);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nconst getSize = page => {\n  const size = R.compose(\n    R.cond([\n      [R.is(String), getStringSize],\n      [R.is(Array), toSizeObject],\n      [R.is(Number), getNumberSize],\n      [R.is(Object), R.identity],\n      [R.T, throwInvalidError],\n    ]),\n    R.pathOr('A4', ['props', 'size']),\n  )(page);\n\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\nexport default getSize;\n","import * as R from 'ramda';\n\n/**\n * Add empt box prop if not present in node\n *\n * @param {Object} node\n * @returns {Object} node with box prop\n */\nconst assocIfNil = (key, value, target) =>\n  R.when(\n    R.compose(\n      R.isNil,\n      R.prop(key),\n    ),\n    R.assoc(key, value),\n  )(target);\n\nexport default R.curryN(3, assocIfNil);\n","import * as R from 'ramda';\n\nimport getPageSize from '../page/getSize';\nimport assocIfNil from '../utils/assocIfNil';\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nexport const resolvePageSize = key => page => {\n  const size = getPageSize(page);\n  return R.evolve({ [key]: R.merge(R.__, size) })(page);\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nconst resolvePageSizes = key => R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(\n        R.compose(\n          resolvePageSize(key),\n          assocIfNil(key, {}),\n        ),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageSizes;\n","import * as R from 'ramda';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Takes a list of predicates and returns the first predicate result that returns true for a given list of arguments\n *\n * @param  {...any} predicates\n * @param  {any} value\n */\nconst firstPass = (...fns) => value => {\n  let res;\n\n  for (const fn of fns) {\n    res = fn(value);\n    if (isNotNil(res)) return res;\n  }\n\n  return res;\n};\n\nexport default firstPass;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedMargin = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nconst getMargin = R.applySpec({\n  marginTop: firstPass(\n    getComputedMargin(Yoga.EDGE_TOP),\n    R.path(['box', 'marginTop']),\n    R.path(['style', 'marginTop']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginRight: firstPass(\n    getComputedMargin(Yoga.EDGE_RIGHT),\n    R.path(['box', 'marginRight']),\n    R.path(['style', 'marginRight']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginBottom: firstPass(\n    getComputedMargin(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'marginBottom']),\n    R.path(['style', 'marginBottom']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginLeft: firstPass(\n    getComputedMargin(Yoga.EDGE_LEFT),\n    R.path(['box', 'marginLeft']),\n    R.path(['style', 'marginLeft']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n});\n\nexport default getMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedPadding = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nconst getPadding = R.applySpec({\n  paddingTop: firstPass(\n    getComputedPadding(Yoga.EDGE_TOP),\n    R.path(['box', 'paddingTop']),\n    R.path(['style', 'paddingTop']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingRight: firstPass(\n    getComputedPadding(Yoga.EDGE_RIGHT),\n    R.path(['box', 'paddingRight']),\n    R.path(['style', 'paddingRight']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingBottom: firstPass(\n    getComputedPadding(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'paddingBottom']),\n    R.path(['style', 'paddingBottom']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingLeft: firstPass(\n    getComputedPadding(Yoga.EDGE_LEFT),\n    R.path(['box', 'paddingLeft']),\n    R.path(['style', 'paddingLeft']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n});\n\nexport default getPadding;\n","import * as R from 'ramda';\n\nconst getTop = yogaNode => (yogaNode ? yogaNode.getComputedTop() : 0);\nconst getRight = yogaNode => (yogaNode ? yogaNode.getComputedRight() : 0);\nconst getBottom = yogaNode => (yogaNode ? yogaNode.getComputedBottom() : 0);\nconst getLeft = yogaNode => (yogaNode ? yogaNode.getComputedLeft() : 0);\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nconst getPosition = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    top: getTop,\n    right: getRight,\n    bottom: getBottom,\n    left: getLeft,\n  })(yogaNode);\n};\n\nexport default getPosition;\n","const DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0,\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nconst getDimension = node => {\n  const yogaNode = node._yogaNode;\n\n  if (!yogaNode) return DEFAULT_DIMENSION;\n\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight(),\n  };\n};\n\nexport default getDimension;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getComputedBorder = edge => yogaNode =>\n  yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nconst getBorderWidth = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    borderTopWidth: getComputedBorder(Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(Yoga.EDGE_LEFT),\n  })(yogaNode);\n};\n\nexport default getBorderWidth;\n","import * as R from 'ramda';\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst upperFirst = R.ifElse(\n  R.isNil,\n  R.identity,\n  R.compose(\n    R.join(''),\n    R.juxt([\n      R.compose(\n        R.toUpper,\n        R.head,\n      ),\n      R.tail,\n    ]),\n  ),\n);\n\nexport default upperFirst;\n","import * as R from 'ramda';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setYogaValue = (attr, edge) => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const hasEdge = R.complement(R.isNil)(edge);\n      const fixedMethod = `set${upperFirst(attr)}`;\n      const autoMethod = `${fixedMethod}Auto`;\n      const percentMethod = `${fixedMethod}Percent`;\n      const percent = matchPercent(value);\n\n      if (percent && !yogaNode[percentMethod]) {\n        throw new Error(`You can't pass percentage values to ${attr} property`);\n      }\n\n      if (percent) {\n        hasEdge\n          ? yogaNode[percentMethod](edge, percent.value)\n          : yogaNode[percentMethod](percent.value);\n      } else if (value === 'auto') {\n        hasEdge ? yogaNode[autoMethod](edge) : yogaNode[autoMethod]();\n      } else {\n        hasEdge\n          ? yogaNode[fixedMethod](edge, value)\n          : yogaNode[fixedMethod](value);\n      }\n    }\n  });\n\nexport default setYogaValue;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex attribute to node's Yoga instance\n *\n * @param {Number} flex value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlex = setYogaValue('flex');\n\nexport default setFlex;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setDisplay = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(\n        value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX,\n      );\n    }\n  });\n\nexport default setDisplay;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setOverflow = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('hidden'), R.always(Yoga.OVERFLOW_HIDDEN)],\n        [R.equals('scroll'), R.always(Yoga.OVERFLOW_SCROLL)],\n        [R.T, R.always(Yoga.OVERFLOW_VISIBLE)],\n      ])(value);\n\n      yogaNode.setOverflow(yogaValue);\n    }\n  });\n\nexport default setOverflow;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('wrap'), R.always(Yoga.WRAP_WRAP)],\n        [R.equals('wrap-reverse'), R.always(Yoga.WRAP_WRAP_REVERSE)],\n        [R.T, R.always(Yoga.WRAP_NO_WRAP)],\n      ])(value);\n\n      yogaNode.setFlexWrap(yogaValue);\n    }\n  });\n\nexport default setFlexWrap;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexGrow = R.compose(\n  setYogaValue('flexGrow'),\n  R.defaultTo(0),\n);\n\nexport default setFlexGrow;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nexport default setFlexBasis;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlign = attr => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('flex-start'), R.always(Yoga.ALIGN_FLEX_START)],\n        [R.equals('center'), R.always(Yoga.ALIGN_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.ALIGN_FLEX_END)],\n        [R.equals('stretch'), R.always(Yoga.ALIGN_STRETCH)],\n        [R.equals('baseline'), R.always(Yoga.ALIGN_BASELINE)],\n        [R.equals('space-between'), R.always(Yoga.ALIGN_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.ALIGN_SPACE_AROUND)],\n        [R.T, R.always(Yoga.ALIGN_AUTO)],\n      ])(value);\n\n      yogaNode[`setAlign${upperFirst(attr)}`](yogaValue);\n    }\n  });\n\nexport default setAlign;\n","import setAlign from './setAlign';\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignSelf = setAlign('self');\n\nexport default setAlignSelf;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexShrink = R.compose(\n  setYogaValue('flexShrink'),\n  R.defaultTo(1),\n);\n\nexport default setFlexShrink;\n","import * as R from 'ramda';\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAspectRatio = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n  });\n\nexport default setAspectRatio;\n","import setAlign from './setAlign';\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignContent = setAlign('content');\n\nexport default setAlignContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setPositionType = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setPositionType(\n        value === 'absolute'\n          ? Yoga.POSITION_TYPE_ABSOLUTE\n          : Yoga.POSITION_TYPE_RELATIVE,\n      );\n    }\n  });\n\nexport default setPositionType;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst isRow = R.equals('row');\nconst isRowReverse = R.equals('row-reverse');\nconst isColumnReverse = R.equals('column-reverse');\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexDirection = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [isRow, R.always(Yoga.FLEX_DIRECTION_ROW)],\n        [isRowReverse, R.always(Yoga.FLEX_DIRECTION_ROW_REVERSE)],\n        [isColumnReverse, R.always(Yoga.FLEX_DIRECTION_COLUMN_REVERSE)],\n        [R.T, R.always(Yoga.FLEX_DIRECTION_COLUMN)],\n      ])(value);\n\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n\nexport default setFlexDirection;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setJustifyContent = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('center'), R.always(Yoga.JUSTIFY_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.JUSTIFY_FLEX_END)],\n        [R.equals('space-between'), R.always(Yoga.JUSTIFY_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.JUSTIFY_SPACE_AROUND)],\n        [R.equals('space-evenly'), R.always(Yoga.JUSTIFY_SPACE_EVENLY)],\n        [R.T, R.always(Yoga.JUSTIFY_FLEX_START)],\n      ])(value);\n\n      yogaNode.setJustifyContent(yogaValue);\n    }\n  });\n\nexport default setJustifyContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set all margins at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMargin = margin =>\n  R.tap(node => {\n    setMarginTop(margin)(node);\n    setMarginRight(margin)(node);\n    setMarginBottom(margin)(node);\n    setMarginLeft(margin)(node);\n  });\n\nexport default setMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set all paddings at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPadding = padding =>\n  R.tap(node => {\n    setPaddingTop(padding)(node);\n    setPaddingRight(padding)(node);\n    setPaddingBottom(padding)(node);\n    setPaddingLeft(padding)(node);\n  });\n\nexport default setPadding;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set all border widths at once\n *\n * @param {Number} border width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorder = width =>\n  R.tap(node => {\n    setBorderTop(width)(node);\n    setBorderRight(width)(node);\n    setBorderBottom(width)(node);\n    setBorderLeft(width)(node);\n  });\n\nexport default setBorder;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set all positions at once\n *\n * @param {Number} position\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPosition = position =>\n  R.tap(node => {\n    setPositionTop(position)(node);\n    setPositionRight(position)(node);\n    setPositionBottom(position)(node);\n    setPositionLeft(position)(node);\n  });\n\nexport default setPosition;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxHeight = setYogaValue('maxHeight');\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\n\n/**\n * Checks if node is text\n *\n * @param {Object} node\n * @returns {Boolean} is node text?\n */\nconst isText = R.propEq('type', TEXT);\n\nexport default isText;\n","import * as R from 'ramda';\n\nimport { NOTE } from '../constants';\n\n/**\n * Checks if node is note\n *\n * @param {Object} node\n * @returns {Boolean} is node note?\n */\nconst isNote = R.propEq('type', NOTE);\n\nexport default isNote;\n","import * as R from 'ramda';\n\nimport { PAGE } from '../constants';\n\n/**\n * Checks if node is page\n *\n * @param {Object} node\n * @returns {Boolean} is node page?\n */\nconst isPage = R.propEq('type', PAGE);\n\nexport default isPage;\n","import * as R from 'ramda';\n\nimport { CANVAS } from '../constants';\n\n/**\n * Checks if node is canvas\n *\n * @param {Object} node\n * @returns {Boolean} is node canvas?\n */\nconst isCanvas = R.propEq('type', CANVAS);\n\nexport default isCanvas;\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import * as R from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst getFallbackFont = () => getOrCreateFont('Helvetica');\n\nconst shouldFallbackToFont = (codePoint, font) =>\n  !IGNORED_CODE_POINTS.includes(codePoint) &&\n  !font.hasGlyphForCodePoint(codePoint) &&\n  getFallbackFont().hasGlyphForCodePoint(codePoint);\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(R.last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst capitalize = value => {\n  if (!value) return value;\n  return value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n};\n\nexport default capitalize;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import * as R from 'ramda';\n\nimport { TEXT_INSTANCE } from '../constants';\n\n/**\n * Checks if node is text intance\n *\n * @param {Object} node\n * @returns {Boolean} is node text intance?\n */\nconst isTextInstance = R.propEq('type', TEXT_INSTANCE);\n\nexport default isTextInstance;\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport { embedEmojis } from './emoji';\nimport capitalize from '../utils/capitalize';\nimport upperFirst from '../utils/upperFirst';\nimport { ignoreChars } from './ignorableChars';\nimport isTextInstance from '../node/isTextInstance';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\n/**\n * Get textkit framgents of given node object\n *\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nexport default getAttributedString;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport Font from '../font';\nimport fontSubstitution from './fontSubstitution';\nimport getAttributedString from './getAttributedString';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\n/**\n * Get layout container for specific text node\n *\n * @param {Object} node\n * @param {Number} width\n * @param {Number} height\n * @returns {Object} layout container\n */\nconst getContainer = (node, width, height) => {\n  const maxLines = R.path(['style', 'maxLines'], node);\n  const textOverflow = R.path(['style', 'textOverflow'], node);\n\n  return {\n    x: 0,\n    y: 0,\n    width,\n    maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow,\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = node => ({\n  hyphenationPenalty: node.props.hyphenationPenalty,\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n});\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @returns {Array} layout lines\n */\nconst layoutText = R.compose(\n  R.reduce(R.concat, []),\n  R.converge(engine, [getAttributedString, getContainer, getLayoutOptions]),\n);\n\n// TODO: Do it memoizable?\nexport default layoutText;\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nconst linesWidth = node => {\n  if (!node.lines) return -1;\n  return Math.max(\n    ...node.lines.map(line => AttributedString.advanceWidth(line)),\n  );\n};\n\nexport default linesWidth;\n","/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nconst linesHeight = node => {\n  if (!node.lines) return -1;\n  return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nexport default linesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport layoutText from './layoutText';\nimport linesWidth from './linesWidth';\nimport linesHeight from './linesHeight';\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nconst measureText = (page, node, width, widthMode, height, heightMode) => {\n  if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return { height: linesHeight(node) };\n  }\n\n  if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return {\n      height: linesHeight(node),\n      width: Math.min(width, linesWidth(node)),\n    };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureText);\n","import * as R from 'ramda';\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nconst getRatio = R.ifElse(\n  R.hasPath(['image', 'data']),\n  node => node.image.width / node.image.height,\n  R.always(1),\n);\n\nexport default getRatio;\n","import * as R from 'ramda';\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nconst isHeightAuto = R.pathSatisfies(R.isNil, ['box', 'height']);\n\nexport default isHeightAuto;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getRatio from '../image/getRatio';\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nconst measureImage = (page, node, width, widthMode, height, heightMode) => {\n  const imageRatio = getRatio(node);\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  // Skip measure if image data not present yet\n  if (!node.image) return { width: 0, height: 0 };\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_UNDEFINED\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(pageArea, scaledHeight) };\n  }\n\n  if (\n    heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n    (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n  ) {\n    return { width: Math.min(height * imageRatio, width) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(height, pageArea, scaledHeight) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height),\n      };\n    } else {\n      return {\n        width: Math.min(height * imageRatio, width),\n        height: height,\n      };\n    }\n  }\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureImage);\n","import * as R from 'ramda';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\nconst getMax = R.reduce(R.max, -Infinity);\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n  const addPoint = (x, y) => points.push([x, y]);\n  const moveTo = R.compose(\n    nil,\n    addPoint,\n  );\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't really change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () =>\n    R.compose(\n      getMax,\n      R.pluck(0),\n    )(points);\n\n  ctx.getHeight = () =>\n    R.compose(\n      getMax,\n      R.pluck(1),\n    )(points);\n\n  return ctx;\n};\n\n/**\n * Yoga canbas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node) => {\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  const ctx = measureCtx();\n\n  node.props.paint(ctx);\n\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureCanvas);\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport getPosition from '../node/getPosition';\nimport getDimension from '../node/getDimension';\nimport getBorderWidth from '../node/getBorderWidth';\nimport setFlex from '../node/setFlex';\nimport setDisplay from '../node/setDisplay';\nimport setOverflow from '../node/setOverflow';\nimport setFlexWrap from '../node/setFlexWrap';\nimport setFlexGrow from '../node/setFlexGrow';\nimport setFlexBasis from '../node/setFlexBasis';\nimport setAlignSelf from '../node/setAlignSelf';\nimport setFlexShrink from '../node/setFlexShrink';\nimport setAspectRatio from '../node/setAspectRatio';\nimport setAlignContent from '../node/setAlignContent';\nimport setPositionType from '../node/setPositionType';\nimport setFlexDirection from '../node/setFlexDirection';\nimport setJustifyContent from '../node/setJustifyContent';\nimport {\n  setMarginTop,\n  setMarginRight,\n  setMarginBottom,\n  setMarginLeft,\n} from '../node/setMargin';\nimport {\n  setPaddingTop,\n  setPaddingRight,\n  setPaddingBottom,\n  setPaddingLeft,\n} from '../node/setPadding';\nimport {\n  setBorderTop,\n  setBorderRight,\n  setBorderBottom,\n  setBorderLeft,\n} from '../node/setBorderWidth';\nimport {\n  setPositionTop,\n  setPositionRight,\n  setPositionBottom,\n  setPositionLeft,\n} from '../node/setPosition';\nimport {\n  setWidth,\n  setHeight,\n  setMinWidth,\n  setMaxWidth,\n  setMinHeight,\n  setMaxHeight,\n} from '../node/setDimension';\nimport isText from '../node/isText';\nimport isNote from '../node/isNote';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport measureText from '../text/measureText';\nimport measureImage from '../image/measureImage';\nimport measureCanvas from '../canvas/measureCanvas';\nimport isTextInstance from '../node/isTextInstance';\n\nconst YOGA_NODE = '_yogaNode';\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nconst setNodeHeight = node =>\n  R.ifElse(\n    isPage,\n    setHeight(node.box.height),\n    setHeight(node.box.height || node.style.height),\n  );\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst setYogaValues = R.tap(node => {\n  R.compose(\n    setNodeHeight(node),\n    setWidth(node.style.width),\n    setMinWidth(node.style.minWidth),\n    setMaxWidth(node.style.maxWidth),\n    setMinHeight(node.style.minHeight),\n    setMaxHeight(node.style.maxHeight),\n    setMarginTop(node.style.marginTop),\n    setMarginRight(node.style.marginRight),\n    setMarginBottom(node.style.marginBottom),\n    setMarginLeft(node.style.marginLeft),\n    setPaddingTop(node.style.paddingTop),\n    setPaddingRight(node.style.paddingRight),\n    setPaddingBottom(node.style.paddingBottom),\n    setPaddingLeft(node.style.paddingLeft),\n    setPositionType(node.style.position),\n    setPositionTop(node.style.top),\n    setPositionRight(node.style.right),\n    setPositionBottom(node.style.bottom),\n    setPositionLeft(node.style.left),\n    setBorderTop(node.style.borderTopWidth),\n    setBorderRight(node.style.borderRightWidth),\n    setBorderBottom(node.style.borderBottomWidth),\n    setBorderLeft(node.style.borderLeftWidth),\n    setDisplay(node.style.display),\n    setFlexDirection(node.style.flexDirection),\n    setAlignSelf(node.style.alignSelf),\n    setAlignContent(node.style.alignContent),\n    setJustifyContent(node.style.justifyContent),\n    setFlexWrap(node.style.flexWrap),\n    setOverflow(node.style.overflow),\n    setAspectRatio(node.style.aspectRatio),\n    setFlex(node.style.flex),\n    setFlexBasis(node.style.flexBasis),\n    setFlexGrow(node.style.flexGrow),\n    setFlexShrink(node.style.flexShrink),\n  )(node);\n});\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nconst insertYogaNodes = parent =>\n  R.tap(child => parent.insertChild(child[YOGA_NODE], parent.getChildCount()));\n\nconst setMeasureFunc = page => node => {\n  const yogaNode = node[YOGA_NODE];\n\n  if (isText(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  return node;\n};\n\nconst isNotText = R.complement(isText);\nconst isNotNote = R.complement(isNote);\nconst isLayoutElement = R.both(isNotText, isNotNote);\nconst isNotTextInstance = R.complement(isTextInstance);\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nconst createYogaNodes = page => node => {\n  const yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n\n  return R.compose(\n    setMeasureFunc(page),\n    R.when(\n      isLayoutElement,\n      R.evolve({\n        children: R.map(\n          R.compose(\n            insertYogaNodes(yogaNode),\n            createYogaNodes(page),\n          ),\n        ),\n      }),\n    ),\n    setYogaValues,\n    R.assoc(YOGA_NODE, yogaNode),\n  )(node);\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst calculateLayout = R.tap(page => page[YOGA_NODE].calculateLayout());\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nconst persistDimensions = node => {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(\n      R.mergeAll([\n        getPadding(node),\n        getMargin(node),\n        getBorderWidth(node),\n        getPosition(node),\n        getDimension(node),\n      ]),\n    ),\n  })(node);\n};\n\n/**\n * Removes and destroys yoga node frm document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nconst destroyYogaNodes = node => {\n  return R.compose(\n    R.dissoc(YOGA_NODE),\n    R.tap(n => Yoga.Node.destroy(n[YOGA_NODE])),\n    R.evolve({ children: R.map(R.when(isLayoutElement, destroyYogaNodes)) }),\n  )(node);\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nexport const resolvePageDimensions = page =>\n  R.ifElse(\n    R.isNil,\n    R.always(null),\n    R.compose(\n      destroyYogaNodes,\n      persistDimensions,\n      calculateLayout,\n      createYogaNodes(page),\n    ),\n  )(page);\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nconst resolveDimensions = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageDimensions),\n    }),\n  ),\n});\n\nexport default resolveDimensions;\n","import * as R from 'ramda';\n\nimport isText from '../node/isText';\nimport layoutText from '../text/layoutText';\n\nconst shouldLayoutText = node => isText(node) && !node.lines;\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layouted node\n */\nconst resolveTextLayout = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveTextLayout) }),\n    R.when(\n      shouldLayoutText,\n      R.compose(\n        R.converge(R.assoc('lines'), [\n          R.converge(layoutText, [\n            R.identity,\n            R.path(['box', 'width']),\n            R.path(['box', 'height']),\n          ]),\n          R.identity,\n        ]),\n      ),\n    ),\n  )(node);\n\nexport default resolveTextLayout;\n","import * as R from 'ramda';\n\nimport { INHERITED_PROPERTIES } from '../constants';\n\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\nconst getInheritStyles = R.compose(\n  R.pick(INHERITED_PROPERTIES),\n  R.propOr({}, 'style'),\n);\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nconst mergeStyles = styles =>\n  R.evolve({\n    style: R.merge(styles),\n  });\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nconst resolveInheritance = node => {\n  const inheritStyles = getInheritStyles(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveInheritance,\n        mergeStyles(inheritStyles),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveInheritance;\n","import * as R from 'ramda';\n\nimport setMargin from './setMargin';\n\n/**\n * Removes margins on node\n *\n * @param {Object} node\n * @returns {Object} node without margins\n */\nconst removeMargins = R.compose(\n  setMargin(0),\n  R.dissocPath(['style', 'margin']),\n  R.dissocPath(['style', 'marginTop']),\n  R.dissocPath(['style', 'marginRight']),\n  R.dissocPath(['style', 'marginBottom']),\n  R.dissocPath(['style', 'marginLeft']),\n  R.dissocPath(['style', 'marginHorizontal']),\n  R.dissocPath(['style', 'marginVertical']),\n);\n\nexport default removeMargins;\n","import * as R from 'ramda';\n\nimport removeMargins from '../node/removeMargins';\n\n/**\n * Remove page margins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root without margins on pages\n */\nconst resolvePageMargins = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(removeMargins),\n    }),\n  ),\n});\n\nexport default resolvePageMargins;\n","import * as R from 'ramda';\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nconst getNodesHeight = nodes => {\n  let max = 0;\n  let min = Infinity;\n\n  if (R.isEmpty(nodes)) return 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n\nexport default getNodesHeight;\n","import * as R from 'ramda';\n\nimport isNote from './isNote';\nimport isImage from './isImage';\nimport isCanvas from './isCanvas';\nimport getNodesHeight from './getNodesHeight';\n\nconst getWrap = R.ifElse(\n  R.anyPass([isNote, isImage, isCanvas]),\n  R.always(false),\n  R.pathOr(true, ['props', 'wrap']),\n);\n\nconst getBreak = R.pathOr(false, ['props', 'break']);\n\nconst getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nconst defaultPresenceAhead = element => height =>\n  Math.min(element.box.height, height);\n\nconst getPresenceAhead = (elements, height) => {\n  let result = 0;\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (!element.box) continue;\n\n    const isElementInside = height > element.box.top;\n    const presenceAhead =\n      element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nconst shouldBreak = (child, futureElements, height) => {\n  const minPresenceAhead = getMinPresenceAhead(child);\n  const presenceAhead = getPresenceAhead(futureElements, height);\n  const futureHeight = getNodesHeight(futureElements);\n  const shouldSplit = height < child.box.top + child.box.height;\n  const shouldWrap = getWrap(child);\n\n  return (\n    getBreak(child) ||\n    (!shouldWrap && shouldSplit) ||\n    (minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead)\n  );\n};\n\nexport default shouldBreak;\n","import * as R from 'ramda';\n\nconst getPaddingBottom = R.pathOr(0, ['style', 'paddingBottom']);\n\nconst getContentArea = page => {\n  const paddingBottom = getPaddingBottom(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingBottom;\n};\n\nexport default getContentArea;\n","import * as R from 'ramda';\n\nimport shouldNodeBreak from '../node/shouldBreak';\nimport getContentArea from '../page/getContentArea';\nimport { resolvePageDimensions } from './resolveDimensions';\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst setChildren = R.assoc('children');\n\nconst setHeight = R.assocPath(['box', 'height']);\n\nconst setBreak = R.assocPath(['props', 'break']);\n\nconst breakChildren = (height, node) => {\n  const children = getChildren(node);\n\n  let offset = null;\n  let nextElements = [];\n  const currentElements = [];\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const childTop = getTop(child);\n    const childHeight = getHeight(child);\n    const futureElements = children.slice(i + 1);\n    const shouldBreak = shouldNodeBreak(child, futureElements, height);\n\n    if (shouldBreak) {\n      offset = childTop;\n      nextElements = R.compose(\n        R.prepend(setBreak(false, child)),\n        R.slice(i + 1, Infinity),\n      )(children);\n      break;\n    }\n\n    const [currentChildren, nextChildren, childsOffset] = breakChildren(\n      height,\n      child,\n    );\n\n    if (R.isNil(childsOffset)) {\n      currentElements.push(setChildren(currentChildren, child));\n      continue;\n    }\n\n    offset = childTop + childsOffset;\n\n    currentElements.push(\n      R.compose(\n        setChildren(currentChildren),\n        setHeight(Math.ceil(offset / height) * height - childTop),\n      )(child),\n    );\n\n    nextElements = R.compose(\n      R.prepend(\n        R.compose(\n          setChildren(nextChildren),\n          setHeight(child.box.height - childHeight),\n        )(child),\n      ),\n      R.slice(i + 1, Infinity),\n    )(children);\n\n    break;\n  }\n\n  return [currentElements, nextElements, offset];\n};\n\nconst breakNode = height => node => {\n  const [currentChildren, nextChildren, offset] = breakChildren(height, node);\n\n  if (R.isNil(offset)) return [node];\n\n  const currentNode = R.compose(\n    setChildren(currentChildren),\n    setHeight(Math.ceil(offset / height) * height),\n  )(node);\n\n  const nextNode = R.compose(\n    setChildren(nextChildren),\n    setHeight(node.box.height - offset),\n  )(node);\n\n  return [currentNode, nextNode];\n};\n\nconst breakPage = page => {\n  const pages = [];\n  const height = getContentArea(page);\n\n  let subpages = breakNode(height)(page);\n  let current = subpages[0];\n  let nextPage = subpages[1];\n\n  pages.push(current);\n\n  while (nextPage) {\n    subpages = R.compose(\n      breakNode(height),\n      resolvePageDimensions,\n      setHeight(null),\n    )(nextPage);\n\n    current = subpages[0];\n    nextPage = subpages[1];\n\n    pages.push(current);\n  }\n\n  return pages;\n};\n\nconst resolvePageBreaks = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.compose(\n        R.flatten,\n        R.map(breakPage),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageBreaks;\n","import * as R from 'ramda';\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const [currentChild, nextChild] = splitNode(height, child);\n\n    if (currentChild) currentChildren.push(currentChild);\n    if (nextChild) nextChildren.push(nextChild);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitNode = R.curryN(2, (height, node) => {\n  if (!node) return [null, null];\n\n  const nodeTop = getTop(node);\n  const nodeHeight = getHeight(node);\n  const isOutside = isElementOutside(height, node);\n  const shouldSplit = height < nodeTop + nodeHeight;\n\n  if (isOutside) {\n    const next = R.evolve({ box: { top: R.subtract(R.__, height) } })(node);\n    return [null, next, false];\n  }\n\n  if (shouldSplit) {\n    const [currentChilds, nextChildren] = splitChildren(height, node);\n\n    const current = R.evolve({\n      children: R.always(currentChilds),\n      style: {\n        borderBottomLeftRadius: R.always(0),\n        borderBottomRightRadius: R.always(0),\n      },\n      box: {\n        height: R.when(R.always(shouldSplit), R.always(height - nodeTop)),\n      },\n    })(node);\n\n    const next = R.evolve({\n      children: R.always(nextChildren),\n      style: {\n        borderTopLeftRadius: R.always(0),\n        borderTopRightRadius: R.always(0),\n      },\n      box: {\n        top: R.always(0),\n        height: R.subtract(R.__, height - nodeTop),\n      },\n    })(node);\n\n    return [current, next];\n  }\n\n  return [node, null, false];\n});\n\nexport default splitNode;\n","import * as R from 'ramda';\n\nimport splitNode from '../node/split';\n\nconst getPaddingBottom = R.pathOr(0, ['style', 'paddingBottom']);\n\nconst getWrappingArea = page => {\n  const paddingBottom = getPaddingBottom(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingBottom;\n};\n\nconst splitPage = page => {\n  if (!page) return [];\n\n  const height = getWrappingArea(page);\n  let splittedPage = splitNode(height, page);\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitNode(height, nextPage);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageSplitting = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.compose(\n        R.flatten,\n        R.map(splitPage),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageSplitting;\n","import * as R from 'ramda';\n\nimport { resolvePageSize } from './resolvePageSizes';\nimport resolvePageBreaks from './resolvePageBreaks';\nimport resolvePageSplitting from './resolvePageSplitting';\n\nconst restorePageSize = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageSize('box')),\n    }),\n  ),\n});\n\nconst resolvePageWrapping = R.compose(\n  restorePageSize,\n  resolvePageSplitting,\n  resolvePageBreaks,\n);\n\nexport default resolvePageWrapping;\n","import * as R from 'ramda';\n\nimport isNote from '../node/isNote';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Get node underlying text value\n *\n * @param {Object} node\n * @returns {String} node text content\n */\nconst getNodeText = node =>\n  R.cond([\n    [R.is(String), R.identity],\n    [isTextInstance, R.prop('value')],\n    [\n      R.T,\n      R.compose(\n        getNodesText,\n        R.propOr([], 'children'),\n      ),\n    ],\n  ])(node);\n\n/**\n * Get underlying text value of several nodes\n *\n * @param {Array} nodes\n * @returns {String} nodes text content\n */\nconst getNodesText = R.compose(\n  R.join(''),\n  R.map(getNodeText),\n);\n\n/**\n * Transforms string to text instance\n *\n * @param {String} value\n * @returns {Array} text intance\n */\nconst wrapTextInstance = value => [{ type: 'TEXT_INSTANCE', value }];\n\n/**\n * Cast Note children as a text instance\n *\n * @param {Object} node\n * @returns {Object} node with resolved note children\n */\nconst resolveNoteChildren = node =>\n  R.ifElse(\n    isNote,\n    R.evolve({\n      children: R.compose(\n        wrapTextInstance,\n        getNodesText,\n      ),\n    }),\n    R.evolve({ children: R.map(resolveNoteChildren) }),\n  )(node);\n\nexport default resolveNoteChildren;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.width : value;\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageVerticalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.height : value;\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nconst resolvePagePaddings = page =>\n  R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(page.box),\n      paddingRight: resolvePageHorizontalPadding(page.box),\n      paddingTop: resolvePageVerticalPadding(page.box),\n      paddingBottom: resolvePageVerticalPadding(page.box),\n    }),\n  })(page);\n\n/**\n * Translates all pages percentage paddings in fixed ones\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nexport default R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePagePaddings),\n    }),\n  ),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = matchPercent(value);\n  return match\n    ? match.percent * Math.min(container.width, container.height)\n    : value;\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolvePercentRadius = node =>\n  R.evolve({\n    children: R.map(resolvePercentRadius),\n    style: R.evolve({\n      borderTopLeftRadius: resolveRadius(node.box),\n      borderTopRightRadius: resolveRadius(node.box),\n      borderBottomRightRadius: resolveRadius(node.box),\n      borderBottomLeftRadius: resolveRadius(node.box),\n    }),\n  })(node);\n\nexport default resolvePercentRadius;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nconst transformHeight = pageArea => height => {\n  const match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nconst getPageArea = page => {\n  const pageHeight = R.path(['style', 'height'], page);\n  const pagePaddingTop = R.pathOr(0, ['style', 'paddingTop'], page);\n  const pagePaddingBottom = R.pathOr(0, ['style', 'paddingBottom'], page);\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Checks if page has height\n *\n * @param {Object} page\n * @return {boolean} page has height\n */\nconst hasHeight = R.hasPath(['style', 'height']);\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nconst resolveNodePercentHeight = page => node => {\n  if (hasHeight(page)) {\n    const pageArea = getPageArea(page);\n    return R.evolve({ style: { height: transformHeight(pageArea) } })(node);\n  }\n\n  return node;\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nconst resolvePagePercentHeight = page =>\n  R.evolve({\n    children: R.map(resolveNodePercentHeight(page)),\n  })(page);\n\n/**\n * Transform all page immediate children with percent height to fixed\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nconst resolvePercentHeight = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePagePercentHeight),\n    }),\n  ),\n});\n\nexport default resolvePercentHeight;\n","import * as R from 'ramda';\n\nimport { LINK } from '../constants';\n\n/**\n * Checks if node is link\n *\n * @param {Object} node\n * @returns {Boolean} is node link?\n */\nconst isLink = R.propEq('type', LINK);\n\nexport default isLink;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\nimport isLink from '../node/isLink';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nconst hasRenderProp = R.hasPath(['props', 'render']);\n\n/**\n * Checks if all children of node are text instances\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nconst hasTextInstanceChilds = R.compose(\n  R.all(isTextInstance),\n  R.propOr([], 'children'),\n);\n\n/**\n * If the Link has a strign child or render prop, substitute the instance by a Text,\n * that will ultimately render the inline Link via the textkit PDF renderer.\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nconst resolveLinkSubstitution = node =>\n  R.evolve({\n    children: R.map(\n      R.ifElse(\n        R.both(isLink, R.either(hasRenderProp, hasTextInstanceChilds)),\n        R.assoc('type', TEXT),\n        resolveLinkSubstitution,\n      ),\n    ),\n  })(node);\n\nexport default resolveLinkSubstitution;\n","import * as R from 'ramda';\n\n/**\n * Translates relative coordinates to absolute coordinates\n *\n * @param {Object} root node\n * @returns {Object} root node with absolute coordinates\n */\nconst resolveAbsoluteCoordinates = node => {\n  const top = R.pathOr(0, ['box', 'top'], node);\n  const left = R.pathOr(0, ['box', 'left'], node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveAbsoluteCoordinates,\n        R.evolve({\n          box: R.evolve({\n            top: R.add(top),\n            bottom: R.add(top),\n            left: R.add(left),\n            right: R.add(left),\n          }),\n          origin: R.evolve({\n            top: R.add(top),\n            left: R.add(left),\n          }),\n        }),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveAbsoluteCoordinates;\n","import * as R from 'ramda';\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async value => {\n  for (const fn of R.reverse(fns)) value = await fn(value);\n  return value;\n};\n\nexport default asyncCompose;\n","import * as R from 'ramda';\n\nimport resolveAssets from './resolveAssets';\nimport resolveStyles from './resolveStyles';\nimport resolveZIndex from './resolveZIndex';\nimport resolveRulers from './resolveRulers';\nimport resolveOrigins from './resolveOrigins';\nimport resolvePageSizes from './resolvePageSizes';\nimport resolveDimensions from './resolveDimensions';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport resolvePageMargins from './resolvePageMargins';\nimport resolvePageWrapping from './resolvePageWrapping';\nimport resolveNoteChildren from './resolveNoteChildren';\nimport resolvePagePaddings from './resolvePagePaddings';\nimport resolvePercentRadius from './resolvePercentRadius';\nimport resolvePercentHeight from './resolvePercentHeight';\nimport resolveLinkSubstitution from './resolveLinkSubstitution';\nimport resolveAbsoluteCoordinates from './resolveAbsoluteCoordinates';\nimport asyncCompose from '../utils/asyncCompose';\n\nconst startTimer = name => R.tap(() => console.time(name));\nconst endTimer = name => R.tap(() => console.timeEnd(name));\n\nconst resolvePageSizeStyle = resolvePageSizes('style');\n\nconst layout = asyncCompose(\n  resolveAbsoluteCoordinates,\n  resolveRulers,\n  resolveOrigins,\n  endTimer('resolvePageBreaks'),\n  resolvePageWrapping,\n  startTimer('resolvePageBreaks'),\n  resolveTextLayout,\n  resolvePercentRadius,\n  resolveZIndex,\n  resolveDimensions,\n  resolveAssets,\n  resolveInheritance,\n  resolvePercentHeight,\n  resolvePagePaddings,\n  resolveStyles,\n  resolveNoteChildren,\n  resolveLinkSubstitution,\n  resolvePageMargins,\n  resolvePageSizeStyle,\n);\n\nexport default layout;\n","import * as R from 'ramda';\n\nconst save = ctx => R.tap(() => ctx.save());\n\nexport default save;\n","import * as R from 'ramda';\n\nconst restore = ctx => R.tap(() => ctx.restore());\n\nexport default restore;\n","import * as R from 'ramda';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\n\nconst renderText = (ctx, node) => {\n  const { top, left } = node.box;\n  const paddingTop = R.pathOr(0, ['box', 'paddingTop'], node);\n  const paddingLeft = R.pathOr(0, ['box', 'paddingLeft'], node);\n  const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n\n  ctx.save();\n  ctx.translate(left + paddingLeft, top + paddingTop - initialY);\n  PDFRenderer.render(ctx, [node.lines]);\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderText);\n","import * as R from 'ramda';\n\nconst renderPage = (ctx, node) => {\n  const { width, height } = node.box;\n\n  ctx.addPage({ size: [width, height], margin: 0 });\n\n  return node;\n};\n\nexport default R.curryN(2, renderPage);\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\n/**\n * Add protocol th URL if valid\n *\n * @param {String} value url\n * @returns {String} corrected url\n */\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import * as R from 'ramda';\n\nimport { getURL } from '../utils/url';\n\nconst getSource = R.compose(\n  getURL,\n  R.either(R.path(['props', 'src']), R.path(['props', 'href'])),\n);\n\nexport default getSource;\n","import * as R from 'ramda';\n\nimport getSource from '../link/getSource';\n\nconst renderLink = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n  const src = getSource(node);\n\n  ctx.link(left, top, width, height, src);\n\n  return node;\n};\n\nexport default R.curryN(2, renderLink);\n","import * as R from 'ramda';\n\nconst renderNote = (ctx, node) => {\n  const { top, left } = node.box;\n  const value = node.children[0] ? node.children[0].value : '';\n\n  ctx.note(left, top, 0, 0, value);\n\n  return node;\n};\n\nexport default R.curryN(2, renderNote);\n","import * as R from 'ramda';\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipNode = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomRightRadius = 0,\n    borderBottomLeftRadius = 0,\n  } = node.style;\n\n  // Border top\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const ctr = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - ctr,\n    top,\n    left + width,\n    top + ctr,\n    left + width,\n    top + rtr,\n  );\n\n  // Border right\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const cbr = rbr * (1.0 - KAPPA);\n\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - cbr,\n    left + width - cbr,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Border bottom\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  const cbl = rbl * (1.0 - KAPPA);\n\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + cbl,\n    top + height,\n    left,\n    top + height - cbl,\n    left,\n    top + height - rbl,\n  );\n\n  // Border left\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const ctl = rtl * (1.0 - KAPPA);\n\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  return node;\n};\n\nexport default R.curryN(2, clipNode);\n","import matchPercent from '../utils/matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nexport default resolveObjectFit;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport warning from '../utils/warning';\nimport resolveObjectFit from '../image/resolveObjectFit';\n\nconst drawImage = ctx => node => {\n  const { left, top } = node.box;\n  const { opacity, objectPositionX, objectPositionY } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingRight = node.box.paddingRight || 0;\n  const paddingBottom = node.box.paddingBottom || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  const { width, height, xOffset, yOffset } = resolveObjectFit(\n    node.style.objectFit,\n    node.box.width - paddingLeft - paddingRight,\n    node.box.height - paddingTop - paddingBottom,\n    node.image.width,\n    node.image.height,\n    objectPositionX,\n    objectPositionY,\n  );\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(\n          node.image.data,\n          left + paddingLeft + xOffset,\n          top + paddingTop + yOffset,\n          {\n            width,\n            height,\n          },\n        );\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.src}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(ctx) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        ctx[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import * as R from 'ramda';\n\nimport painter from '../canvas/painter';\nimport warning from '../utils/warning';\n\nconst defaultsZero = R.pathOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  warning(\n    availableWidth && availableHeight,\n    'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n  );\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderCanvas);\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\nimport {\n  RULER_WIDTH,\n  RULER_COLOR,\n  LINE_COLOR,\n  GRID_COLOR,\n  LINE_WIDTH,\n  RULER_FONT_SIZE,\n  DEFAULT_RULER_STEPS,\n} from '../constants';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst getVerticalSteps = page => {\n  const value =\n    page.props.horizontalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const width = page.box.width - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return width / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst getHorizontalSteps = page => {\n  const value =\n    page.props.verticalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const height =\n        page.box.height - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return height / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst renderVerticalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasHorizontalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(width, getVerticalSteps(page));\n\n  ctx\n    .rect(offset, 0, width, RULER_WIDTH)\n    .fill(RULER_COLOR)\n    .moveTo(offset, RULER_WIDTH)\n    .lineTo(width, RULER_WIDTH)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(offset + step, 0)\n      .lineTo(offset + step, RULER_WIDTH)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, offset + step + 1, 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(offset + step, RULER_WIDTH)\n        .lineTo(offset + step, height)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderHorizontalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasVerticalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(height, getHorizontalSteps(page));\n\n  ctx\n    .rect(0, offset, RULER_WIDTH, height)\n    .fill(RULER_COLOR)\n    .moveTo(RULER_WIDTH, hasHorizontalRuler(page) ? RULER_WIDTH : 0)\n    .lineTo(RULER_WIDTH, height)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(0, offset + step)\n      .lineTo(RULER_WIDTH, offset + step)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, 1, offset + step + 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(RULER_WIDTH, offset + step)\n        .lineTo(width, offset + step)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderRulers = (ctx, page) => {\n  ctx\n    .save()\n    .lineWidth(LINE_WIDTH)\n    .fontSize(RULER_FONT_SIZE)\n    .opacity(1);\n\n  R.compose(\n    R.when(hasVerticalRuler, renderVerticalRuler(ctx)),\n    R.when(hasHorizontalRuler, renderHorizontalRuler(ctx)),\n  )(page);\n\n  ctx.restore();\n\n  return page;\n};\n\nexport default R.curryN(2, renderRulers);\n","import * as R from 'ramda';\n\nconst getDocumentProp = target => (or, prop) =>\n  R.pathOr(or, ['children', 0, 'props', prop], target);\n\nconst setPDFMetadata = target => (key, value) => {\n  if (value) target.info[key] = value;\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} root document root\n */\nconst addMetadata = (ctx, root) => {\n  const getProp = getDocumentProp(root);\n  const setProp = setPDFMetadata(ctx);\n\n  const title = getProp(null, 'title');\n  const author = getProp(null, 'author');\n  const subject = getProp(null, 'subject');\n  const keywords = getProp(null, 'keywords');\n  const creator = getProp('react-pdf', 'creator');\n  const producer = getProp('react-pdf', 'producer');\n\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n\n  return root;\n};\n\nexport default R.curryN(2, addMetadata);\n","import * as R from 'ramda';\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n\nconst shouldDebug = R.pathEq(['props', 'debug'], true);\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nconst debugContent = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    paddingLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n  } = node.box;\n\n  ctx\n    .fillColor(CONTENT_COLOR)\n    .opacity(0.5)\n    .rect(\n      left + paddingLeft,\n      top + paddingTop,\n      width - paddingLeft - paddingRight,\n      height - paddingTop - paddingBottom,\n    )\n    .fill();\n};\n\nconst debugPadding = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    paddingLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n  } = node.box;\n\n  ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n  // Padding top\n  ctx\n    .rect(\n      left + paddingLeft,\n      top,\n      width - paddingRight - paddingLeft,\n      paddingTop,\n    )\n    .fill();\n\n  // Padding left\n  ctx.rect(left, top, paddingLeft, height).fill();\n\n  // Padding right\n  ctx.rect(left + width - paddingRight, top, paddingRight, height).fill();\n\n  // Padding bottom\n  ctx\n    .rect(\n      left + paddingLeft,\n      top + height - paddingBottom,\n      width - paddingRight - paddingLeft,\n      paddingBottom,\n    )\n    .fill();\n};\n\nconst debugMargin = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n  } = node.box;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n  // Margin top\n  ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n  // Margin left\n  ctx\n    .rect(\n      left - marginLeft,\n      top - marginTop,\n      marginLeft,\n      height + marginTop + marginBottom,\n    )\n    .fill();\n\n  // Margin right\n  ctx\n    .rect(\n      left + width,\n      top - marginTop,\n      marginRight,\n      height + marginTop + marginBottom,\n    )\n    .fill();\n\n  // Margin bottom\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nconst debugText = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n  } = node.box;\n\n  const roundedWidth = Math.round(width + marginLeft + marginRight);\n  const roundedHeight = Math.round(height + marginTop + marginBottom);\n\n  ctx\n    .fontSize(4)\n    .opacity(1)\n    .fillColor('black')\n    .text(\n      `${roundedWidth} x ${roundedHeight}`,\n      left - marginLeft,\n      Math.max(top - marginTop - 4, 1),\n    );\n};\n\nconst debugOrigin = (ctx, node) => {\n  if (node.origin) {\n    ctx\n      .circle(node.origin.left, node.origin.top, 3)\n      .fill('red')\n      .circle(node.origin.left, node.origin.top, 5)\n      .stroke('red');\n  }\n};\n\nconst renderDebug = (ctx, node) => {\n  if (!shouldDebug(node)) return node;\n\n  ctx.save();\n\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderDebug);\n","import * as R from 'ramda';\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst shouldRenderBorders = node =>\n  node.box &&\n  (node.box.borderTopWidth ||\n    node.box.borderRightWidth ||\n    node.box.borderBottomWidth ||\n    node.box.borderLeftWidth);\n\nconst renderBorders = (ctx, node) => {\n  if (!shouldRenderBorders(node)) return node;\n\n  const {\n    width,\n    height,\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = node.box;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = node.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderBorders);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\n\nconst drawBackground = ctx => node => {\n  if (node.box && node.style.backgroundColor) {\n    const { top, left, width, height } = node.box;\n\n    ctx\n      .fillOpacity(node.style.opacity || 1)\n      .fillColor(node.style.backgroundColor)\n      .rect(left, top, width, height)\n      .fill();\n  }\n\n  return node;\n};\n\nconst shouldRenderBackground = R.hasPath(['style', 'backgroundColor']);\n\nconst renderBackground = (ctx, node) => {\n  R.when(\n    shouldRenderBackground,\n    R.compose(\n      restore(ctx),\n      drawBackground(ctx),\n      clipNode(ctx),\n      save(ctx),\n    ),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderBackground);\n","import * as R from 'ramda';\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\n\nconst getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    ctx.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    ctx.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    ctx.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    ctx.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    ctx.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin,\n    });\n  } else if (/matrix/g.test(transform)) {\n    ctx.transform(...getMatrix(transform));\n  }\n};\n\nconst applyTransformations = (ctx, node) => {\n  if (!node.origin) return node;\n\n  let match;\n  const re = /[a-zA-Z]+\\([^)]+\\)/g;\n  const origin = [node.origin.left, node.origin.top];\n  const transform = (node.style && node.style.transform) || '';\n\n  while ((match = re.exec(transform)) != null) {\n    applySingleTransformation(ctx, match[0], origin);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, applyTransformations);\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport save from './save';\nimport restore from './restore';\nimport isText from '../node/isText';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isNote from '../node/isNote';\nimport isLink from '../node/isLink';\nimport isCanvas from '../node/isCanvas';\nimport renderText from './renderText';\nimport renderPage from './renderPage';\nimport renderLink from './renderLink';\nimport renderNote from './renderNote';\nimport renderImage from './renderImage';\nimport renderCanvas from './renderCanvas';\nimport renderRulers from './renderRulers';\nimport addMetadata from './addMetadata';\nimport renderDebug from './renderDebug';\nimport renderBorders from './renderBorders';\nimport renderBackground from './renderBackground';\nimport applyTransformations from './applyTransformations';\n\nconst isNotText = R.complement(isText);\n\nconst renderNode = ctx => node => {\n  const renderChildren = R.tap(\n    R.compose(\n      R.forEach(renderNode(ctx)),\n      R.pathOr([], ['children']),\n    ),\n  );\n\n  return R.compose(\n    restore(ctx),\n    renderDebug(ctx),\n    R.when(isNotText, renderChildren),\n    R.cond([\n      [isText, renderText(ctx)],\n      [isLink, renderLink(ctx)],\n      [isNote, renderNote(ctx)],\n      [isImage, renderImage(ctx)],\n      [isCanvas, renderCanvas(ctx)],\n      [R.T, R.identity],\n    ]),\n    renderBorders(ctx),\n    renderBackground(ctx),\n    applyTransformations(ctx),\n    save(ctx),\n    R.when(isPage, renderPage(ctx)),\n  )(node);\n};\n\nconst renderDocument = ctx =>\n  R.compose(\n    R.forEach(\n      R.compose(\n        renderRulers(ctx),\n        renderNode(ctx),\n      ),\n    ),\n    R.pathOr([], ['children']),\n  );\n\nconst renderRoot = ctx =>\n  R.compose(\n    R.forEach(renderDocument(ctx)),\n    R.pathOr([], ['children']),\n  );\n\nconst render = (ctx, root) => {\n  addMetadata(ctx)(root);\n  renderRoot(ctx)(root);\n\n  ctx.end();\n  Font.reset();\n\n  return ctx;\n};\n\nexport default render;\n","import flatten from './flatten';\n\nconst create = styles => styles;\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  flatten,\n  absoluteFillObject,\n};\n","import BlobStream from 'blob-stream';\nimport PDFDocument from '@react-pdf/pdfkit';\n\nimport createRenderer from './renderer';\nimport layoutDocument from './layout';\nimport renderPDF from './pdf/render';\nimport StyleSheet from './stylesheet';\nimport Font from './font';\nimport { version } from '../package.json';\nimport {\n  VIEW,\n  TEXT,\n  LINK,\n  PAGE,\n  NOTE,\n  IMAGE,\n  DOCUMENT,\n  CANVAS,\n} from './constants';\n\nconst View = VIEW;\nconst Text = TEXT;\nconst Link = LINK;\nconst Page = PAGE;\nconst Note = NOTE;\nconst Image = IMAGE;\nconst Document = DOCUMENT;\nconst Canvas = CANVAS;\n\nconst pdf = input => {\n  let _isDirty = true;\n\n  const container = { type: 'ROOT', children: [] };\n  const PDFRenderer = createRenderer(markAsDirty);\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return _isDirty;\n  }\n\n  function markAsDirty() {\n    _isDirty = true;\n  }\n\n  function callOnRender(params = {}) {\n    // if (container.document.props.onRender) {\n    // const layoutData = container.document.getLayoutData();\n    // container.document.props.onRender({ ...params, layoutData });\n    // }\n  }\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false });\n\n    // let layout;\n\n    // for (let i = 0; i < 10; i++) {\n    console.time('layout');\n    const layout = await layoutDocument(container);\n    console.timeEnd('layout');\n    // }\n\n    const instance = renderPDF(ctx, layout);\n\n    _isDirty = false;\n\n    // console.log(layout);\n\n    return instance;\n  };\n\n  const renderWithContext = async ctx => {\n    const layout = await layoutDocument(container);\n    const instance = renderPDF(ctx, layout);\n    _isDirty = false;\n\n    return instance;\n  };\n\n  const layout = async () => {\n    return layoutDocument(container);\n  };\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  // async function toBuffer() {\n  //   await container.render();\n\n  //   callOnRender();\n\n  //   return container.instance;\n  // }\n\n  // function toString() {\n  //   let result = '';\n  //   container.render();\n\n  //   return new Promise((resolve, reject) => {\n  //     try {\n  //       container.instance.on('data', function(buffer) {\n  //         result += buffer;\n  //       });\n\n  //       container.instance.on('end', function() {\n  //         callOnRender({ string: result });\n  //         resolve(result);\n  //       });\n  //     } catch (error) {\n  //       reject(error);\n  //     }\n  //   });\n  // }\n\n  return {\n    layout,\n    isDirty,\n    container,\n    updateContainer,\n    renderWithContext,\n    // toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  pdf,\n};\n","import React from 'react';\n\nconst svgpath = require('svgpath');\n\nimport { pdf } from './index';\n\nconst queue = require('queue');\n\nconst canvasInstance = canvas => {\n  const instance = {};\n  const images = {};\n  const ctx = canvas.getContext('2d');\n\n  let fillColor = 'white';\n\n  const nil = () => {\n    return instance;\n  };\n\n  instance.info = {};\n  instance.end = nil;\n  instance.font = nil;\n\n  instance.translate = (x, y) => {\n    ctx.translate(x, y);\n    return instance;\n  };\n\n  instance.addPage = ({ size }) => {\n    canvas.width = size[0];\n    canvas.height = size[1];\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  instance.save = () => {\n    ctx.save();\n    return instance;\n  };\n\n  instance.restore = () => {\n    ctx.restore();\n    return instance;\n  };\n\n  instance.moveTo = (x, y) => {\n    ctx.moveTo(x, y);\n    return instance;\n  };\n\n  instance.lineTo = (x, y) => {\n    ctx.lineTo(x, y);\n    return instance;\n  };\n\n  instance.bezierCurveTo = (a, b, c, d, e, f) => {\n    ctx.bezierCurveTo(a, b, c, d, e, f);\n    return instance;\n  };\n\n  instance.closePath = () => {\n    ctx.closePath();\n    return instance;\n  };\n\n  instance.clip = () => {\n    ctx.clip();\n    return instance;\n  };\n\n  instance.fillColor = color => {\n    fillColor = color;\n    return instance;\n  };\n\n  instance.rect = (a, b, c, d) => {\n    ctx.rect(a, b, c, d);\n    return instance;\n  };\n\n  instance.fill = () => {\n    ctx.fillStyle = fillColor;\n    ctx.fill();\n    return instance;\n  };\n\n  instance.fillOpacity = opacity => {\n    ctx.globalAlpha = opacity;\n    return instance;\n  };\n\n  instance._addGlyphs = (glyphs, positions) => {\n    let xAdvance = 0;\n    const fontSize = 20;\n    const unitsPerEm = 2048;\n\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      const position = positions[i];\n\n      const path = svgpath(glyph.path.toSVG())\n        .scale(1, -1)\n        .scale(fontSize / unitsPerEm)\n        .translate(xAdvance, 0)\n        .toString();\n\n      xAdvance += position.xAdvance;\n\n      ctx.fillStyle = '#000';\n\n      const p = new Path2D(path);\n\n      ctx.stroke(p);\n      ctx.fill(p);\n    }\n\n    return instance;\n  };\n\n  instance.image = (data, x, y, { width, height }) => {\n    const base64Data = btoa(String.fromCharCode.apply(null, data));\n\n    if (images[base64Data]) {\n      ctx.drawImage(images[base64Data], x, y, width, height);\n    } else {\n      const img = document.createElement('img');\n      img.src = 'data:image/png;base64,' + base64Data;\n\n      images[base64Data] = img;\n\n      img.onload = () => {\n        ctx.drawImage(img, x, y, width, height);\n      };\n    }\n\n    return instance;\n  };\n\n  instance.clear = () => {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return instance;\n};\n\nexport class CanvasViewer extends React.Component {\n  ctx = null;\n  instance = pdf();\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n  state = { layout: null, error: null };\n\n  componentDidMount() {\n    this.ctx = canvasInstance(this.canvas);\n    this.queueDocumentRender(this.props.children);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.queueDocumentRender(this.props.children);\n    }\n  }\n\n  queueDocumentRender(doc) {\n    this.renderQueue.splice(0, this.renderQueue.length, () => {\n      this.instance.updateContainer(doc);\n\n      if (this.instance.isDirty() && !this.state.error) {\n        return this.instance.renderWithContext(this.ctx);\n      }\n\n      return Promise.resolve();\n    });\n  }\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = layout => {\n    this.setState({ layout });\n  };\n\n  render() {\n    return (\n      <canvas\n        height={900}\n        id=\"myCanvas\"\n        ref={ref => (this.canvas = ref)}\n        style={{ border: '1px solid black' }}\n        width={900}\n      />\n    );\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { CanvasViewer } from './canvas';\n\nimport warning from '../src/utils/warning';\n\nconst queue = require('queue');\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  // createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  instance = pdf();\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n  state = { blob: null, url: null, loading: true, error: null };\n\n  componentDidMount() {\n    this.queueDocumentRender(this.props.document);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.document !== this.props.document) {\n      this.queueDocumentRender(this.props.document);\n    }\n  }\n\n  queueDocumentRender(doc) {\n    this.renderQueue.splice(0, this.renderQueue.length, () => {\n      this.instance.updateContainer(doc);\n\n      if (this.instance.isDirty() && !this.state.error) {\n        return this.instance.toBlob();\n      }\n\n      return Promise.resolve();\n    });\n  }\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = blob => {\n    const oldBlobUrl = this.state.url;\n\n    this.setState(\n      { blob, url: URL.createObjectURL(blob), loading: false },\n      () => URL.revokeObjectURL(oldBlobUrl),\n    );\n  };\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n} from './index';\n\nexport { CanvasViewer } from './canvas';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  CanvasViewer,\n  BlobProvider,\n  PDFDownloadLink,\n};\n"],"names":["propsEqual","a","b","oldPropsKeys","Object","keys","newPropsKeys","length","i","propName","emptyObject","createRenderer","onChange","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","child","children","push","createInstance","type","style","props","box","createTextInstance","text","rootContainerInstance","value","finalizeInitialChildren","element","getPublicInstance","instance","prepareForCommit","prepareUpdate","oldProps","newProps","resetAfterCommit","c","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","insertBefore","beforeChild","index","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","VIEW","TEXT","LINK","PAGE","NOTE","IMAGE","DOCUMENT","CANVAS","TEXT_INSTANCE","DPI","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","PORTRAIT","LANDSCAPE","INHERITED_PROPERTIES","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","BOX_MODEL_REGEX","OBJECT_POSITION_REGEX","BORDER_SHORTHAND_REGEX","TRANSFORM_ORIGIN_REGEX","matchBoxModel","R","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isFontWeightStyle","key","match","isBorderStyle","isBoxModelStyle","isObjectPositionStyle","isTransformOriginStyle","processBorders","Error","processBoxModel","processFontWeight","toLowerCase","processObjectPosition","transformOffsetKeywords","processTransformOrigin","result","matchNumber","String","castFloat","v","parseFloat","transformStyles","propsArray","resolvedStyle","fetchFont","src","options","fetch","response","buffer","arrayBuffer","constructor","name","Buffer","from","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","headers","body","method","fontkit","create","Promise","resolve","reject","open","err","Font","family","sources","register","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","lt","gt","emojiSource","registerEmojiSource","url","format","getEmojiSource","hyphenationCallback","registerHyphenationCallback","callback","getHyphenationCallback","printWarning","args","argIndex","message","replace","console","error","x","__DEV__","process","env","NODE_ENV","warning","condition","undefined","fonts","font","getRegisteredFonts","getRegisteredFontFamilies","getFont","isStandard","standardFonts","includes","reset","hasOwnProperty","clear","emoji","hyphenation","isImage","PNG","isValid","e","MARKERS","JPEG","width","height","readUInt16BE","marker","pos","isBuffer","createCache","limit","cache","get","set","shift","IMAGE_CACHE","getAbsoluteLocalPath","parse","protocol","auth","host","port","hostname","pathname","path","absolutePath","fetchLocalFile","fs","readFile","fetchRemoteFile","uri","isValidFormat","lower","guessFormat","isCompatibleBase64","test","getImage","extension","resolveBase64Image","exec","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","cacheKey","toString","image","getSource","fetchImage","node","warn","emojis","regex","emojiRegex","reflect","promise","then","makeFetchEmojiImage","_removeNoColor","getCodePoints","string","Array","map","char","codePointAt","join","buildEmojiUrl","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragments","fragment","lastIndex","emojiSize","attributes","fontSize","chunk","slice","fromCharCode","attachment","yOffset","Math","floor","fetchAssets","listToExplore","forEach","childNode","resolveAssets","p","all","compact","Boolean","isArray","isNotArray","castArray","mergeStyles","styles","reduce","acc","flatten","prototype","styleShorthands","margin","marginTop","marginRight","marginBottom","marginLeft","marginHorizontal","marginVertical","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandedKeys","expandStyles","expandedProps","call","parseValue","unit","transformUnit","container","scalar","transformUnits","resolveMediaQueries","matchMedia","resolveStyles","flattenStyles","resolveNodeStyles","page","resolvePageStyles","pageBox","resolveZIndex","hasVerticalRuler","hasHorizontalRuler","adjustPageSize","top","left","resolveRulers","isPercent","matchPercent","percent","absValue","abs","absPercent","getTransformStyle","getOrigin","percentX","percentY","offsetX","offsetY","resolveNodeOrigin","resolveOrigin","VALID_ORIENTATIONS","getOrientation","isLandscape","toSizeObject","flipSizeObject","getStringSize","getNumberSize","throwInvalidError","size","getSize","Number","assocIfNil","target","resolvePageSize","getPageSize","resolvePageSizes","isNotNil","firstPass","fns","fn","getComputedMargin","edge","yogaNode","_yogaNode","getMargin","Yoga","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedPadding","getPadding","getTop","getComputedTop","getRight","getComputedRight","getBottom","getComputedBottom","getLeft","getComputedLeft","getPosition","right","bottom","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","upperFirst","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","setFlex","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","setOverflow","yogaValue","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","setFlexWrap","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","setFlexGrow","setFlexBasis","setAlign","ALIGN_FLEX_START","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_STRETCH","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","ALIGN_AUTO","setAlignSelf","setFlexShrink","setAspectRatio","setAlignContent","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","isRow","isRowReverse","isColumnReverse","setFlexDirection","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_COLUMN","setJustifyContent","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","JUSTIFY_FLEX_START","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setMargin","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","isText","isNote","isPage","isCanvas","StandardFont","PDFFont","layout","str","encode","encoded","positions","stringIndices","_","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","fontSubstitution","runs","lastFont","run","defaultFont","start","end","shouldFallback","scale","unitsPerEm","capitalize","l","toUpperCase","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","isTextInstance","PREPROCESSORS","transformText","transformation","getFragments","color","backgroundColor","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","opacity","obj","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","getAttributedString","AttributedString","fromFragments","engines","linebreaker","justification","scriptItemizer","wordHyphenation","engine","layoutEngine","getContainer","maxLines","textOverflow","y","Infinity","truncateMode","getLayoutOptions","hyphenationPenalty","shrinkWhitespaceFactor","before","after","layoutText","linesWidth","lines","max","line","linesHeight","measureText","widthMode","heightMode","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","min","getRatio","isHeightAuto","SAFETY_HEIGHT","measureImage","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","getMax","measureCtx","ctx","points","nil","addPoint","moveTo","rect","w","h","ellipse","rx","ry","polygon","lineTo","circle","roundedRect","lineWidth","bezierCurveTo","quadraticCurveTo","rotate","translate","dash","clip","save","fill","stroke","lineCap","restore","lineJoin","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","getHeight","measureCanvas","paint","YOGA_NODE","YOGA_CONFIG","Config","setPointScaleFactor","setNodeHeight","setYogaValues","minWidth","maxWidth","minHeight","maxHeight","position","display","flexDirection","alignSelf","alignContent","justifyContent","flexWrap","overflow","aspectRatio","flex","flexBasis","flexGrow","flexShrink","insertYogaNodes","parent","insertChild","getChildCount","setMeasureFunc","isNotText","isNotNote","isLayoutElement","isNotTextInstance","createYogaNodes","Node","createWithConfig","calculateLayout","persistDimensions","destroyYogaNodes","n","destroy","resolvePageDimensions","resolveDimensions","shouldLayoutText","resolveTextLayout","getInheritStyles","resolveInheritance","inheritStyles","removeMargins","resolvePageMargins","getNodesHeight","nodes","getWrap","getBreak","getMinPresenceAhead","defaultPresenceAhead","getPresenceAhead","elements","isElementInside","presenceAhead","shouldBreak","futureElements","minPresenceAhead","futureHeight","shouldSplit","shouldWrap","getPaddingBottom","getContentArea","getChildren","setChildren","setBreak","breakChildren","offset","nextElements","currentElements","childTop","childHeight","shouldNodeBreak","currentChildren","nextChildren","childsOffset","ceil","breakNode","currentNode","nextNode","breakPage","pages","subpages","current","nextPage","resolvePageBreaks","isElementOutside","splitNodes","splitNode","currentChild","nextChild","splitChildren","availableHeight","nodeTop","nodeHeight","isOutside","next","currentChilds","getWrappingArea","splitPage","splittedPage","resolvePageSplitting","restorePageSize","resolvePageWrapping","getNodeText","getNodesText","wrapTextInstance","resolveNoteChildren","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolvePagePaddings","resolveRadius","resolvePercentRadius","transformHeight","getPageArea","pageHeight","pagePaddingTop","pagePaddingBottom","hasHeight","resolveNodePercentHeight","resolvePagePercentHeight","resolvePercentHeight","isLink","hasRenderProp","hasTextInstanceChilds","resolveLinkSubstitution","resolveAbsoluteCoordinates","origin","asyncCompose","startTimer","time","endTimer","timeEnd","resolvePageSizeStyle","resolveOrigins","renderText","initialY","PDFRenderer","render","renderPage","addPage","PROTOCOL_REGEXP","getURL","renderLink","renderNote","note","KAPPA","sqrt","clipNode","rtr","ctr","rbr","cbr","rbl","cbl","rtl","ctl","closePath","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","drawImage","objectFit","renderImage","availableMethods","painter","prop","defaultsZero","renderCanvas","availableWidth","range","steps","matchPercentage","getVerticalSteps","horizontalRulerSteps","rulerSteps","percentage","getHorizontalSteps","verticalRulerSteps","renderVerticalRuler","hRange","step","round","renderHorizontalRuler","renderRulers","getDocumentProp","or","setPDFMetadata","info","addMetadata","root","getProp","setProp","title","author","subject","keywords","creator","producer","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","shouldDebug","debugContent","debugPadding","debugMargin","debugText","roundedWidth","roundedHeight","debugOrigin","renderDebug","clipBorderTop","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","fillBorderTop","space","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","shouldRenderBorders","renderBorders","drawBackground","shouldRenderBackground","renderBackground","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","applyTransformations","re","renderNode","renderChildren","renderDocument","renderRoot","absoluteFillObject","hairlineWidth","View","Text","Link","Page","Note","Image","Document","Canvas","pdf","input","_isDirty","markAsDirty","mountNode","createContainer","updateContainer","isDirty","PDFDocument","autoFirstPage","layoutDocument","renderPDF","renderWithContext","doc","toBlob","stream","pipe","BlobStream","on","blob","callOnRender","svgpath","require","queue","canvasInstance","canvas","images","getContext","clearRect","d","f","fillStyle","globalAlpha","_addGlyphs","xAdvance","toSVG","Path2D","base64Data","btoa","apply","img","document","createElement","onload","CanvasViewer","renderQueue","autostart","concurrency","state","onRenderFailed","setState","onRenderSuccessful","componentDidMount","queueDocumentRender","componentDidUpdate","prevProps","ref","React","Component","flatStyles","stylesArray","InternalBlobProvider","oldBlobUrl","URL","createObjectURL","revokeObjectURL","PureComponent","BlobProvider","PDFViewer","className","innerRef","PDFDownloadLink","fileName","downloadOnIE","window","navigator","msSaveBlob","params","version","StyleSheet"],"mappings":"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"}