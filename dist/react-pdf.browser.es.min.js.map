{"version":3,"file":"react-pdf.browser.es.min.js","sources":["../src/utils/propsEqual.js","../src/font/emoji.js","../src/font/hyphenation.js","../src/renderer.js","../src/constants.js","../src/stylesheet/transformStyles.js","../src/font/font.js","../src/font/standard.js","../src/utils/warning.js","../src/font/index.js","../src/node/isImage.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/image/resolveImage.js","../src/image/getSource.js","../src/image/fetchImage.js","../src/text/emoji.js","../src/layout/resolveAssets.js","../src/stylesheet/flatten.js","../src/stylesheet/expandStyles.js","../src/stylesheet/transformUnits.js","../src/stylesheet/resolveMediaQueries.js","../src/layout/resolveStyles.js","../src/node/hasVerticalRuler.js","../src/node/hasHorizontalRuler.js","../src/layout/resolveRulers.js","../src/utils/matchPercent.js","../src/node/getOrigin.js","../src/layout/resolveOrigins.js","../src/page/getOrientation.js","../src/page/isLandscape.js","../src/page/getSize.js","../src/utils/assocIfNil.js","../src/layout/resolvePageSizes.js","../src/utils/firstPass.js","../src/node/getMargin.js","../src/node/getPadding.js","../src/node/getPosition.js","../src/node/getDimension.js","../src/node/getBorderWidth.js","../src/utils/upperFirst.js","../src/node/setYogaValue.js","../src/node/setFlex.js","../src/node/setFlexGrow.js","../src/node/setFlexBasis.js","../src/node/setAlign.js","../src/node/setAlignSelf.js","../src/node/setFlexShrink.js","../src/node/setAlignContent.js","../src/node/setFlexDirection.js","../src/node/setMargin.js","../src/node/setPadding.js","../src/node/setBorderWidth.js","../src/node/setPosition.js","../src/node/setDimension.js","../src/node/isText.js","../src/node/isNote.js","../src/node/isPage.js","../src/node/isCanvas.js","../src/text/standardFont.js","../src/text/fontSubstitution.js","../src/text/ignorableChars.js","../src/node/isTextInstance.js","../src/text/getAttributedString.js","../src/utils/capitalize.js","../src/text/layoutText.js","../src/text/linesWidth.js","../src/text/linesHeight.js","../src/text/measureText.js","../src/image/getRatio.js","../src/page/isHeightAuto.js","../src/image/measureImage.js","../src/canvas/measureCanvas.js","../src/layout/resolveDimensions.js","../src/layout/index.js","../src/node/setPositionType.js","../src/node/setDisplay.js","../src/node/setJustifyContent.js","../src/node/setFlexWrap.js","../src/node/setOverflow.js","../src/node/setAspectRatio.js","../src/layout/resolveTextLayout.js","../src/layout/resolveInheritance.js","../src/node/removeMargins.js","../src/layout/resolvePageMargins.js","../src/node/shouldBreak.js","../src/node/getNodesHeight.js","../src/page/getContentArea.js","../src/layout/resolvePageBreaks.js","../src/node/split.js","../src/layout/resolvePageSplitting.js","../src/layout/resolvePageWrapping.js","../src/layout/resolveNoteChildren.js","../src/layout/resolvePagePaddings.js","../src/layout/resolvePercentRadius.js","../src/layout/resolvePercentHeight.js","../src/node/isLink.js","../src/layout/resolveLinkSubstitution.js","../src/utils/asyncCompose.js","../src/layout/resolveAbsoluteCoordinates.js","../src/layout/resolveZIndex.js","../src/pdf/save.js","../src/pdf/restore.js","../src/pdf/renderText.js","../src/pdf/renderPage.js","../src/utils/url.js","../src/link/getSource.js","../src/pdf/renderLink.js","../src/pdf/renderNote.js","../src/pdf/clipNode.js","../src/image/resolveObjectFit.js","../src/pdf/renderImage.js","../src/canvas/painter.js","../src/pdf/renderCanvas.js","../src/pdf/renderRulers.js","../src/pdf/addMetadata.js","../src/pdf/renderDebug.js","../src/pdf/renderBorders.js","../src/pdf/renderBackground.js","../src/pdf/applyTransformations.js","../src/pdf/render.js","../src/stylesheet/index.js","../src/index.js","../src/canvas.js","../src/dom.js"],"sourcesContent":["/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\n// import { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = onChange => {\n  return ReactFiberReconciler({\n    supportsMutation: true,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit(a, b, c) {\n      // Noop\n    },\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n      onChange();\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n      onChange();\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n      onChange();\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n      onChange();\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n      onChange();\n    },\n  });\n};\n\nexport default createRenderer;\n","export const VIEW = 'VIEW';\nexport const TEXT = 'TEXT';\nexport const LINK = 'LINK';\nexport const PAGE = 'PAGE';\nexport const NOTE = 'NOTE';\nexport const IMAGE = 'IMAGE';\nexport const DOCUMENT = 'DOCUMENT';\nexport const CANVAS = 'CANVAS';\nexport const TEXT_INSTANCE = 'TEXT_INSTANCE';\n\nexport const DPI = 72; // 72pt per inch.\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nexport const FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nexport const PORTRAIT = 'portrait';\nexport const LANDSCAPE = 'landscape';\n\nexport const INHERITED_PROPERTIES = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const RULER_WIDTH = 13;\nexport const RULER_COLOR = 'white';\nexport const RULER_FONT_SIZE = 6;\nexport const DEFAULT_RULER_STEPS = 50;\nexport const LINE_WIDTH = 0.5;\nexport const LINE_COLOR = 'gray';\nexport const GRID_COLOR = '#ababab';\n","import * as R from 'ramda';\n\nimport { FONT_WEIGHTS } from '../constants';\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g;\n\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nconst isFontWeightStyle = key => key.match(/^fontWeight/);\n\nconst isBorderStyle = (key, value) =>\n  key.match(/^border(Top|Right|Bottom|Left)(Color|Width|Style)/) &&\n  typeof value === 'string';\n\nconst isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nexport const processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst matchNumber = R.when(\n  R.is(String),\n  R.compose(\n    R.complement(R.isEmpty),\n    R.match(/^-?\\d*\\.?\\d*$/),\n  ),\n);\n\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n\nconst transformStyles = style => {\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    resolvedStyle[key] = R.compose(\n      castFloat,\n      R.cond([\n        [isBorderStyle, processBorders],\n        [isBoxModelStyle, processBoxModel],\n        [isObjectPositionStyle, processObjectPosition],\n        [isTransformOriginStyle, processTransformOrigin],\n        [isFontWeightStyle, processFontWeight],\n        [R.T, R.always(value)],\n      ]),\n    )(key, value);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformStyles';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import * as R from 'ramda';\n\nimport { IMAGE } from '../constants';\n\n/**\n * Checks if node is image\n *\n * @param {Object} node\n * @returns {Boolean} is node image?\n */\nconst isImage = R.propEq('type', IMAGE);\n\nexport default isImage;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from '../utils/png';\nimport JPEG from '../utils/jpeg';\nimport createCache from '../utils/cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n","import * as R from 'ramda';\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String} image src\n */\nconst getSource = R.compose(\n  R.when(R.is(String), src => ({ uri: src })),\n  R.either(R.path(['props', 'src']), R.path(['props', 'source'])),\n);\n\nexport default getSource;\n","import resolveImage from './resolveImage';\nimport getSource from './getSource';\nimport warning from '../utils/warning';\n\nconst fetchImage = async node => {\n  const src = getSource(node);\n  const { cache } = node.props;\n\n  if (!src) {\n    warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    node.image = await resolveImage(src, { cache });\n  } catch (e) {\n    node.image = { width: 0, height: 0 };\n    console.warn(e.message);\n  }\n};\n\nexport default fetchImage;\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\n\nimport Font from '../font';\nimport resolveImage from '../image/resolveImage';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport fetchImage from '../image/fetchImage';\nimport { fetchEmojis } from '../text/emoji';\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nconst fetchAssets = node => {\n  const promises = [];\n  const listToExplore = node.children.slice(0);\n\n  while (listToExplore.length > 0) {\n    const node = listToExplore.shift();\n\n    if (isImage(node)) {\n      promises.push(fetchImage(node));\n    }\n\n    if (node.style && node.style.fontFamily) {\n      promises.push(Font.load(node.style));\n    }\n\n    if (typeof node === 'string') {\n      promises.push(...fetchEmojis(node));\n    }\n\n    if (typeof node.value === 'string') {\n      promises.push(...fetchEmojis(node.value));\n    }\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @returns {Object} root node\n */\nconst resolveAssets = node =>\n  R.compose(\n    R.then(R.always(node)),\n    p => Promise.all(p),\n    fetchAssets,\n  )(node);\n\nexport default resolveAssets;\n","import * as R from 'ramda';\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nconst compact = R.filter(Boolean);\n\n/**\n * Checks if value is array\n *\n * @param {any} value\n * @returns {Boolean} is value an array\n */\nconst isArray = R.is(Array);\n\n/**\n * Checks if value is not an array\n *\n * @param {any} value\n * @returns {Boolean} isn't value an array\n */\nconst isNotArray = R.complement(isArray);\n\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */\nconst castArray = R.when(isNotArray, v => [v]);\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nconst mergeStyles = styles =>\n  styles.reduce((acc, style) => {\n    const s = isArray(style) ? flatten(style) : style;\n\n    Object.keys(s).forEach(key => {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n\n    return acc;\n  }, {});\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nconst flatten = R.compose(\n  mergeStyles,\n  compact,\n  castArray,\n);\n\nexport default flatten;\n","import * as R from 'ramda';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Expand rules\n */\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\nconst expandedKeys = R.keys(styleShorthands);\n\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (R.includes(key, expandedKeys)) {\n      const expandedProps = styleShorthands[key];\n      for (const propName in expandedProps) {\n        if (hasOwnProperty.call(expandedProps, propName)) {\n          resolvedStyle[propName] = value;\n        }\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default expandStyles;\n","import * as R from 'ramda';\n\nimport { DPI } from '../constants';\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\n  return match\n    ? { value: parseFloat(match[1], 10), unit: match[2] || 'pt' }\n    : { value, unit: undefined };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * (1 / 25.4) * DPI;\n    case 'cm':\n      return scalar.value * (1 / 2.54) * DPI;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n});\n\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformUnits = (container, styles) =>\n  R.map(transformUnit(container), styles);\n\nexport default R.curryN(2, transformUnits);\n","import * as R from 'ramda';\nimport matchMedia from 'media-engine';\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nconst resolveMediaQueries = (container, styles) => {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: styles[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: styles[key] };\n  }, {});\n};\n\nexport default R.curryN(2, resolveMediaQueries);\n","import * as R from 'ramda';\n\nimport flattenStyles from '../stylesheet/flatten';\nimport expandStyles from '../stylesheet/expandStyles';\nimport transformUnits from '../stylesheet/transformUnits';\nimport transformStyles from '../stylesheet/transformStyles';\nimport resolveMediaQueries from '../stylesheet/resolveMediaQueries';\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nconst resolveStyles = container =>\n  R.compose(\n    transformUnits(container),\n    transformStyles,\n    expandStyles,\n    resolveMediaQueries(container),\n    flattenStyles,\n  );\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nconst resolveNodeStyles = page => node => {\n  const container = R.propOr({}, 'box', page);\n\n  return R.evolve({\n    style: resolveStyles(container),\n    children: R.map(resolveNodeStyles(page)),\n  })(node);\n};\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nconst resolvePageStyles = page => {\n  const pageBox = R.propOr({}, 'box', page);\n\n  return R.evolve({\n    children: R.map(resolveNodeStyles(page)),\n    style: R.compose(\n      transformUnits(pageBox),\n      transformStyles,\n      expandStyles,\n      flattenStyles,\n    ),\n  })(page);\n};\n\n/**\n * Resolves root styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nexport default R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageStyles),\n    }),\n  ),\n});\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render vertical ruler\n *\n * @param {Object} page\n * @returns {boolean} has vertical ruler\n */\nconst hasVerticalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'verticalRuler']),\n);\n\nexport default hasVerticalRuler;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render horizontal ruler\n *\n * @param {Object} page\n * @returns {boolean} has horizontal ruler\n */\nconst hasHorizontalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'horizontalRuler']),\n);\n\nexport default hasHorizontalRuler;\n","import * as R from 'ramda';\n\nimport { RULER_WIDTH } from '../constants';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\n\n/**\n * Adjust page size given ruler props\n *\n * @param {Object} page\n * @returns {boolean} page with size altered by ruler props\n */\nconst adjustPageSize = R.compose(\n  R.when(\n    hasVerticalRuler,\n    R.evolve({\n      box: { height: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { top: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n  R.when(\n    hasHorizontalRuler,\n    R.evolve({\n      box: { width: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { left: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n);\n\n/**\n * Adjust pages size given ruler props\n *\n * @param {Object} root\n * @returns {boolean} root with pages size altered by ruler props\n */\nconst resolveRulers = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(adjustPageSize),\n    }),\n  ),\n});\n\nexport default resolveRulers;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\nconst getTransformStyle = s => R.pathOr('50%', ['style', s]);\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nconst getOrigin = node => {\n  if (!node.box) return {};\n\n  const { left, top, width, height } = node.box;\n  const transformOriginX = getTransformStyle('transformOriginX')(node);\n  const transformOriginY = getTransformStyle('transformOriginY')(node);\n\n  const percentX = matchPercent(transformOriginX);\n  const percentY = matchPercent(transformOriginY);\n\n  const offsetX = percentX ? width * percentX.percent : transformOriginX;\n  const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n  return { left: left + offsetX, top: top + offsetY };\n};\n\nexport default getOrigin;\n","import * as R from 'ramda';\n\nimport getOrigin from '../node/getOrigin';\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nconst resolveNodeOrigin = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveNodeOrigin) }),\n    R.converge(R.assoc('origin'), [getOrigin, R.identity]),\n  )(node);\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\nconst resolveOrigin = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolveNodeOrigin),\n    }),\n  ),\n});\n\nexport default resolveOrigin;\n","import * as R from 'ramda';\n\nimport { PORTRAIT, LANDSCAPE } from '../constants';\n\nconst VALID_ORIENTATIONS = [PORTRAIT, LANDSCAPE];\n\n/**\n * Get page orientation. Defaults to landscape\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nconst getOrientation = R.compose(\n  R.ifElse(\n    R.includes(R.__, VALID_ORIENTATIONS),\n    R.identity,\n    R.always(PORTRAIT),\n  ),\n  R.pathOr(PORTRAIT, ['props', 'orientation']),\n);\n\nexport default getOrientation;\n","import * as R from 'ramda';\n\nimport getOrientation from './getOrientation';\n\nimport { LANDSCAPE } from '../constants';\n\nconst isLandscape = R.compose(\n  R.equals(LANDSCAPE),\n  getOrientation,\n);\n\nexport default isLandscape;\n","import * as R from 'ramda';\n\nimport isLandscape from './isLandscape';\nimport { PAGE_SIZES } from '../constants';\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nconst toSizeObject = R.applySpec({\n  width: R.prop(0),\n  height: R.prop(1),\n});\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nconst flipSizeObject = R.applySpec({\n  width: R.prop('height'),\n  height: R.prop('width'),\n});\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nconst getStringSize = R.compose(\n  toSizeObject,\n  R.prop(R.__, PAGE_SIZES),\n  R.toUpper,\n);\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nconst getNumberSize = R.compose(\n  toSizeObject,\n  v => [v],\n);\n\n/**\n * Throws invalid size error\n *\n * @param {String} invalid page size input\n */\nconst throwInvalidError = size => {\n  throw new Error(`Invalid Page size: ${JSON.stringify(size)}`);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nconst getSize = page => {\n  const size = R.compose(\n    R.cond([\n      [R.is(String), getStringSize],\n      [R.is(Array), toSizeObject],\n      [R.is(Number), getNumberSize],\n      [R.is(Object), R.identity],\n      [R.T, throwInvalidError],\n    ]),\n    R.pathOr('A4', ['props', 'size']),\n  )(page);\n\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\nexport default getSize;\n","import * as R from 'ramda';\n\n/**\n * Add empt box prop if not present in node\n *\n * @param {Object} node\n * @returns {Object} node with box prop\n */\nconst assocIfNil = (key, value, target) =>\n  R.when(\n    R.compose(\n      R.isNil,\n      R.prop(key),\n    ),\n    R.assoc(key, value),\n  )(target);\n\nexport default R.curryN(3, assocIfNil);\n","import * as R from 'ramda';\n\nimport getPageSize from '../page/getSize';\nimport assocIfNil from '../utils/assocIfNil';\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nexport const resolvePageSize = key => page => {\n  const size = getPageSize(page);\n  return R.evolve({ [key]: R.merge(R.__, size) })(page);\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nconst resolvePageSizes = key => R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(\n        R.compose(\n          resolvePageSize(key),\n          assocIfNil(key, {}),\n        ),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageSizes;\n","import * as R from 'ramda';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Takes a list of predicates and returns the first predicate result that returns true for a given list of arguments\n *\n * @param  {...any} predicates\n * @param  {any} value\n */\nconst firstPass = (...fns) => value => {\n  let res;\n\n  for (const fn of fns) {\n    res = fn(value);\n    if (isNotNil(res)) return res;\n  }\n\n  return res;\n};\n\nexport default firstPass;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedMargin = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nconst getMargin = R.applySpec({\n  marginTop: firstPass(\n    getComputedMargin(Yoga.EDGE_TOP),\n    R.path(['box', 'marginTop']),\n    R.path(['style', 'marginTop']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginRight: firstPass(\n    getComputedMargin(Yoga.EDGE_RIGHT),\n    R.path(['box', 'marginRight']),\n    R.path(['style', 'marginRight']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginBottom: firstPass(\n    getComputedMargin(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'marginBottom']),\n    R.path(['style', 'marginBottom']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginLeft: firstPass(\n    getComputedMargin(Yoga.EDGE_LEFT),\n    R.path(['box', 'marginLeft']),\n    R.path(['style', 'marginLeft']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n});\n\nexport default getMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedPadding = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nconst getPadding = R.applySpec({\n  paddingTop: firstPass(\n    getComputedPadding(Yoga.EDGE_TOP),\n    R.path(['box', 'paddingTop']),\n    R.path(['style', 'paddingTop']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingRight: firstPass(\n    getComputedPadding(Yoga.EDGE_RIGHT),\n    R.path(['box', 'paddingRight']),\n    R.path(['style', 'paddingRight']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingBottom: firstPass(\n    getComputedPadding(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'paddingBottom']),\n    R.path(['style', 'paddingBottom']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingLeft: firstPass(\n    getComputedPadding(Yoga.EDGE_LEFT),\n    R.path(['box', 'paddingLeft']),\n    R.path(['style', 'paddingLeft']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n});\n\nexport default getPadding;\n","import * as R from 'ramda';\n\nconst getTop = yogaNode => (yogaNode ? yogaNode.getComputedTop() : 0);\nconst getRight = yogaNode => (yogaNode ? yogaNode.getComputedRight() : 0);\nconst getBottom = yogaNode => (yogaNode ? yogaNode.getComputedBottom() : 0);\nconst getLeft = yogaNode => (yogaNode ? yogaNode.getComputedLeft() : 0);\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nconst getPosition = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    top: getTop,\n    right: getRight,\n    bottom: getBottom,\n    left: getLeft,\n  })(yogaNode);\n};\n\nexport default getPosition;\n","const DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0,\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nconst getDimension = node => {\n  const yogaNode = node._yogaNode;\n\n  if (!yogaNode) return DEFAULT_DIMENSION;\n\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight(),\n  };\n};\n\nexport default getDimension;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getComputedBorder = edge => yogaNode =>\n  yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nconst getBorderWidth = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    borderTopWidth: getComputedBorder(Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(Yoga.EDGE_LEFT),\n  })(yogaNode);\n};\n\nexport default getBorderWidth;\n","import * as R from 'ramda';\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst upperFirst = R.ifElse(\n  R.isNil,\n  R.identity,\n  R.compose(\n    R.join(''),\n    R.juxt([\n      R.compose(\n        R.toUpper,\n        R.head,\n      ),\n      R.tail,\n    ]),\n  ),\n);\n\nexport default upperFirst;\n","import * as R from 'ramda';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setYogaValue = (attr, edge) => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const hasEdge = R.complement(R.isNil)(edge);\n      const fixedMethod = `set${upperFirst(attr)}`;\n      const autoMethod = `${fixedMethod}Auto`;\n      const percentMethod = `${fixedMethod}Percent`;\n      const percent = matchPercent(value);\n\n      if (percent && !yogaNode[percentMethod]) {\n        throw new Error(`You can't pass percentage values to ${attr} property`);\n      }\n\n      if (percent) {\n        hasEdge\n          ? yogaNode[percentMethod](edge, percent.value)\n          : yogaNode[percentMethod](percent.value);\n      } else if (value === 'auto') {\n        hasEdge ? yogaNode[autoMethod](edge) : yogaNode[autoMethod]();\n      } else {\n        hasEdge\n          ? yogaNode[fixedMethod](edge, value)\n          : yogaNode[fixedMethod](value);\n      }\n    }\n  });\n\nexport default setYogaValue;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex attribute to node's Yoga instance\n *\n * @param {Number} flex value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlex = setYogaValue('flex');\n\nexport default setFlex;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexGrow = R.compose(\n  setYogaValue('flexGrow'),\n  R.defaultTo(0),\n);\n\nexport default setFlexGrow;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nexport default setFlexBasis;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlign = attr => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('flex-start'), R.always(Yoga.ALIGN_FLEX_START)],\n        [R.equals('center'), R.always(Yoga.ALIGN_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.ALIGN_FLEX_END)],\n        [R.equals('stretch'), R.always(Yoga.ALIGN_STRETCH)],\n        [R.equals('baseline'), R.always(Yoga.ALIGN_BASELINE)],\n        [R.equals('space-between'), R.always(Yoga.ALIGN_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.ALIGN_SPACE_AROUND)],\n        [R.T, R.always(Yoga.ALIGN_AUTO)],\n      ])(value);\n\n      yogaNode[`setAlign${upperFirst(attr)}`](yogaValue);\n    }\n  });\n\nexport default setAlign;\n","import setAlign from './setAlign';\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignSelf = setAlign('self');\n\nexport default setAlignSelf;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexShrink = R.compose(\n  setYogaValue('flexShrink'),\n  R.defaultTo(1),\n);\n\nexport default setFlexShrink;\n","import setAlign from './setAlign';\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignContent = setAlign('content');\n\nexport default setAlignContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst isRow = R.equals('row');\nconst isRowReverse = R.equals('row-reverse');\nconst isColumnReverse = R.equals('column-reverse');\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexDirection = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [isRow, R.always(Yoga.FLEX_DIRECTION_ROW)],\n        [isRowReverse, R.always(Yoga.FLEX_DIRECTION_ROW_REVERSE)],\n        [isColumnReverse, R.always(Yoga.FLEX_DIRECTION_COLUMN_REVERSE)],\n        [R.T, R.always(Yoga.FLEX_DIRECTION_COLUMN)],\n      ])(value);\n\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n\nexport default setFlexDirection;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set all margins at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMargin = margin =>\n  R.tap(node => {\n    setMarginTop(margin)(node);\n    setMarginRight(margin)(node);\n    setMarginBottom(margin)(node);\n    setMarginLeft(margin)(node);\n  });\n\nexport default setMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set all paddings at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPadding = padding =>\n  R.tap(node => {\n    setPaddingTop(padding)(node);\n    setPaddingRight(padding)(node);\n    setPaddingBottom(padding)(node);\n    setPaddingLeft(padding)(node);\n  });\n\nexport default setPadding;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set all border widths at once\n *\n * @param {Number} border width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorder = width =>\n  R.tap(node => {\n    setBorderTop(width)(node);\n    setBorderRight(width)(node);\n    setBorderBottom(width)(node);\n    setBorderLeft(width)(node);\n  });\n\nexport default setBorder;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set all positions at once\n *\n * @param {Number} position\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPosition = position =>\n  R.tap(node => {\n    setPositionTop(position)(node);\n    setPositionRight(position)(node);\n    setPositionBottom(position)(node);\n    setPositionLeft(position)(node);\n  });\n\nexport default setPosition;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxHeight = setYogaValue('maxHeight');\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\n\n/**\n * Checks if node is text\n *\n * @param {Object} node\n * @returns {Boolean} is node text?\n */\nconst isText = R.propEq('type', TEXT);\n\nexport default isText;\n","import * as R from 'ramda';\n\nimport { NOTE } from '../constants';\n\n/**\n * Checks if node is note\n *\n * @param {Object} node\n * @returns {Boolean} is node note?\n */\nconst isNote = R.propEq('type', NOTE);\n\nexport default isNote;\n","import * as R from 'ramda';\n\nimport { PAGE } from '../constants';\n\n/**\n * Checks if node is page\n *\n * @param {Object} node\n * @returns {Boolean} is node page?\n */\nconst isPage = R.propEq('type', PAGE);\n\nexport default isPage;\n","import * as R from 'ramda';\n\nimport { CANVAS } from '../constants';\n\n/**\n * Checks if node is canvas\n *\n * @param {Object} node\n * @returns {Boolean} is node canvas?\n */\nconst isCanvas = R.propEq('type', CANVAS);\n\nexport default isCanvas;\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import * as R from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst getFallbackFont = () => getOrCreateFont('Helvetica');\n\nconst shouldFallbackToFont = (codePoint, font) =>\n  !IGNORED_CODE_POINTS.includes(codePoint) &&\n  !font.hasGlyphForCodePoint(codePoint) &&\n  getFallbackFont().hasGlyphForCodePoint(codePoint);\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(R.last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import * as R from 'ramda';\n\nimport { TEXT_INSTANCE } from '../constants';\n\n/**\n * Checks if node is text intance\n *\n * @param {Object} node\n * @returns {Boolean} is node text intance?\n */\nconst isTextInstance = R.propEq('type', TEXT_INSTANCE);\n\nexport default isTextInstance;\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport { embedEmojis } from './emoji';\nimport capitalize from '../utils/capitalize';\nimport upperFirst from '../utils/upperFirst';\nimport { ignoreChars } from './ignorableChars';\nimport isTextInstance from '../node/isTextInstance';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\n/**\n * Get textkit framgents of given node object\n *\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nexport default getAttributedString;\n","/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst capitalize = value => {\n  if (!value) return value;\n  return value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n};\n\nexport default capitalize;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport Font from '../font';\nimport fontSubstitution from './fontSubstitution';\nimport getAttributedString from './getAttributedString';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\n/**\n * Get layout container for specific text node\n *\n * @param {Object} node\n * @param {Number} width\n * @param {Number} height\n * @returns {Object} layout container\n */\nconst getContainer = (node, width, height) => {\n  const maxLines = R.path(['style', 'maxLines'], node);\n  const textOverflow = R.path(['style', 'textOverflow'], node);\n\n  return {\n    x: 0,\n    y: 0,\n    width,\n    maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow,\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = node => ({\n  hyphenationPenalty: node.props.hyphenationPenalty,\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n});\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @returns {Array} layout lines\n */\nconst layoutText = R.compose(\n  R.reduce(R.concat, []),\n  R.converge(engine, [getAttributedString, getContainer, getLayoutOptions]),\n);\n\n// TODO: Do it memoizable?\nexport default layoutText;\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nconst linesWidth = node => {\n  if (!node.lines) return -1;\n  return Math.max(\n    ...node.lines.map(line => AttributedString.advanceWidth(line)),\n  );\n};\n\nexport default linesWidth;\n","/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nconst linesHeight = node => {\n  if (!node.lines) return -1;\n  return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nexport default linesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport layoutText from './layoutText';\nimport linesWidth from './linesWidth';\nimport linesHeight from './linesHeight';\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nconst measureText = (page, node, width, widthMode, height, heightMode) => {\n  if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return { height: linesHeight(node) };\n  }\n\n  if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return {\n      height: linesHeight(node),\n      width: Math.min(width, linesWidth(node)),\n    };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureText);\n","import * as R from 'ramda';\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nconst getRatio = R.ifElse(\n  R.hasPath(['image', 'data']),\n  node => node.image.width / node.image.height,\n  R.always(1),\n);\n\nexport default getRatio;\n","import * as R from 'ramda';\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nconst isHeightAuto = R.pathSatisfies(R.isNil, ['box', 'height']);\n\nexport default isHeightAuto;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getRatio from '../image/getRatio';\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nconst measureImage = (page, node, width, widthMode, height, heightMode) => {\n  const imageRatio = getRatio(node);\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  // Skip measure if image data not present yet\n  if (!node.image) return { width: 0, height: 0 };\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_UNDEFINED\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(pageArea, scaledHeight) };\n  }\n\n  if (\n    heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n    (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n  ) {\n    return { width: Math.min(height * imageRatio, width) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(height, pageArea, scaledHeight) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height),\n      };\n    } else {\n      return {\n        width: Math.min(height * imageRatio, width),\n        height: height,\n      };\n    }\n  }\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureImage);\n","import * as R from 'ramda';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\nconst getMax = R.reduce(R.max, -Infinity);\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n  const addPoint = (x, y) => points.push([x, y]);\n  const moveTo = R.compose(\n    nil,\n    addPoint,\n  );\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't really change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () =>\n    R.compose(\n      getMax,\n      R.pluck(0),\n    )(points);\n\n  ctx.getHeight = () =>\n    R.compose(\n      getMax,\n      R.pluck(1),\n    )(points);\n\n  return ctx;\n};\n\n/**\n * Yoga canbas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node) => {\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  const ctx = measureCtx();\n\n  node.props.paint(ctx);\n\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureCanvas);\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport getPosition from '../node/getPosition';\nimport getDimension from '../node/getDimension';\nimport getBorderWidth from '../node/getBorderWidth';\nimport setFlex from '../node/setFlex';\nimport setDisplay from '../node/setDisplay';\nimport setOverflow from '../node/setOverflow';\nimport setFlexWrap from '../node/setFlexWrap';\nimport setFlexGrow from '../node/setFlexGrow';\nimport setFlexBasis from '../node/setFlexBasis';\nimport setAlignSelf from '../node/setAlignSelf';\nimport setFlexShrink from '../node/setFlexShrink';\nimport setAspectRatio from '../node/setAspectRatio';\nimport setAlignContent from '../node/setAlignContent';\nimport setPositionType from '../node/setPositionType';\nimport setFlexDirection from '../node/setFlexDirection';\nimport setJustifyContent from '../node/setJustifyContent';\nimport {\n  setMarginTop,\n  setMarginRight,\n  setMarginBottom,\n  setMarginLeft,\n} from '../node/setMargin';\nimport {\n  setPaddingTop,\n  setPaddingRight,\n  setPaddingBottom,\n  setPaddingLeft,\n} from '../node/setPadding';\nimport {\n  setBorderTop,\n  setBorderRight,\n  setBorderBottom,\n  setBorderLeft,\n} from '../node/setBorderWidth';\nimport {\n  setPositionTop,\n  setPositionRight,\n  setPositionBottom,\n  setPositionLeft,\n} from '../node/setPosition';\nimport {\n  setWidth,\n  setHeight,\n  setMinWidth,\n  setMaxWidth,\n  setMinHeight,\n  setMaxHeight,\n} from '../node/setDimension';\nimport isText from '../node/isText';\nimport isNote from '../node/isNote';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport measureText from '../text/measureText';\nimport measureImage from '../image/measureImage';\nimport measureCanvas from '../canvas/measureCanvas';\nimport isTextInstance from '../node/isTextInstance';\n\nconst YOGA_NODE = '_yogaNode';\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nconst setNodeHeight = node =>\n  R.ifElse(\n    isPage,\n    setHeight(node.box.height),\n    setHeight(node.box.height || node.style.height),\n  );\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst setYogaValues = R.tap(node => {\n  R.compose(\n    setNodeHeight(node),\n    setWidth(node.style.width),\n    setMinWidth(node.style.minWidth),\n    setMaxWidth(node.style.maxWidth),\n    setMinHeight(node.style.minHeight),\n    setMaxHeight(node.style.maxHeight),\n    setMarginTop(node.style.marginTop),\n    setMarginRight(node.style.marginRight),\n    setMarginBottom(node.style.marginBottom),\n    setMarginLeft(node.style.marginLeft),\n    setPaddingTop(node.style.paddingTop),\n    setPaddingRight(node.style.paddingRight),\n    setPaddingBottom(node.style.paddingBottom),\n    setPaddingLeft(node.style.paddingLeft),\n    setPositionType(node.style.position),\n    setPositionTop(node.style.top),\n    setPositionRight(node.style.right),\n    setPositionBottom(node.style.bottom),\n    setPositionLeft(node.style.left),\n    setBorderTop(node.style.borderTopWidth),\n    setBorderRight(node.style.borderRightWidth),\n    setBorderBottom(node.style.borderBottomWidth),\n    setBorderLeft(node.style.borderLeftWidth),\n    setDisplay(node.style.display),\n    setFlexDirection(node.style.flexDirection),\n    setAlignSelf(node.style.alignSelf),\n    setAlignContent(node.style.alignContent),\n    setJustifyContent(node.style.justifyContent),\n    setFlexWrap(node.style.flexWrap),\n    setOverflow(node.style.overflow),\n    setAspectRatio(node.style.aspectRatio),\n    setFlex(node.style.flex),\n    setFlexBasis(node.style.flexBasis),\n    setFlexGrow(node.style.flexGrow),\n    setFlexShrink(node.style.flexShrink),\n  )(node);\n});\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nconst insertYogaNodes = parent =>\n  R.tap(child => parent.insertChild(child[YOGA_NODE], parent.getChildCount()));\n\nconst setMeasureFunc = page => node => {\n  const yogaNode = node[YOGA_NODE];\n\n  if (isText(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  return node;\n};\n\nconst isNotText = R.complement(isText);\nconst isNotNote = R.complement(isNote);\nconst isLayoutElement = R.both(isNotText, isNotNote);\nconst isNotTextInstance = R.complement(isTextInstance);\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nconst createYogaNodes = page => node => {\n  const yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n\n  return R.compose(\n    setMeasureFunc(page),\n    R.when(\n      isLayoutElement,\n      R.evolve({\n        children: R.map(\n          R.compose(\n            insertYogaNodes(yogaNode),\n            createYogaNodes(page),\n          ),\n        ),\n      }),\n    ),\n    setYogaValues,\n    R.assoc(YOGA_NODE, yogaNode),\n  )(node);\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst calculateLayout = R.tap(page => page[YOGA_NODE].calculateLayout());\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nconst persistDimensions = node => {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(\n      R.mergeAll([\n        getPadding(node),\n        getMargin(node),\n        getBorderWidth(node),\n        getPosition(node),\n        getDimension(node),\n      ]),\n    ),\n  })(node);\n};\n\n/**\n * Removes and destroys yoga node frm document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nconst destroyYogaNodes = node => {\n  return R.compose(\n    R.dissoc(YOGA_NODE),\n    R.tap(n => Yoga.Node.destroy(n[YOGA_NODE])),\n    R.evolve({ children: R.map(R.when(isLayoutElement, destroyYogaNodes)) }),\n  )(node);\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nexport const resolvePageDimensions = page =>\n  R.ifElse(\n    R.isNil,\n    R.always(null),\n    R.compose(\n      destroyYogaNodes,\n      persistDimensions,\n      calculateLayout,\n      createYogaNodes(page),\n    ),\n  )(page);\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nconst resolveDimensions = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageDimensions),\n    }),\n  ),\n});\n\nexport default resolveDimensions;\n","import * as R from 'ramda';\n\nimport resolveAssets from './resolveAssets';\nimport resolveStyles from './resolveStyles';\nimport resolveZIndex from './resolveZIndex';\nimport resolveRulers from './resolveRulers';\nimport resolveOrigins from './resolveOrigins';\nimport resolvePageSizes from './resolvePageSizes';\nimport resolveDimensions from './resolveDimensions';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport resolvePageMargins from './resolvePageMargins';\nimport resolvePageWrapping from './resolvePageWrapping';\nimport resolveNoteChildren from './resolveNoteChildren';\nimport resolvePagePaddings from './resolvePagePaddings';\nimport resolvePercentRadius from './resolvePercentRadius';\nimport resolvePercentHeight from './resolvePercentHeight';\nimport resolveLinkSubstitution from './resolveLinkSubstitution';\nimport resolveAbsoluteCoordinates from './resolveAbsoluteCoordinates';\nimport asyncCompose from '../utils/asyncCompose';\n\nconst startTimer = name => R.tap(() => console.time(name));\nconst endTimer = name => R.tap(() => console.timeEnd(name));\n\nconst resolvePageSizeStyle = resolvePageSizes('style');\n\nconst layout = asyncCompose(\n  resolveAbsoluteCoordinates,\n  resolveRulers,\n  resolveOrigins,\n  endTimer('resolvePageBreaks'),\n  resolvePageWrapping,\n  startTimer('resolvePageBreaks'),\n  resolveTextLayout,\n  resolvePercentRadius,\n  resolveZIndex,\n  resolveDimensions,\n  resolveAssets,\n  resolveInheritance,\n  resolvePercentHeight,\n  resolvePagePaddings,\n  resolveStyles,\n  resolveNoteChildren,\n  resolveLinkSubstitution,\n  resolvePageMargins,\n  resolvePageSizeStyle,\n);\n\nexport default layout;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setPositionType = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setPositionType(\n        value === 'absolute'\n          ? Yoga.POSITION_TYPE_ABSOLUTE\n          : Yoga.POSITION_TYPE_RELATIVE,\n      );\n    }\n  });\n\nexport default setPositionType;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setDisplay = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(\n        value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX,\n      );\n    }\n  });\n\nexport default setDisplay;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setJustifyContent = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('center'), R.always(Yoga.JUSTIFY_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.JUSTIFY_FLEX_END)],\n        [R.equals('space-between'), R.always(Yoga.JUSTIFY_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.JUSTIFY_SPACE_AROUND)],\n        [R.equals('space-evenly'), R.always(Yoga.JUSTIFY_SPACE_EVENLY)],\n        [R.T, R.always(Yoga.JUSTIFY_FLEX_START)],\n      ])(value);\n\n      yogaNode.setJustifyContent(yogaValue);\n    }\n  });\n\nexport default setJustifyContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('wrap'), R.always(Yoga.WRAP_WRAP)],\n        [R.equals('wrap-reverse'), R.always(Yoga.WRAP_WRAP_REVERSE)],\n        [R.T, R.always(Yoga.WRAP_NO_WRAP)],\n      ])(value);\n\n      yogaNode.setFlexWrap(yogaValue);\n    }\n  });\n\nexport default setFlexWrap;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setOverflow = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('hidden'), R.always(Yoga.OVERFLOW_HIDDEN)],\n        [R.equals('scroll'), R.always(Yoga.OVERFLOW_SCROLL)],\n        [R.T, R.always(Yoga.OVERFLOW_VISIBLE)],\n      ])(value);\n\n      yogaNode.setOverflow(yogaValue);\n    }\n  });\n\nexport default setOverflow;\n","import * as R from 'ramda';\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAspectRatio = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n  });\n\nexport default setAspectRatio;\n","import * as R from 'ramda';\n\nimport isText from '../node/isText';\nimport layoutText from '../text/layoutText';\n\nconst shouldLayoutText = node => isText(node) && !node.lines;\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layouted node\n */\nconst resolveTextLayout = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveTextLayout) }),\n    R.when(\n      shouldLayoutText,\n      R.compose(\n        R.converge(R.assoc('lines'), [\n          R.converge(layoutText, [\n            R.identity,\n            R.path(['box', 'width']),\n            R.path(['box', 'height']),\n          ]),\n          R.identity,\n        ]),\n      ),\n    ),\n  )(node);\n\nexport default resolveTextLayout;\n","import * as R from 'ramda';\n\nimport { INHERITED_PROPERTIES } from '../constants';\n\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\nconst getInheritStyles = R.compose(\n  R.pick(INHERITED_PROPERTIES),\n  R.propOr({}, 'style'),\n);\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nconst mergeStyles = styles =>\n  R.evolve({\n    style: R.merge(styles),\n  });\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nconst resolveInheritance = node => {\n  const inheritStyles = getInheritStyles(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveInheritance,\n        mergeStyles(inheritStyles),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveInheritance;\n","import * as R from 'ramda';\n\nimport setMargin from './setMargin';\n\n/**\n * Removes margins on node\n *\n * @param {Object} node\n * @returns {Object} node without margins\n */\nconst removeMargins = R.compose(\n  setMargin(0),\n  R.dissocPath(['style', 'margin']),\n  R.dissocPath(['style', 'marginTop']),\n  R.dissocPath(['style', 'marginRight']),\n  R.dissocPath(['style', 'marginBottom']),\n  R.dissocPath(['style', 'marginLeft']),\n  R.dissocPath(['style', 'marginHorizontal']),\n  R.dissocPath(['style', 'marginVertical']),\n);\n\nexport default removeMargins;\n","import * as R from 'ramda';\n\nimport removeMargins from '../node/removeMargins';\n\n/**\n * Remove page margins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root without margins on pages\n */\nconst resolvePageMargins = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(removeMargins),\n    }),\n  ),\n});\n\nexport default resolvePageMargins;\n","import * as R from 'ramda';\n\nimport isNote from './isNote';\nimport isImage from './isImage';\nimport isCanvas from './isCanvas';\nimport getNodesHeight from './getNodesHeight';\n\nconst getWrap = R.ifElse(\n  R.anyPass([isNote, isImage, isCanvas]),\n  R.always(false),\n  R.pathOr(true, ['props', 'wrap']),\n);\n\nconst getBreak = R.pathOr(false, ['props', 'break']);\n\nconst getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nconst defaultPresenceAhead = element => height =>\n  Math.min(element.box.height, height);\n\nconst getPresenceAhead = (elements, height) => {\n  let result = 0;\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (!element.box) continue;\n\n    const isElementInside = height > element.box.top;\n    const presenceAhead =\n      element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nconst shouldBreak = (child, futureElements, height) => {\n  const minPresenceAhead = getMinPresenceAhead(child);\n  const presenceAhead = getPresenceAhead(futureElements, height);\n  const futureHeight = getNodesHeight(futureElements);\n  const shouldSplit = height < child.box.top + child.box.height;\n  const shouldWrap = getWrap(child);\n\n  return (\n    getBreak(child) ||\n    (!shouldWrap && shouldSplit) ||\n    (minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead)\n  );\n};\n\nexport default shouldBreak;\n","import * as R from 'ramda';\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nconst getNodesHeight = nodes => {\n  let max = 0;\n  let min = Infinity;\n\n  if (R.isEmpty(nodes)) return 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n\nexport default getNodesHeight;\n","import * as R from 'ramda';\n\nconst getPaddingBottom = R.pathOr(0, ['style', 'paddingBottom']);\n\nconst getContentArea = page => {\n  const paddingBottom = getPaddingBottom(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingBottom;\n};\n\nexport default getContentArea;\n","import * as R from 'ramda';\n\nimport shouldNodeBreak from '../node/shouldBreak';\nimport getContentArea from '../page/getContentArea';\nimport { resolvePageDimensions } from './resolveDimensions';\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst setChildren = R.assoc('children');\n\nconst setHeight = R.assocPath(['box', 'height']);\n\nconst setBreak = R.assocPath(['props', 'break']);\n\nconst breakChildren = (height, node) => {\n  const children = getChildren(node);\n\n  let offset = null;\n  let nextElements = [];\n  const currentElements = [];\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const childTop = getTop(child);\n    const childHeight = getHeight(child);\n    const futureElements = children.slice(i + 1);\n    const shouldBreak = shouldNodeBreak(child, futureElements, height);\n\n    if (shouldBreak) {\n      offset = childTop;\n      nextElements = R.compose(\n        R.prepend(setBreak(false, child)),\n        R.slice(i + 1, Infinity),\n      )(children);\n      break;\n    }\n\n    const [currentChildren, nextChildren, childsOffset] = breakChildren(\n      height,\n      child,\n    );\n\n    if (R.isNil(childsOffset)) {\n      currentElements.push(setChildren(currentChildren, child));\n      continue;\n    }\n\n    offset = childTop + childsOffset;\n\n    currentElements.push(\n      R.compose(\n        setChildren(currentChildren),\n        setHeight(Math.ceil(offset / height) * height - childTop),\n      )(child),\n    );\n\n    nextElements = R.compose(\n      R.prepend(\n        R.compose(\n          setChildren(nextChildren),\n          setHeight(child.box.height - childHeight),\n        )(child),\n      ),\n      R.slice(i + 1, Infinity),\n    )(children);\n\n    break;\n  }\n\n  return [currentElements, nextElements, offset];\n};\n\nconst breakNode = height => node => {\n  const [currentChildren, nextChildren, offset] = breakChildren(height, node);\n\n  if (R.isNil(offset)) return [node];\n\n  const currentNode = R.compose(\n    setChildren(currentChildren),\n    setHeight(Math.ceil(offset / height) * height),\n  )(node);\n\n  const nextNode = R.compose(\n    setChildren(nextChildren),\n    setHeight(node.box.height - offset),\n  )(node);\n\n  return [currentNode, nextNode];\n};\n\nconst breakPage = page => {\n  const pages = [];\n  const height = getContentArea(page);\n\n  let subpages = breakNode(height)(page);\n  let current = subpages[0];\n  let nextPage = subpages[1];\n\n  pages.push(current);\n\n  while (nextPage) {\n    subpages = R.compose(\n      breakNode(height),\n      resolvePageDimensions,\n      setHeight(null),\n    )(nextPage);\n\n    current = subpages[0];\n    nextPage = subpages[1];\n\n    pages.push(current);\n  }\n\n  return pages;\n};\n\nconst resolvePageBreaks = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.compose(\n        R.flatten,\n        R.map(breakPage),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageBreaks;\n","import * as R from 'ramda';\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const [currentChild, nextChild] = splitNode(height, child);\n\n    if (currentChild) currentChildren.push(currentChild);\n    if (nextChild) nextChildren.push(nextChild);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitNode = R.curryN(2, (height, node) => {\n  if (!node) return [null, null];\n\n  const nodeTop = getTop(node);\n  const nodeHeight = getHeight(node);\n  const isOutside = isElementOutside(height, node);\n  const shouldSplit = height < nodeTop + nodeHeight;\n\n  if (isOutside) {\n    const next = R.evolve({ box: { top: R.subtract(R.__, height) } })(node);\n    return [null, next, false];\n  }\n\n  if (shouldSplit) {\n    const [currentChilds, nextChildren] = splitChildren(height, node);\n\n    const current = R.evolve({\n      children: R.always(currentChilds),\n      style: {\n        borderBottomLeftRadius: R.always(0),\n        borderBottomRightRadius: R.always(0),\n      },\n      box: {\n        height: R.when(R.always(shouldSplit), R.always(height - nodeTop)),\n      },\n    })(node);\n\n    const next = R.evolve({\n      children: R.always(nextChildren),\n      style: {\n        borderTopLeftRadius: R.always(0),\n        borderTopRightRadius: R.always(0),\n      },\n      box: {\n        top: R.always(0),\n        height: R.subtract(R.__, height - nodeTop),\n      },\n    })(node);\n\n    return [current, next];\n  }\n\n  return [node, null, false];\n});\n\nexport default splitNode;\n","import * as R from 'ramda';\n\nimport splitNode from '../node/split';\n\nconst getPaddingBottom = R.pathOr(0, ['style', 'paddingBottom']);\n\nconst getWrappingArea = page => {\n  const paddingBottom = getPaddingBottom(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingBottom;\n};\n\nconst splitPage = page => {\n  if (!page) return [];\n\n  const height = getWrappingArea(page);\n  let splittedPage = splitNode(height, page);\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitNode(height, nextPage);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageSplitting = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.compose(\n        R.flatten,\n        R.map(splitPage),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageSplitting;\n","import * as R from 'ramda';\n\nimport { resolvePageSize } from './resolvePageSizes';\nimport resolvePageBreaks from './resolvePageBreaks';\nimport resolvePageSplitting from './resolvePageSplitting';\n\nconst restorePageSize = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageSize('box')),\n    }),\n  ),\n});\n\nconst resolvePageWrapping = R.compose(\n  restorePageSize,\n  resolvePageSplitting,\n  resolvePageBreaks,\n);\n\nexport default resolvePageWrapping;\n","import * as R from 'ramda';\n\nimport isNote from '../node/isNote';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Get node underlying text value\n *\n * @param {Object} node\n * @returns {String} node text content\n */\nconst getNodeText = node =>\n  R.cond([\n    [R.is(String), R.identity],\n    [isTextInstance, R.prop('value')],\n    [\n      R.T,\n      R.compose(\n        getNodesText,\n        R.propOr([], 'children'),\n      ),\n    ],\n  ])(node);\n\n/**\n * Get underlying text value of several nodes\n *\n * @param {Array} nodes\n * @returns {String} nodes text content\n */\nconst getNodesText = R.compose(\n  R.join(''),\n  R.map(getNodeText),\n);\n\n/**\n * Transforms string to text instance\n *\n * @param {String} value\n * @returns {Array} text intance\n */\nconst wrapTextInstance = value => [{ type: 'TEXT_INSTANCE', value }];\n\n/**\n * Cast Note children as a text instance\n *\n * @param {Object} node\n * @returns {Object} node with resolved note children\n */\nconst resolveNoteChildren = node =>\n  R.ifElse(\n    isNote,\n    R.evolve({\n      children: R.compose(\n        wrapTextInstance,\n        getNodesText,\n      ),\n    }),\n    R.evolve({ children: R.map(resolveNoteChildren) }),\n  )(node);\n\nexport default resolveNoteChildren;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.width : value;\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageVerticalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.height : value;\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nconst resolvePagePaddings = page =>\n  R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(page.box),\n      paddingRight: resolvePageHorizontalPadding(page.box),\n      paddingTop: resolvePageVerticalPadding(page.box),\n      paddingBottom: resolvePageVerticalPadding(page.box),\n    }),\n  })(page);\n\n/**\n * Translates all pages percentage paddings in fixed ones\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nexport default R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePagePaddings),\n    }),\n  ),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = matchPercent(value);\n  return match\n    ? match.percent * Math.min(container.width, container.height)\n    : value;\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolvePercentRadius = node =>\n  R.evolve({\n    children: R.map(resolvePercentRadius),\n    style: R.evolve({\n      borderTopLeftRadius: resolveRadius(node.box),\n      borderTopRightRadius: resolveRadius(node.box),\n      borderBottomRightRadius: resolveRadius(node.box),\n      borderBottomLeftRadius: resolveRadius(node.box),\n    }),\n  })(node);\n\nexport default resolvePercentRadius;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nconst transformHeight = pageArea => height => {\n  const match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nconst getPageArea = page => {\n  const pageHeight = R.path(['style', 'height'], page);\n  const pagePaddingTop = R.pathOr(0, ['style', 'paddingTop'], page);\n  const pagePaddingBottom = R.pathOr(0, ['style', 'paddingBottom'], page);\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Checks if page has height\n *\n * @param {Object} page\n * @return {boolean} page has height\n */\nconst hasHeight = R.hasPath(['style', 'height']);\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nconst resolveNodePercentHeight = page => node => {\n  if (hasHeight(page)) {\n    const pageArea = getPageArea(page);\n    return R.evolve({ style: { height: transformHeight(pageArea) } })(node);\n  }\n\n  return node;\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nconst resolvePagePercentHeight = page =>\n  R.evolve({\n    children: R.map(resolveNodePercentHeight(page)),\n  })(page);\n\n/**\n * Transform all page immediate children with percent height to fixed\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nconst resolvePercentHeight = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePagePercentHeight),\n    }),\n  ),\n});\n\nexport default resolvePercentHeight;\n","import * as R from 'ramda';\n\nimport { LINK } from '../constants';\n\n/**\n * Checks if node is link\n *\n * @param {Object} node\n * @returns {Boolean} is node link?\n */\nconst isLink = R.propEq('type', LINK);\n\nexport default isLink;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\nimport isLink from '../node/isLink';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nconst hasRenderProp = R.hasPath(['props', 'render']);\n\n/**\n * Checks if all children of node are text instances\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nconst hasTextInstanceChilds = R.compose(\n  R.all(isTextInstance),\n  R.propOr([], 'children'),\n);\n\n/**\n * If the Link has a strign child or render prop, substitute the instance by a Text,\n * that will ultimately render the inline Link via the textkit PDF renderer.\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nconst resolveLinkSubstitution = node =>\n  R.evolve({\n    children: R.map(\n      R.ifElse(\n        R.both(isLink, R.either(hasRenderProp, hasTextInstanceChilds)),\n        R.assoc('type', TEXT),\n        resolveLinkSubstitution,\n      ),\n    ),\n  })(node);\n\nexport default resolveLinkSubstitution;\n","import * as R from 'ramda';\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async value => {\n  for (const fn of R.reverse(fns)) value = await fn(value);\n  return value;\n};\n\nexport default asyncCompose;\n","import * as R from 'ramda';\n\n/**\n * Translates relative coordinates to absolute coordinates\n *\n * @param {Object} root node\n * @returns {Object} root node with absolute coordinates\n */\nconst resolveAbsoluteCoordinates = node => {\n  const top = R.pathOr(0, ['box', 'top'], node);\n  const left = R.pathOr(0, ['box', 'left'], node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveAbsoluteCoordinates,\n        R.evolve({\n          box: R.evolve({\n            top: R.add(top),\n            bottom: R.add(top),\n            left: R.add(left),\n            right: R.add(left),\n          }),\n          origin: R.evolve({\n            top: R.add(top),\n            left: R.add(left),\n          }),\n        }),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveAbsoluteCoordinates;\n","import * as R from 'ramda';\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolveZIndex = node =>\n  R.evolve({\n    children: R.compose(\n      R.map(resolveZIndex),\n      R.sortBy(R.path(['style', 'zIndex'])),\n    ),\n  })(node);\n\nexport default resolveZIndex;\n","import * as R from 'ramda';\n\nconst save = ctx => R.tap(() => ctx.save());\n\nexport default save;\n","import * as R from 'ramda';\n\nconst restore = ctx => R.tap(() => ctx.restore());\n\nexport default restore;\n","import * as R from 'ramda';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\n\nconst renderText = (ctx, node) => {\n  const { top, left } = node.box;\n  const paddingTop = R.pathOr(0, ['box', 'paddingTop'], node);\n  const paddingLeft = R.pathOr(0, ['box', 'paddingLeft'], node);\n  const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n\n  ctx.save();\n  ctx.translate(left + paddingLeft, top + paddingTop - initialY);\n  PDFRenderer.render(ctx, [node.lines]);\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderText);\n","import * as R from 'ramda';\n\nconst renderPage = (ctx, node) => {\n  const { width, height } = node.box;\n\n  ctx.addPage({ size: [width, height], margin: 0 });\n\n  return node;\n};\n\nexport default R.curryN(2, renderPage);\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\n/**\n * Add protocol th URL if valid\n *\n * @param {String} value url\n * @returns {String} corrected url\n */\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import * as R from 'ramda';\n\nimport { getURL } from '../utils/url';\n\nconst getSource = R.compose(\n  getURL,\n  R.either(R.path(['props', 'src']), R.path(['props', 'href'])),\n);\n\nexport default getSource;\n","import * as R from 'ramda';\n\nimport getSource from '../link/getSource';\n\nconst renderLink = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n  const src = getSource(node);\n\n  ctx.link(left, top, width, height, src);\n\n  return node;\n};\n\nexport default R.curryN(2, renderLink);\n","import * as R from 'ramda';\n\nconst renderNote = (ctx, node) => {\n  const { top, left } = node.box;\n  const value = node.children[0] ? node.children[0].value : '';\n\n  ctx.note(left, top, 0, 0, value);\n\n  return node;\n};\n\nexport default R.curryN(2, renderNote);\n","import * as R from 'ramda';\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipNode = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomRightRadius = 0,\n    borderBottomLeftRadius = 0,\n  } = node.style;\n\n  // Border top\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const ctr = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - ctr,\n    top,\n    left + width,\n    top + ctr,\n    left + width,\n    top + rtr,\n  );\n\n  // Border right\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const cbr = rbr * (1.0 - KAPPA);\n\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - cbr,\n    left + width - cbr,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Border bottom\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  const cbl = rbl * (1.0 - KAPPA);\n\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + cbl,\n    top + height,\n    left,\n    top + height - cbl,\n    left,\n    top + height - rbl,\n  );\n\n  // Border left\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const ctl = rtl * (1.0 - KAPPA);\n\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  return node;\n};\n\nexport default R.curryN(2, clipNode);\n","import matchPercent from '../utils/matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nexport default resolveObjectFit;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport warning from '../utils/warning';\nimport resolveObjectFit from '../image/resolveObjectFit';\n\nconst drawImage = ctx => node => {\n  const { left, top } = node.box;\n  const { opacity, objectPositionX, objectPositionY } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingRight = node.box.paddingRight || 0;\n  const paddingBottom = node.box.paddingBottom || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  const { width, height, xOffset, yOffset } = resolveObjectFit(\n    node.style.objectFit,\n    node.box.width - paddingLeft - paddingRight,\n    node.box.height - paddingTop - paddingBottom,\n    node.image.width,\n    node.image.height,\n    objectPositionX,\n    objectPositionY,\n  );\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(\n          node.image.data,\n          left + paddingLeft + xOffset,\n          top + paddingTop + yOffset,\n          {\n            width,\n            height,\n          },\n        );\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.src}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(ctx) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        ctx[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import * as R from 'ramda';\n\nimport painter from '../canvas/painter';\nimport warning from '../utils/warning';\n\nconst defaultsZero = R.pathOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  warning(\n    availableWidth && availableHeight,\n    'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n  );\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderCanvas);\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\nimport {\n  RULER_WIDTH,\n  RULER_COLOR,\n  LINE_COLOR,\n  GRID_COLOR,\n  LINE_WIDTH,\n  RULER_FONT_SIZE,\n  DEFAULT_RULER_STEPS,\n} from '../constants';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst getVerticalSteps = page => {\n  const value =\n    page.props.horizontalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const width = page.box.width - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return width / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst getHorizontalSteps = page => {\n  const value =\n    page.props.verticalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const height =\n        page.box.height - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return height / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst renderVerticalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasHorizontalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(width, getVerticalSteps(page));\n\n  ctx\n    .rect(offset, 0, width, RULER_WIDTH)\n    .fill(RULER_COLOR)\n    .moveTo(offset, RULER_WIDTH)\n    .lineTo(width, RULER_WIDTH)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(offset + step, 0)\n      .lineTo(offset + step, RULER_WIDTH)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, offset + step + 1, 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(offset + step, RULER_WIDTH)\n        .lineTo(offset + step, height)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderHorizontalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasVerticalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(height, getHorizontalSteps(page));\n\n  ctx\n    .rect(0, offset, RULER_WIDTH, height)\n    .fill(RULER_COLOR)\n    .moveTo(RULER_WIDTH, hasHorizontalRuler(page) ? RULER_WIDTH : 0)\n    .lineTo(RULER_WIDTH, height)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(0, offset + step)\n      .lineTo(RULER_WIDTH, offset + step)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, 1, offset + step + 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(RULER_WIDTH, offset + step)\n        .lineTo(width, offset + step)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderRulers = (ctx, page) => {\n  ctx\n    .save()\n    .lineWidth(LINE_WIDTH)\n    .fontSize(RULER_FONT_SIZE)\n    .opacity(1);\n\n  R.compose(\n    R.when(hasVerticalRuler, renderVerticalRuler(ctx)),\n    R.when(hasHorizontalRuler, renderHorizontalRuler(ctx)),\n  )(page);\n\n  ctx.restore();\n\n  return page;\n};\n\nexport default R.curryN(2, renderRulers);\n","import * as R from 'ramda';\n\nconst getDocumentProp = target => (or, prop) =>\n  R.pathOr(or, ['children', 0, 'props', prop], target);\n\nconst setPDFMetadata = target => (key, value) => {\n  if (value) target.info[key] = value;\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} root document root\n */\nconst addMetadata = (ctx, root) => {\n  const getProp = getDocumentProp(root);\n  const setProp = setPDFMetadata(ctx);\n\n  const title = getProp(null, 'title');\n  const author = getProp(null, 'author');\n  const subject = getProp(null, 'subject');\n  const keywords = getProp(null, 'keywords');\n  const creator = getProp('react-pdf', 'creator');\n  const producer = getProp('react-pdf', 'producer');\n\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n\n  return root;\n};\n\nexport default R.curryN(2, addMetadata);\n","import * as R from 'ramda';\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n\nconst shouldDebug = R.pathEq(['props', 'debug'], true);\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nconst debugContent = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    paddingLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n  } = node.box;\n\n  ctx\n    .fillColor(CONTENT_COLOR)\n    .opacity(0.5)\n    .rect(\n      left + paddingLeft,\n      top + paddingTop,\n      width - paddingLeft - paddingRight,\n      height - paddingTop - paddingBottom,\n    )\n    .fill();\n};\n\nconst debugPadding = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    paddingLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n  } = node.box;\n\n  ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n  // Padding top\n  ctx\n    .rect(\n      left + paddingLeft,\n      top,\n      width - paddingRight - paddingLeft,\n      paddingTop,\n    )\n    .fill();\n\n  // Padding left\n  ctx.rect(left, top, paddingLeft, height).fill();\n\n  // Padding right\n  ctx.rect(left + width - paddingRight, top, paddingRight, height).fill();\n\n  // Padding bottom\n  ctx\n    .rect(\n      left + paddingLeft,\n      top + height - paddingBottom,\n      width - paddingRight - paddingLeft,\n      paddingBottom,\n    )\n    .fill();\n};\n\nconst debugMargin = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n  } = node.box;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n  // Margin top\n  ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n  // Margin left\n  ctx\n    .rect(\n      left - marginLeft,\n      top - marginTop,\n      marginLeft,\n      height + marginTop + marginBottom,\n    )\n    .fill();\n\n  // Margin right\n  ctx\n    .rect(\n      left + width,\n      top - marginTop,\n      marginRight,\n      height + marginTop + marginBottom,\n    )\n    .fill();\n\n  // Margin bottom\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nconst debugText = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n  } = node.box;\n\n  const roundedWidth = Math.round(width + marginLeft + marginRight);\n  const roundedHeight = Math.round(height + marginTop + marginBottom);\n\n  ctx\n    .fontSize(4)\n    .opacity(1)\n    .fillColor('black')\n    .text(\n      `${roundedWidth} x ${roundedHeight}`,\n      left - marginLeft,\n      Math.max(top - marginTop - 4, 1),\n    );\n};\n\nconst debugOrigin = (ctx, node) => {\n  if (node.origin) {\n    ctx\n      .circle(node.origin.left, node.origin.top, 3)\n      .fill('red')\n      .circle(node.origin.left, node.origin.top, 5)\n      .stroke('red');\n  }\n};\n\nconst renderDebug = (ctx, node) => {\n  if (!shouldDebug(node)) return node;\n\n  ctx.save();\n\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderDebug);\n","import * as R from 'ramda';\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst shouldRenderBorders = node =>\n  node.box &&\n  (node.box.borderTopWidth ||\n    node.box.borderRightWidth ||\n    node.box.borderBottomWidth ||\n    node.box.borderLeftWidth);\n\nconst renderBorders = (ctx, node) => {\n  if (!shouldRenderBorders(node)) return node;\n\n  const {\n    width,\n    height,\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = node.box;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = node.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderBorders);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\n\nconst drawBackground = ctx => node => {\n  if (node.box && node.style.backgroundColor) {\n    const { top, left, width, height } = node.box;\n\n    ctx\n      .fillOpacity(node.style.opacity || 1)\n      .fillColor(node.style.backgroundColor)\n      .rect(left, top, width, height)\n      .fill();\n  }\n\n  return node;\n};\n\nconst shouldRenderBackground = R.hasPath(['style', 'backgroundColor']);\n\nconst renderBackground = (ctx, node) => {\n  R.when(\n    shouldRenderBackground,\n    R.compose(\n      restore(ctx),\n      drawBackground(ctx),\n      clipNode(ctx),\n      save(ctx),\n    ),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderBackground);\n","import * as R from 'ramda';\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\n\nconst getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    ctx.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    ctx.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    ctx.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    ctx.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    ctx.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin,\n    });\n  } else if (/matrix/g.test(transform)) {\n    ctx.transform(...getMatrix(transform));\n  }\n};\n\nconst applyTransformations = (ctx, node) => {\n  if (!node.origin) return node;\n\n  let match;\n  const re = /[a-zA-Z]+\\([^)]+\\)/g;\n  const origin = [node.origin.left, node.origin.top];\n  const transform = (node.style && node.style.transform) || '';\n\n  while ((match = re.exec(transform)) != null) {\n    applySingleTransformation(ctx, match[0], origin);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, applyTransformations);\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport save from './save';\nimport restore from './restore';\nimport isText from '../node/isText';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isNote from '../node/isNote';\nimport isLink from '../node/isLink';\nimport isCanvas from '../node/isCanvas';\nimport renderText from './renderText';\nimport renderPage from './renderPage';\nimport renderLink from './renderLink';\nimport renderNote from './renderNote';\nimport renderImage from './renderImage';\nimport renderCanvas from './renderCanvas';\nimport renderRulers from './renderRulers';\nimport addMetadata from './addMetadata';\nimport renderDebug from './renderDebug';\nimport renderBorders from './renderBorders';\nimport renderBackground from './renderBackground';\nimport applyTransformations from './applyTransformations';\n\nconst isNotText = R.complement(isText);\n\nconst renderNode = ctx => node => {\n  const renderChildren = R.tap(\n    R.compose(\n      R.forEach(renderNode(ctx)),\n      R.pathOr([], ['children']),\n    ),\n  );\n\n  return R.compose(\n    restore(ctx),\n    renderDebug(ctx),\n    R.when(isNotText, renderChildren),\n    R.cond([\n      [isText, renderText(ctx)],\n      [isLink, renderLink(ctx)],\n      [isNote, renderNote(ctx)],\n      [isImage, renderImage(ctx)],\n      [isCanvas, renderCanvas(ctx)],\n      [R.T, R.identity],\n    ]),\n    renderBorders(ctx),\n    renderBackground(ctx),\n    applyTransformations(ctx),\n    save(ctx),\n    R.when(isPage, renderPage(ctx)),\n  )(node);\n};\n\nconst renderDocument = ctx =>\n  R.compose(\n    R.forEach(\n      R.compose(\n        renderRulers(ctx),\n        renderNode(ctx),\n      ),\n    ),\n    R.pathOr([], ['children']),\n  );\n\nconst renderRoot = ctx =>\n  R.compose(\n    R.forEach(renderDocument(ctx)),\n    R.pathOr([], ['children']),\n  );\n\nconst render = (ctx, root) => {\n  addMetadata(ctx)(root);\n  renderRoot(ctx)(root);\n\n  ctx.end();\n  Font.reset();\n\n  return ctx;\n};\n\nexport default render;\n","import flatten from './flatten';\n\nconst create = styles => styles;\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  flatten,\n  absoluteFillObject,\n};\n","import BlobStream from 'blob-stream';\nimport PDFDocument from '@react-pdf/pdfkit';\n\nimport createRenderer from './renderer';\nimport layoutDocument from './layout';\nimport renderPDF from './pdf/render';\nimport StyleSheet from './stylesheet';\nimport Font from './font';\nimport { version } from '../package.json';\nimport {\n  VIEW,\n  TEXT,\n  LINK,\n  PAGE,\n  NOTE,\n  IMAGE,\n  DOCUMENT,\n  CANVAS,\n} from './constants';\n\nconst View = VIEW;\nconst Text = TEXT;\nconst Link = LINK;\nconst Page = PAGE;\nconst Note = NOTE;\nconst Image = IMAGE;\nconst Document = DOCUMENT;\nconst Canvas = CANVAS;\n\nconst pdf = input => {\n  let _isDirty = true;\n\n  const container = { type: 'ROOT', children: [] };\n  const PDFRenderer = createRenderer(markAsDirty);\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return _isDirty;\n  }\n\n  function markAsDirty() {\n    _isDirty = true;\n  }\n\n  function callOnRender(params = {}) {\n    // if (container.document.props.onRender) {\n    // const layoutData = container.document.getLayoutData();\n    // container.document.props.onRender({ ...params, layoutData });\n    // }\n  }\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false });\n\n    // let layout;\n\n    // for (let i = 0; i < 10; i++) {\n    console.time('layout');\n    const layout = await layoutDocument(container);\n    console.timeEnd('layout');\n    // }\n\n    const instance = renderPDF(ctx, layout);\n\n    _isDirty = false;\n\n    // console.log(layout);\n\n    return instance;\n  };\n\n  const renderWithContext = async ctx => {\n    const layout = await layoutDocument(container);\n    const instance = renderPDF(ctx, layout);\n    _isDirty = false;\n\n    return instance;\n  };\n\n  const layout = async () => {\n    return layoutDocument(container);\n  };\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  // async function toBuffer() {\n  //   await container.render();\n\n  //   callOnRender();\n\n  //   return container.instance;\n  // }\n\n  // function toString() {\n  //   let result = '';\n  //   container.render();\n\n  //   return new Promise((resolve, reject) => {\n  //     try {\n  //       container.instance.on('data', function(buffer) {\n  //         result += buffer;\n  //       });\n\n  //       container.instance.on('end', function() {\n  //         callOnRender({ string: result });\n  //         resolve(result);\n  //       });\n  //     } catch (error) {\n  //       reject(error);\n  //     }\n  //   });\n  // }\n\n  return {\n    layout,\n    isDirty,\n    container,\n    updateContainer,\n    renderWithContext,\n    // toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  pdf,\n};\n","import React from 'react';\n\nconst svgpath = require('svgpath');\n\nimport { pdf } from './index';\n\nconst queue = require('queue');\n\nconst canvasInstance = canvas => {\n  const instance = {};\n  const images = {};\n  const ctx = canvas.getContext('2d');\n\n  let fillColor = 'white';\n\n  const nil = () => {\n    return instance;\n  };\n\n  instance.info = {};\n  instance.end = nil;\n  instance.font = nil;\n\n  instance.translate = (x, y) => {\n    ctx.translate(x, y);\n    return instance;\n  };\n\n  instance.addPage = ({ size }) => {\n    canvas.width = size[0];\n    canvas.height = size[1];\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  instance.save = () => {\n    ctx.save();\n    return instance;\n  };\n\n  instance.restore = () => {\n    ctx.restore();\n    return instance;\n  };\n\n  instance.moveTo = (x, y) => {\n    ctx.moveTo(x, y);\n    return instance;\n  };\n\n  instance.lineTo = (x, y) => {\n    ctx.lineTo(x, y);\n    return instance;\n  };\n\n  instance.bezierCurveTo = (a, b, c, d, e, f) => {\n    ctx.bezierCurveTo(a, b, c, d, e, f);\n    return instance;\n  };\n\n  instance.closePath = () => {\n    ctx.closePath();\n    return instance;\n  };\n\n  instance.clip = () => {\n    ctx.clip();\n    return instance;\n  };\n\n  instance.fillColor = color => {\n    fillColor = color;\n    return instance;\n  };\n\n  instance.rect = (a, b, c, d) => {\n    ctx.rect(a, b, c, d);\n    return instance;\n  };\n\n  instance.fill = () => {\n    ctx.fillStyle = fillColor;\n    ctx.fill();\n    return instance;\n  };\n\n  instance.fillOpacity = opacity => {\n    ctx.globalAlpha = opacity;\n    return instance;\n  };\n\n  instance._addGlyphs = (glyphs, positions) => {\n    let xAdvance = 0;\n    const fontSize = 20;\n    const unitsPerEm = 2048;\n\n    for (let i = 0; i < glyphs.length; i++) {\n      const glyph = glyphs[i];\n      const position = positions[i];\n\n      const path = svgpath(glyph.path.toSVG())\n        .scale(1, -1)\n        .scale(fontSize / unitsPerEm)\n        .translate(xAdvance, 0)\n        .toString();\n\n      xAdvance += position.xAdvance;\n\n      ctx.fillStyle = '#000';\n\n      const p = new Path2D(path);\n\n      ctx.stroke(p);\n      ctx.fill(p);\n    }\n\n    return instance;\n  };\n\n  instance.image = (data, x, y, { width, height }) => {\n    const base64Data = btoa(String.fromCharCode.apply(null, data));\n\n    if (images[base64Data]) {\n      ctx.drawImage(images[base64Data], x, y, width, height);\n    } else {\n      const img = document.createElement('img');\n      img.src = 'data:image/png;base64,' + base64Data;\n\n      images[base64Data] = img;\n\n      img.onload = () => {\n        ctx.drawImage(img, x, y, width, height);\n      };\n    }\n\n    return instance;\n  };\n\n  instance.clear = () => {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  };\n\n  return instance;\n};\n\nexport class CanvasViewer extends React.Component {\n  ctx = null;\n  instance = pdf();\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n  state = { layout: null, error: null };\n\n  componentDidMount() {\n    this.ctx = canvasInstance(this.canvas);\n    this.queueDocumentRender(this.props.children);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.children !== this.props.children) {\n      this.queueDocumentRender(this.props.children);\n    }\n  }\n\n  queueDocumentRender(doc) {\n    this.renderQueue.splice(0, this.renderQueue.length, () => {\n      this.instance.updateContainer(doc);\n\n      if (this.instance.isDirty() && !this.state.error) {\n        return this.instance.renderWithContext(this.ctx);\n      }\n\n      return Promise.resolve();\n    });\n  }\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = layout => {\n    this.setState({ layout });\n  };\n\n  render() {\n    return (\n      <canvas\n        height={900}\n        id=\"myCanvas\"\n        ref={ref => (this.canvas = ref)}\n        style={{ border: '1px solid black' }}\n        width={900}\n      />\n    );\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { CanvasViewer } from './canvas';\n\nimport warning from '../src/utils/warning';\n\nconst queue = require('queue');\n\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n  // createInstance,\n  Document as PDFDocument,\n} from './index';\n\nconst flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n\nexport const Document = ({ children, ...props }) => {\n  return <PDFDocument {...props}>{children}</PDFDocument>;\n};\n\nclass InternalBlobProvider extends React.PureComponent {\n  instance = pdf();\n  renderQueue = queue({ autostart: true, concurrency: 1 });\n  state = { blob: null, url: null, loading: true, error: null };\n\n  componentDidMount() {\n    this.queueDocumentRender(this.props.document);\n\n    this.renderQueue.on('error', this.onRenderFailed);\n    this.renderQueue.on('success', this.onRenderSuccessful);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.document !== this.props.document) {\n      this.queueDocumentRender(this.props.document);\n    }\n  }\n\n  queueDocumentRender(doc) {\n    this.renderQueue.splice(0, this.renderQueue.length, () => {\n      this.instance.updateContainer(doc);\n\n      if (this.instance.isDirty() && !this.state.error) {\n        return this.instance.toBlob();\n      }\n\n      return Promise.resolve();\n    });\n  }\n\n  onRenderFailed = error => {\n    this.setState({ error });\n    console.error(error);\n  };\n\n  onRenderSuccessful = blob => {\n    const oldBlobUrl = this.state.url;\n\n    this.setState(\n      { blob, url: URL.createObjectURL(blob), loading: false },\n      () => URL.revokeObjectURL(oldBlobUrl),\n    );\n  };\n\n  render() {\n    return this.props.children(this.state);\n  }\n}\n\nexport const BlobProvider = ({ document: doc, children }) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to BlobProvider');\n    return null;\n  }\n\n  return <InternalBlobProvider document={doc}>{children}</InternalBlobProvider>;\n};\n\nexport const PDFViewer = ({\n  className,\n  style,\n  children,\n  innerRef,\n  ...props\n}) => {\n  return (\n    <InternalBlobProvider document={children}>\n      {({ url }) => (\n        <iframe\n          className={className}\n          ref={innerRef}\n          src={url}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n          {...props}\n        />\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport const PDFDownloadLink = ({\n  document: doc,\n  className,\n  style,\n  children,\n  fileName = 'document.pdf',\n}) => {\n  if (!doc) {\n    warning(false, 'You should pass a valid document to PDFDownloadLink');\n    return null;\n  }\n\n  const downloadOnIE = blob => () => {\n    if (window.navigator.msSaveBlob) {\n      window.navigator.msSaveBlob(blob, fileName);\n    }\n  };\n\n  return (\n    <InternalBlobProvider document={doc}>\n      {params => (\n        <a\n          className={className}\n          download={fileName}\n          href={params.url}\n          onClick={downloadOnIE(params.blob)}\n          style={Array.isArray(style) ? flatStyles(style) : style}\n        >\n          {typeof children === 'function' ? children(params) : children}\n        </a>\n      )}\n    </InternalBlobProvider>\n  );\n};\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  StyleSheet,\n} from './index';\n\nexport { CanvasViewer } from './canvas';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Canvas,\n  version,\n  Document,\n  PDFViewer,\n  StyleSheet,\n  CanvasViewer,\n  BlobProvider,\n  PDFDownloadLink,\n};\n"],"names":["emojiSource","hyphenationCallback","emptyObject","createRenderer","onChange","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","child","children","push","createInstance","type","style","box","props","createTextInstance","text","rootContainerInstance","value","finalizeInitialChildren","element","getPublicInstance","instance","prepareForCommit","prepareUpdate","oldProps","newProps","propsEqual","a","b","oldPropsKeys","Object","keys","newPropsKeys","length","i","propName","resetAfterCommit","c","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","insertBefore","beforeChild","index","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","matchBoxModel","R","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isFontWeightStyle","key","match","isBorderStyle","isBoxModelStyle","isObjectPositionStyle","isTransformOriginStyle","processBorders","Error","processBoxModel","processFontWeight","toLowerCase","processObjectPosition","processTransformOrigin","result","transformOffsetKeywords","matchNumber","String","castFloat","v","parseFloat","transformStyles","propsArray","resolvedStyle","fetchFont","src","options","fetch","response","buffer","arrayBuffer","constructor","name","Buffer","from","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","this","headers","body","method","fontkit","create","Promise","resolve","reject","open","_this","err","Font","family","sources","register","descriptor","res","styleSources","filter","s","exactFit","find","leftOffset","rightOffset","lt","gt","registerEmojiSource","url","format","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","warning","process","env","NODE_ENV","condition","undefined","args","argIndex","message","replace","console","error","x","fonts","getFont","standardFonts","includes","font","getRegisteredFonts","getRegisteredFontFamilies","clear","reset","hasOwnProperty","emoji","hyphenation","isImage","PNG","isValid","e","MARKERS","JPEG","width","height","readUInt16BE","marker","pos","isBuffer","IMAGE_CACHE","limit","cache","get","set","shift","createCache","fetchRemoteFile","uri","getImage","extension","resolveBufferImage","guessFormat","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","image","cacheKey","toString","test","exec","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","getSource","fetchImage","node","warn","_context","emojis","regex","emojiRegex","_removeNoColor","buildEmojiUrl","string","Array","map","char","codePointAt","join","fetchEmojis","promises","promise","emojiUrl","fetchEmojiImage","then","fetchAssets","listToExplore","slice","forEach","childNode","compact","Boolean","isArray","isNotArray","castArray","flatten","styles","reduce","acc","prototype","styleShorthands","margin","marginTop","marginRight","marginBottom","marginLeft","marginHorizontal","marginVertical","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandedKeys","expandStyles","expandedProps","call","transformUnit","container","scalar","unit","parseValue","matchMedia","resolveStyles","transformUnits","resolveMediaQueries","flattenStyles","resolveNodeStyles","page","pageBox","hasVerticalRuler","hasHorizontalRuler","adjustPageSize","top","left","resolveRulers","matchPercent","isPercent","percent","absValue","Math","abs","absPercent","getTransformStyle","getOrigin","percentX","percentY","resolveOrigin","resolveNodeOrigin","getOrientation","isLandscape","toSizeObject","flipSizeObject","getStringSize","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getNumberSize","throwInvalidError","size","target","resolvePageSize","Number","getPageSize","isNotNil","firstPass","fns","fn","getComputedMargin","edge","yogaNode","_yogaNode","getMargin","Yoga","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedPadding","getPadding","getTop","getComputedTop","getRight","getComputedRight","getBottom","getComputedBottom","getLeft","getComputedLeft","getPosition","right","bottom","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","upperFirst","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","setFlex","setFlexGrow","setFlexBasis","setAlign","yogaValue","ALIGN_FLEX_START","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_STRETCH","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","ALIGN_AUTO","setAlignSelf","setFlexShrink","setAlignContent","isRow","isRowReverse","isColumnReverse","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","isText","isNote","isPage","isCanvas","StandardFont","PDFFont","layout","str","encode","encoded","positions","stringIndices","_","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","fontCache","IGNORED_CODE_POINTS","getFontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","IGNORABLE_CODEPOINTS","isTextInstance","PREPROCESSORS","fragments","fragment","charSubset","attributes","fromCharCode","subsetRegex","RegExp","lastIndex","emojiSize","fontSize","chunk","attachment","yOffset","floor","transformText","transformation","toUpperCase","l","engine","layoutEngine","linebreaker","justification","textDecoration","scriptItemizer","wordHyphenation","fontSubstitution","runs","lastFont","run","defaultFont","start","end","scale","unitsPerEm","layoutText","AttributedString","fromFragments","getFragments","color","backgroundColor","textAlign","lineHeight","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","opacity","obj","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","y","maxLines","Infinity","truncateMode","hyphenationPenalty","shrinkWhitespaceFactor","before","after","linesWidth","lines","max","line","linesHeight","widthMode","heightMode","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","min","getRatio","isHeightAuto","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","getMax","ctx","points","nil","addPoint","moveTo","rect","w","h","ellipse","rx","ry","lineTo","circle","polygon","roundedRect","path","lineWidth","bezierCurveTo","quadraticCurveTo","rotate","translate","dash","clip","save","fill","stroke","lineCap","restore","lineJoin","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","getHeight","measureCtx","paint","YOGA_CONFIG","Config","setPointScaleFactor","setYogaValues","setNodeHeight","minWidth","maxWidth","minHeight","maxHeight","position","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","display","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_COLUMN","setFlexDirection","flexDirection","alignSelf","alignContent","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","JUSTIFY_FLEX_START","setJustifyContent","justifyContent","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","setFlexWrap","flexWrap","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","setOverflow","overflow","setAspectRatio","aspectRatio","flex","flexBasis","flexGrow","flexShrink","isNotText","isNotNote","isLayoutElement","isNotTextInstance","createYogaNodes","parent","Node","createWithConfig","setMeasureFunc","measureText","measureImage","measureCanvas","insertChild","getChildCount","calculateLayout","persistDimensions","destroyYogaNodes","n","destroy","resolvePageDimensions","resolveDimensions","shouldLayoutText","getInheritStyles","removeMargins","resolvePageMargins","getWrap","getBreak","getMinPresenceAhead","defaultPresenceAhead","shouldBreak","futureElements","minPresenceAhead","presenceAhead","elements","isElementInside","getPresenceAhead","futureHeight","nodes","getNodesHeight","shouldSplit","shouldWrap","getPaddingBottom","getChildren","setChildren","setBreak","breakNode","breakChildren","offset","nextElements","currentElements","childTop","childHeight","shouldNodeBreak","currentChildren","nextChildren","childsOffset","ceil","resolvePageBreaks","pages","getContentArea","subpages","current","nextPage","isElementOutside","splitChildren","splitNode","currentChild","nextChild","splitNodes","nodeTop","currentChilds","resolvePageSplitting","getWrappingArea","splittedPage","restorePageSize","resolvePageWrapping","getNodesText","wrapTextInstance","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolveRadius","transformHeight","hasHeight","resolveNodePercentHeight","getPageArea","resolvePercentHeight","isLink","hasRenderProp","hasTextInstanceChilds","resolvePageSizeStyle","assocIfNil","asyncCompose","resolveAbsoluteCoordinates","origin","resolveOrigins","timeEnd","time","startTimer","resolveTextLayout","resolvePercentRadius","resolveZIndex","p","all","resolveInheritance","inheritStyles","resolvePagePaddings","resolveNoteChildren","resolveLinkSubstitution","initialY","PDFRenderer","render","addPage","PROTOCOL_REGEXP","note","KAPPA","sqrt","rtr","ctr","rbr","cbr","rbl","cbl","rtl","ctl","closePath","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","objectFit","drawImage","clipNode","availableMethods","defaultsZero","availableWidth","availableHeight","prop","painter","range","steps","matchPercentage","renderVerticalRuler","hRange","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","step","round","renderHorizontalRuler","verticalRulerSteps","getHorizontalSteps","root","getProp","or","setProp","info","setPDFMetadata","title","author","subject","keywords","creator","producer","shouldDebug","debugContent","debugPadding","debugMargin","roundedWidth","roundedHeight","debugText","debugOrigin","shouldRenderBorders","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","clipBorderTop","space","undash","fillBorderTop","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","clipBorderRight","fillBorderRight","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","clipBorderBottom","fillBorderBottom","topLeftCoordX","bottomLeftXCoord","clipBorderLeft","fillBorderLeft","shouldRenderBackground","drawBackground","getTranslateX","transform","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","PI","getRotation","getMatrix","re","renderDocument","renderRulers","renderNode","renderChildren","renderDebug","renderText","renderLink","renderNote","renderImage","renderCanvas","renderBorders","renderBackground","applyTransformations","renderPage","addMetadata","renderRoot","hairlineWidth","absoluteFillObject","View","Text","Link","Page","Note","Image","Canvas","pdf","input","_isDirty","mountNode","createContainer","updateContainer","PDFDocument","autoFirstPage","layoutDocument","renderPDF","renderWithContext","doc","stream","pipe","BlobStream","on","blob","toBlob","isDirty","svgpath","require","queue","CanvasViewer","renderQueue","autostart","concurrency","state","onRenderFailed","setState","onRenderSuccessful","componentDidMount","canvas","images","getContext","clearRect","d","f","fillStyle","globalAlpha","_addGlyphs","xAdvance","toSVG","Path2D","base64Data","btoa","apply","img","document","createElement","onload","queueDocumentRender","componentDidUpdate","prevProps","_this2","React","ref","_this3","Component","flatStyles","stylesArray","Document","InternalBlobProvider","oldBlobUrl","URL","createObjectURL","revokeObjectURL","PureComponent","BlobProvider","PDFViewer","className","innerRef","PDFDownloadLink","fileName","params","download","href","onClick","window","navigator","msSaveBlob","version","StyleSheet"],"mappings":"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"}