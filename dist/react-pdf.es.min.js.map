{"version":3,"file":"react-pdf.es.min.js","sources":["../src/elements/Root.js","../src/font/standard.js","../src/utils/font.js","../src/font/index.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/elements/Document.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/styles.js","../src/elements/Base.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/mixins/ruler.js","../src/elements/Page.js","../src/elements/View.js","../src/utils/url.js","../src/utils/capitalize.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/elements/Image.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","import fetch from 'isomorphic-fetch';\n\nexport const fetchFont = src => {\n  return fetch(src)\n    .then(response => {\n      if (response.buffer) {\n        return response.buffer();\n      }\n      return response.arrayBuffer();\n    })\n    .then(arrayBuffer => Buffer.from(arrayBuffer));\n};\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport standardFonts from './standard';\nimport { fetchFont } from '../utils/font';\n\nlet fonts = {};\nlet emojiSource;\nlet hyphenationCallback;\n\nconst register = (src, { family, ...otherOptions }) => {\n  fonts[family] = {\n    src,\n    loaded: false,\n    loading: false,\n    data: null,\n    ...otherOptions,\n  };\n};\n\nconst registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nconst registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nconst getRegisteredFonts = () => Object.keys(fonts);\n\nconst getFont = family => fonts[family];\n\nconst getEmojiSource = () => emojiSource;\n\nconst getHyphenationCallback = () => hyphenationCallback;\n\nconst load = async function(fontFamily, doc) {\n  const font = fonts[fontFamily];\n\n  // We cache the font to avoid fetching it many times\n  if (font && !font.data && !font.loading) {\n    font.loading = true;\n\n    if (isUrl(font.src)) {\n      const data = await fetchFont(font.src);\n      font.data = fontkit.create(data);\n    } else {\n      if (BROWSER) {\n        throw new Error(\n          `Invalid font url: ${\n            font.src\n          }. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n        );\n      }\n\n      font.data = await new Promise((resolve, reject) =>\n        fontkit.open(font.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n  }\n\n  // If the font wasn't added to the document yet (aka. loaded), we add it.\n  // This prevents calling `registerFont` many times for the same font.\n  // Fonts loaded state will be reset after the document is closed.\n  if (font && !font.loaded) {\n    font.loaded = true;\n    font.loading = false;\n    doc.registerFont(fontFamily, font.data);\n  }\n\n  if (!font && !standardFonts.includes(fontFamily)) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].loaded = false;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getEmojiSource,\n  getRegisteredFonts,\n  registerEmojiSource,\n  registerHyphenationCallback,\n  getHyphenationCallback,\n  getFont,\n  load,\n  clear,\n  reset,\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","import english from 'hyphenation.en-us';\nimport Hypher from 'hypher';\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hypher = new Hypher(english);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      return word.includes(SOFT_HYPHEN_HEX)\n        ? word.split(SOFT_HYPHEN_HEX)\n        : hypher.hyphenate(word);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(start, glyphString.length);\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  const cache = {};\n  const keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport path from 'path';\nimport url from 'url';\nimport fetch from 'isomorphic-fetch';\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport createCache from './cache';\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) => {\n        if (err) {\n          return reject(err);\n        }\n        return resolve(data);\n      });\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst imagesCache = createCache({ limit: 30 });\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = src =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(src);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = src => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(src);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  let body;\n  if (!BROWSER && getAbsoluteLocalPath(src)) {\n    body = await fetchLocalFile(src, options);\n  } else {\n    const response = await fetch(src);\n    const buffer = await (response.buffer\n      ? response.buffer()\n      : response.arrayBuffer());\n    body = await (buffer.constructor.name === 'Buffer'\n      ? buffer\n      : Buffer.from(buffer));\n  }\n\n  const extension = getImageFormat(body);\n\n  return getImage(body, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src;\n\n  if (cache && imagesCache.get(cacheKey)) {\n    return imagesCache.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    imagesCache.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\nconst fetchEmojiImage = reflect(resolveImage);\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n\n      promises.push(\n        fetchEmojiImage(emojiUrl).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import wrapPages from 'page-wrapping';\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style.fontFamily, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const matchPercent = value => /(-?\\d+\\.?\\d*)%/g.exec(value);\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout[percentMethod](parseFloat(isPercent[1], 10));\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setPositionPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setPaddingPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const isPercent = matchPercent(value);\n\n    if (isPercent) {\n      this.layout.setMarginPercent(edge, parseFloat(isPercent[1], 10));\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShortHands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n        {\n          const expandedProps = styleShortHands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values to correct value\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n    const isBorderStyle = key.match(/border/) && typeof value === 'string';\n    const resolved = isBorderStyle ? processBorders(key, value) : value;\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      Object.keys(style).forEach(key => {\n        if (style[key] !== null && style[key] !== undefined) {\n          acc[key] = style[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n\n    this.root.instance.restore();\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.getComputedStyles();\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.getComputedStyles();\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform) => {\n  const { left, top, width, height } = element.getAbsoluteLayout();\n  const origin = [left + width / 2, top + height / 2];\n\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0]);\n    }\n  },\n};\n\nexport default Transformations;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const flatStyles = stylesArray =>\n  stylesArray.reduce((acc, style) => ({ ...acc, ...style }), {});\n","import toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\nimport Node from './Node';\nimport pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport warning from 'fbjs/lib/warning';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport upperFirst from '../utils/upperFirst';\nimport { inheritedProperties } from '../utils/styles';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    const { size, orientation } = this.page;\n\n    this.style = StyleSheet.resolve(this.props.style, {\n      width: size.width,\n      height: size.height,\n      orientation: orientation,\n    });\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) {\n        child.applyProps();\n      }\n    });\n  }\n\n  applyStyle(attribute, value) {\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getComputedStyles() {\n    let element = this.parent;\n    let inheritedStyles = {};\n\n    while (element && element.parent) {\n      inheritedStyles = {\n        ...element.parent.style,\n        ...element.style,\n        ...inheritedStyles,\n      };\n      element = element.parent;\n    }\n\n    return {\n      ...pick(inheritedStyles, inheritedProperties),\n      ...this.style,\n    };\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      height: layout.height,\n      style: this.getComputedStyles(),\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n    const styles = this.getComputedStyles();\n\n    if (styles.backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillColor(styles.backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent._container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","const RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = value.match(/(\\d+\\.?\\d*)%/);\n  if (match) {\n    return 100 / parseFloat(match[1], 10);\n  }\n\n  return null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport Ruler from '../mixins/ruler';\nimport { createInstance } from './index';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    orientation: 'portrait',\n    style: {},\n    wrap: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const isPercent = matchPercent(value);\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    if (isPercent) {\n      const percent = parseFloat(isPercent[1], 10) / 100;\n      this.layout.setPadding(edge, dimension * percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","const PROTOCOL_REGEXP = /^(http|https|ftp|ftps|mailto)\\:\\/\\//i;\n\nexport const isURL = value => {\n  return typeof value === 'string' && !!value.match(PROTOCOL_REGEXP);\n};\n\nexport const getURL = value => {\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","const capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nexport default capitalize;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport capitalize from './capitalize';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n  } = instance.getComputedStyles();\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont(fontFamily);\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n    this.computed = false;\n    this._container = null;\n    this._attributedString = null;\n    this._layoutEngine = null;\n    this.renderCallback = props.render;\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get attributedString() {\n    if (!this._attributedString) {\n      this._attributedString = getAttributedString(this);\n    }\n    return this._attributedString;\n  }\n\n  set attributedString(value) {\n    this._attributedString = value;\n  }\n\n  get container() {\n    const lines = this._container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n\n    return {\n      ...this._container,\n      blocks: [{ lines: lines.splice(this.start, this.end) }],\n    };\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks.reduce(\n      (acc, block) => [...acc, ...block.lines],\n      [],\n    );\n  }\n\n  get linesHeight() {\n    if (!this._container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this._container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  get layoutEngine() {\n    if (!this._layoutEngine) {\n      const { hyphenationPenalty } = this.props;\n      const hyphenationCallback = Font.getHyphenationCallback();\n      this._layoutEngine = new LayoutEngine({\n        hyphenationCallback,\n        hyphenationPenalty,\n      });\n    }\n\n    return this._layoutEngine;\n  }\n\n  set layoutEngine(instance) {\n    this._layoutEngine = instance;\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this._attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n\n      if (counter + line.height > height) {\n        return i;\n      }\n\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    // IF height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this._container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this._container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this._container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.computed = true;\n    this.end = linesCount + 1;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  getComputedStyles() {\n    const styles = super.getComputedStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (!this.props.render && !this.props.fixed) {\n      text._container = this._container;\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    const padding = this.padding;\n    const { top, left } = this.getAbsoluteLayout();\n\n    // We translate lines based on Yoga container\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x = left + padding.left;\n      line.rect.y += top + padding.top - initialX;\n    });\n\n    const renderer = new PDFRenderer(this.root.instance, {\n      outlineLines: false,\n    });\n\n    renderer.render(this.container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import Yoga from 'yoga-layout';\nimport warning from 'fbjs/lib/warning';\nimport Base from './Base';\nimport { resolveImage } from '../utils/image';\n\nconst SAFETY_HEIGHT = 10;\n\n// We manage two bounding boxes in this class:\n//  - Yoga node: Image bounding box. Adjust based on image and page size\n//  - Image node: Real image container. In most cases equals Yoga node, except if image is bigger than page\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.getComputedStyles().flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  async fetch() {\n    const { src, cache, safePath, allowDangerousPaths } = this.props;\n    try {\n      this.image = await resolveImage(src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      // Inner offset between yoga node and image box\n      // Makes image centered inside Yoga node\n      const width =\n        Math.min(this.height * this.ratio, this.width) -\n        padding.left -\n        padding.right;\n      const height = this.height - padding.top - padding.bottom;\n      const xOffset = Math.max((this.width - width) / 2, 0);\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance.image(\n          this.image.data,\n          left + padding.left + xOffset,\n          top + padding.top,\n          { width, height },\n        );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import Root from './Root';\nimport Document from './Document';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport emptyObject from 'fbjs/lib/emptyObject';\nimport { createInstance } from './elements';\nimport propsEqual from './utils/propsEqual';\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport const renderToStream = function(element) {\n  return pdf(element).toBuffer();\n};\n\nexport const renderToFile = function(element, filePath, callback) {\n  const output = renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  createInstance,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["Root","isDirty","document","instance","child","PDFDocument","autoFirstPage","this","render","fetch","src","then","response","buffer","arrayBuffer","Buffer","from","emojiSource","hyphenationCallback","fonts","register","family","otherOptions","registerHyphenationCallback","callback","registerEmojiSource","url","format","getRegisteredFonts","_Object$keys","getFont","getEmojiSource","getHyphenationCallback","load","async","fontFamily","doc","font","data","loading","isUrl","fetchFont","fontkit","create","resolve","reject","open","err","loaded","registerFont","standardFonts","includes","Error","reset","hasOwnProperty","clear","StandardFont","name","PDFFont","str","encoded","positions","encode","map","_","i","g","glyph","getGlyph","parseInt","advanceWidth","codePoint","id","characterToGlyph","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","hasGlyphForCodePoint","fallbackFont","string","runs","res","lastFont","lastIndex","index","run","defaultFont","attributes","length","push","char","slice","start","end","codePointAt","shouldFallbackToFont","SOFT_HYPHEN_HEX","hypher","Hypher","english","cache","word","split","hyphenate","parts","calculateParts","Node","prev","next","toString","LinkedList","head","tail","listSize","node","isEmpty","last","toArray","result","fun","n","isLinked","listLength","newNode","unshift","insertAfter","insertBefore","linebreak","nodes","lines","settings","options","demerits","line","flagged","fitness","tolerance","activeNodes","sum","lineLengths","breaks","tmp","Infinity","breakpoint","position","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","width","stretch","shrink","lineLength","type","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","first","candidates","currentClass","remove","Math","pow","abs","undefined","forEach","size","reverse","glue","value","box","hyphenated","INFINITY","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","min","calculateRatio","applyBestFit","count","breakpoints","HYPHEN","TOLERANCE_STEPS","TOLERANCE_LIMIT","opts","glyphString","syllables","align","hyphenPenalty","reduce","acc","s","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakPoint","prevNode","insertGlyph","lastLine","availableWidths","paragraphStyle","getNodes","bestFit","breakLines","shrinkWhitespaceFactor","before","after","LayoutEngine","BaseLayoutEngine","hyphenationPenalty","scriptItemizer","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","PNG","isValid","e","MARKERS","JPEG","height","readUInt16BE","marker","pos","isBuffer","createCache","limit","keys","key","shift","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","isDangerousLocalPath","filename","safePath","absoluteSafePath","startsWith","fetchLocalFile","allowDangerousPaths","readFile","imagesCache","isValidFormat","lower","toLowerCase","guessFormat","isCompatibleBase64","test","getImage","body","extension","resolveBase64Image","match","exec","resolveImageFromData","_JSON$stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","constructor","resolveImage","_ref","cacheKey","get","image","set","emojis","regex","emojiRegex","reflect","promise","args","v","fetchEmojiImage","getCodePoints","_Array$from","join","buildEmojiUrl","emoji","Font","fetchEmojis","promises","emojiUrl","embedEmojis","fragments","fragment","emojiSize","fontSize","chunk","replace","Attachment","CHARACTER","floor","String","fromCharCode","Document","root","props","children","subpages","parent","indexOf","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","listToExplore","style","childNode","_Promise","all","loadFonts","loadImages","applyProps","newProps","c","getLayoutData","pageCount","pages","page","wrapArea","paddingBottom","wrap","wrapPages","j","renderDynamicNodes","addMetaData","loadEmojis","loadAssets","renderPages","defaultProps","upperFirst","charAt","toUpperCase","matchPercent","computed","layout","Yoga","createDefault","insertChild","getChildCount","beforeChild","splice","removeChild","attr","fixedMethod","percentMethod","isPercent","parseFloat","edge","setPositionPercent","setPosition","setPaddingPercent","setPadding","setMarginPercent","setMargin","setBorder","parentLayout","getAbsoluteLayout","left","top","copyStyle","calculateLayout","markDirty","getPositionType","POSITION_TYPE_ABSOLUTE","getComputedTop","getComputedLeft","getComputedRight","getComputedBottom","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","getComputedBorder","paddingTop","paddingRight","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","setPositionType","POSITION_TYPE_RELATIVE","setDimension","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","parseScalar","scalar","Object","prototype","styleShortHands","expandStyles","propsArray","resolvedStyle","verticalAlign","expandedProps","propName","call","matchBorderShorthand","processBorders","transformStyles","expandedStyles","resolved","styles","flatten","input","Array","isArray","resolveMediaQueries","container","matchMedia","[object Object]","absoluteFillObject","Debug","padding","margin","save","debugContent","debugPadding","debugMargin","debugText","restore","roundedWidth","round","right","roundedHeight","bottom","opacity","fillColor","text","max","rect","fill","KAPPA","sqrt","drawBorders","borderTopWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderTopColor","borderTopStyle","borderLeftColor","borderLeftStyle","borderRightColor","borderRightStyle","borderBottomColor","borderBottomStyle","getComputedStyles","rtr","rtl","rbr","rbl","clipBorderTop","ctx","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","stroke","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","Clipping","ctr","cbr","cbl","ctl","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","origin","rotate","scale","translate","Transformations","re","inheritedProperties","Base","merge","break","fixed","minPresenceAhead","appendChild","appendChildBefore","orientation","StyleSheet","attribute","applyStyle","setter","isFunction","inheritedStyles","pick","backgroundColor","clone","absoluteChilds","filter","absolute","nonAbsoluteChilds","_Object$assign","Borders","Transform","TextInstance","_container","PAGE_SIZES","getPageSize","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","ceil","matchPercentage","Ruler","ruler","horizontalRuler","verticalRuler","horizontalRulerSteps","rulerSteps","percentage","hasVerticalRuler","verticalRulerSteps","hasHorizontalRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","getHorizontalSteps","step","vRange","getVerticalSteps","Page","_size","getRulerWidth","resetMargins","rulerWidth","dimension","percent","elements","Fragment","createInstance","onAppendDynamically","addDynamicChild","cb","removeAllChilds","super","addPage","renderChildren","debug","renderRuler","View","applyTransformations","drawBackgroundColor","PROTOCOL_REGEXP","getURL","capitalize","l","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","transformText","transformation","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","preprocessor","getAttributedString","AttributedString","fromFragments","PDFRenderer","createPDFRenderer","Rect","Text","_attributedString","_layoutEngine","renderCallback","setMeasureFunc","measureText","bind","href","blocks","block","counter","containerHeight","Path","Container","attributedString","layoutEngine","linesCount","widthMode","heightMode","MEASURE_MODE_EXACTLY","layoutText","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","orphans","widows","linesQuantity","sliceHeight","slicedLine","lineIndexAtHeight","heightAtLineIndex","wrapHeight","slicedLineIndex","initialX","y","x","Link","link","Note","note","SAFETY_HEIGHT","Image","measureImage","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","warn","message","xOffset","renderImage","constructors","propsEqual","a","b","oldPropsKeys","newPropsKeys","shouldReplaceLink","ReactFiberReconciler","parentInstance","internalInstanceHandle","rootContainerInstance","oldProps","emptyObject","Date","now","textInstance","oldText","newText","update","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","stream","pipe","BlobStream","on","blob","toBlob","error","renderToStream","toBuffer","renderToFile","filePath","output","fs","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider"],"mappings":"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"}