{"version":3,"file":"react-pdf.es.min.js","sources":["../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/warning.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/utils/url.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/gif/server.js","../src/utils/gif/gif.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/elements/Root.js","../src/elements/Link.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\n\nexport const processFontWeight = value => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else if (isFontWeightStyle(key, value)) {\n      resolved = processFontWeight(value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation } = this.page;\n\n    const ownStyles = StyleSheet.resolve(this.props.style, {\n      orientation,\n      width: size.width,\n      height: size.height,\n    });\n\n    const inheritedStyles = this.parent\n      ? pick(this.parent.style, inheritedProperties)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  update(newProps) {\n    super.update(newProps);\n    this._size = null;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst throwInvalidUrl = src => {\n  throw new Error(\n    `Invalid font url: ${src}. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n  );\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      if (BROWSER) throwInvalidUrl(this.src); // Can't load a non-url font in browser\n\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor, doc) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","const createHyphenator = require('hyphen');\nconst pattern = require('hyphen/patterns/en-us');\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hyphen = createHyphenator(pattern);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      if (word.includes(SOFT_HYPHEN_HEX)) {\n        return word.split(SOFT_HYPHEN_HEX);\n      }\n\n      return hyphen(word).split(SOFT_HYPHEN_HEX);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.copy().slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.copy().slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(\n        start,\n        glyphString.glyphIndexForStringIndex(glyphString.string.length),\n      );\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","import sharp from 'sharp';\nimport PNG from '../png';\n\nconst renderServerGIF = async data => {\n  const pngBuffer = await sharp(data).toBuffer();\n  return new PNG(pngBuffer);\n};\n\nexport default renderServerGIF;\n","/* global File */\n\nimport jpegasus from 'jpegasus';\nimport toArrayBuffer from 'to-arraybuffer';\nimport toBufferCb from 'blob-to-buffer';\nimport JPEG from '../jpeg';\nimport renderServerGIF from './server';\n\nconst toBuffer = blob =>\n  new Promise((resolve, reject) =>\n    toBufferCb(blob, (err, buffer) => (err ? reject(err) : resolve(buffer))),\n  );\n\nconst renderGIF = async data => {\n  if (!GIF.isValid(data)) {\n    throw new TypeError(\n      'Image passed to GIF decoder appears not to be in GIF format',\n    );\n  }\n\n  if (!BROWSER) {\n    return renderServerGIF(data);\n  }\n\n  const jpegBlob = await jpegasus.compress(\n    new File([toArrayBuffer(data)], 'image.gif', {\n      type: 'image/gif',\n    }),\n    {\n      quality: 0.8,\n    },\n  );\n  const jpegBuffer = await toBuffer(jpegBlob);\n  return new JPEG(jpegBuffer);\n};\n\n// Instantiate a “thenable” object — an object that behaves like a Promise\n// https://samdanielson.com/blog/2016/09/15/subclassing-promises-not.html\n// by implementing the Promise prototype’s public methods, and applying them to a real Promise\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#Promise_prototype\nclass GIF {\n  constructor(data) {\n    this.imagePromise = renderGIF(data);\n  }\n\n  then(...args) {\n    return this.imagePromise.then.apply(this.imagePromise, args);\n  }\n\n  catch(...args) {\n    return this.imagePromise.catch.apply(this.imagePromise, args);\n  }\n\n  finally(...args) {\n    return this.imagePromise.finally.apply(this.imagePromise, args);\n  }\n}\n\nGIF.isValid = function(data) {\n  try {\n    return data[0] === 71 && data[1] === 73 && data[2] === 70;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default GIF;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport GIF from './gif';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return (\n    lower === 'jpg' || lower === 'jpeg' || lower === 'png' || lower === 'gif'\n  );\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  } else if (GIF.isValid(buffer)) {\n    format = 'gif';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    case 'gif':\n      return new GIF(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = async ({ uri }) => {\n  const [, format, data] = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/.exec(uri);\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return getImage(Buffer.from(data, 'base64'), format);\n};\n\nconst resolveImageFromData = async src => {\n  if (src.data && src.format) {\n    return getImage(src.data, src.format);\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = async buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return getImage(buffer, format);\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  // based on https://github.com/sindresorhus/file-type/blob/master/index.js#L65\n  const isGif = body[0] === 71 && body[1] === 73 && body[2] === 70;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else if (isGif) {\n    extension = 'gif';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    opacity,\n  } = instance.style;\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          opacity,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\n\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst renderOpts = { outlineLines: false };\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.computed = false;\n    this.container = null;\n    this.attributedString = null;\n    this.layoutEngine = new LayoutEngine({\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n    });\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks\n      .reduce((acc, block) => [...acc, ...block.lines], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.height > height) return i;\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // If height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this.container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.end = this.props.maxLines || linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.container && !this.props.render) {\n      text.container = this.container.copy();\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    // We translate lines based on Yoga container\n    const { top, left } = this.getAbsoluteLayout();\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + this.padding.left;\n      line.rect.y += top + this.padding.top - initialX;\n    });\n\n    // Mock container only with appropiate lines\n    const container = { ...this.container, blocks: [{ lines: this.lines }] };\n\n    // Perform actual text rendering on document\n    new PDFRenderer(this.root.instance, renderOpts).render(container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport const renderToStream = function(element) {\n  return pdf(element).toBuffer();\n};\n\nexport const renderToFile = function(element, filePath, callback) {\n  const output = renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  createInstance,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["upperFirst","value","charAt","toUpperCase","slice","matchPercent","match","exec","isPercent","parseFloat","percent","absValue","Math","abs","absPercent","Node","constructor","parent","children","computed","layout","Yoga","createDefault","appendChild","child","this","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeChild","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","Error","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","markDirty","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","getComputedTop","getComputedLeft","getComputedRight","getComputedBottom","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","setPositionType","POSITION_TYPE_RELATIVE","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseScalar","result","scalar","unit","undefined","parseValue","isBorderStyle","key","processBorders","matchBorderShorthand","isBoxModelStyle","processBoxModel","matchBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","toLowerCase","isObjectPositionStyle","processObjectPosition","matchObjectPosition","isTransformOriginStyle","processTransformOrigin","matchTransformOrigin","transformOffsetKeywords","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","transformStyles","style","expandedStyles","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","expandStyles","resolved","flatten","input","Array","isArray","reduce","acc","s","forEach","hairlineWidth","create","styles","resolve","container","test","matchMedia","resolveMediaQueries","absoluteFillObject","position","Debug","debug","root","instance","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","clipBorderTop","ctx","rtr","rtl","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","fillBorderTop","strokeColor","lineWidth","dash","space","undash","clipBorderRight","rbr","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","rbl","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","drawBorders","min","strokeOpacity","Clipping","ctr","cbr","cbl","ctl","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","applySingleTransformation","element","rotate","PI","getRotation","scale","translate","getMatrix","Transformations","applyTransformations","re","warning","process","env","NODE_ENV","condition","format","args","argIndex","message","replace","console","error","x","printWarning","inheritedProperties","Base","props","merge","defaultProps","page","wrap","break","fixed","minPresenceAhead","percentX","percentY","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","applyStyle","size","orientation","ownStyles","StyleSheet","pick","setter","isFunction","getLayoutData","type","name","c","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","absoluteChilds","filter","absolute","nonAbsoluteChilds","render","assign","Borders","Transform","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","RULER_WIDTH","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","elements","Fragment","createInstance","addDynamicChild","cb","listToExplore","shift","renderDynamicNodes","super","addPage","renderChildren","View","fetchFont","async","src","options","response","fetch","buffer","arrayBuffer","Buffer","FontSource","fontFamily","fontStyle","fontWeight","data","loading","isUrl","headers","body","method","fontkit","Promise","reject","open","err","Font","family","sources","register","descriptor","styleSources","exactFit","find","res","leftOffset","rightOffset","lt","gt","emojiSource","hyphenationCallback","fonts","getFont","standardFonts","includes","font","getRegisteredFonts","getRegisteredFontFamilies","load","doc","clear","reset","registerEmojiSource","url","getEmojiSource","registerHyphenationCallback","callback","getHyphenationCallback","PROTOCOL_REGEXP","getURL","StandardFont","PDFFont","str","encoded","positions","encode","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","lastFont","lastIndex","run","defaultFont","attributes","char","start","end","codePointAt","createHyphenator","require","pattern","hyphen","cache","calculateParts","word","split","hyphenateWord","parts","LinkedList","head","tail","listSize","isLinked","prev","next","first","last","toString","toArray","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","pop","linebreak","nodes","lines","settings","demerits","line","flagged","fitness","tolerance","activeNodes","sum","stretch","shrink","lineLengths","breaks","tmp","Infinity","breakpoint","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","lineLength","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","candidates","currentClass","pow","reverse","glue","box","hyphenated","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","calculateRatio","opts","getNodes","glyphString","syllables","align","hyphenPenalty","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakLines","breakPoint","prevNode","copy","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","count","breakpoints","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","BaseLayoutEngine","hyphenationPenalty","scriptItemizer","decorationEngine","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","renderGIF","GIF","TypeError","pngBuffer","sharp","toBuffer","renderServerGIF","imagePromise","then","apply","catch","finally","IMAGE_CACHE","limit","get","set","createCache","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","fetchLocalFile","safePath","allowDangerousPaths","filename","absoluteSafePath","startsWith","isDangerousLocalPath","fs","readFile","getImage","extension","resolveBufferImage","guessFormat","resolveImageFromUrl","uri","fetchRemoteFile","isPng","isJpg","isGif","getImageFormat","resolveImage","cacheKey","image","isCompatibleBase64","lower","isValidFormat","resolveBase64Image","JSON","stringify","resolveImageFromData","emojis","regex","emojiRegex","makeFetchEmojiImage","promise","v","reflect","_removeNoColor","buildEmojiUrl","emoji","join","getCodePoints","fetchEmojis","promises","emojiUrl","fetchEmojiImage","IGNORABLE_CODEPOINTS","PREPROCESSORS","fragments","fragment","charSubset","String","fromCharCode","buildSubsetForFont","subsetRegex","RegExp","emojiSize","chunk","Attachment","CHARACTER","attachment","yOffset","floor","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","transformation","l","capitalize","transformText","link","characterSpacing","underlineStyle","underline","underlineColor","preprocessor","getAttributedString","AttributedString","fromFragments","renderOpts","outlineLines","PDFRenderer","createPDFRenderer","Rect","Text","attributedString","layoutEngine","setMeasureFunc","measureText","bind","href","blocks","block","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","Path","Container","linesCount","maxLines","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","initialX","y","Note","note","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","resolveObjectFit","applyCoverObjectFit","containDimension","noneDimension","applyScaleDownObjectFit","applyFillObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","source","warn","renderImage","objectFit","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","childNode","all","loadFonts","loadImages","pageCount","pages","wrapArea","wrapPages","j","pageNumber","totalPages","loadEmojis","loadAssets","renderPages","availableMethods","painter","p","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","isDirty","document","PDFDocument","autoFirstPage","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","a","b","oldPropsKeys","newPropsKeys","emptyObject","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","shouldReplaceLink","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","Link","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","toBlob","stream","pipe","BlobStream","on","blob","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version"],"mappings":"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"}