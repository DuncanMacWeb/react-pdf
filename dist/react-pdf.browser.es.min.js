import t from '@babel/runtime/helpers/inheritsLoose';
import e from '@babel/runtime/helpers/objectWithoutPropertiesLoose';
import r from '@babel/runtime/helpers/extends';
import n, { Fragment as i } from 'react';
import o from '@babel/runtime/regenerator';
import a from '@babel/runtime/helpers/asyncToGenerator';
import s from 'blob-stream';
import u from 'react-reconciler';
import h from '@babel/runtime/helpers/createClass';
import c, { PDFFont as l } from '@react-pdf/pdfkit';
import d from 'yoga-layout-prebuilt';
import f from 'lodash/pick';
import p from 'lodash/merge';
import g from 'lodash/topairsin';
import m from 'lodash/isfunction';
import y from 'media-engine';
import v from '@babel/runtime/helpers/assertThisInitialized';
import b from '@textkit/pdf-renderer';
import T from 'is-url';
import w from '@react-pdf/fontkit';
import x from 'cross-fetch';
import {
  LayoutEngine as E,
  Attachment as C,
  AttributedString as k,
  Rect as S,
  Path as R,
  Container as A,
} from '@react-pdf/textkit-core';
import P from '@react-pdf/script-itemizer';
import L from '@textkit/justification-engine';
import M from '@textkit/text-decoration-engine';
import B from 'emoji-regex';
import O from 'jpegasus';
import I from 'blob-to-buffer';
import D from 'to-arraybuffer';
import _ from '@react-pdf/png-js';
import W from 'page-wrapping';
var z =
    'production' !== process.env.NODE_ENV
      ? function(t, e) {
          if (void 0 === e)
            throw new Error(
              '`warning(condition, format, ...args)` requires a warning message argument',
            );
          if (!t) {
            for (
              var r = arguments.length, n = new Array(r > 2 ? r - 2 : 0), i = 2;
              i < r;
              i++
            )
              n[i - 2] = arguments[i];
            (function(t) {
              for (
                var e = arguments.length,
                  r = new Array(e > 1 ? e - 1 : 0),
                  n = 1;
                n < e;
                n++
              )
                r[n - 1] = arguments[n];
              var i = 0,
                o =
                  'Warning: ' +
                  t.replace(/%s/g, function() {
                    return r[i++];
                  });
              'undefined' != typeof console && console.error(o);
              try {
                throw new Error(o);
              } catch (t) {}
            }.apply(void 0, [e].concat(n)));
          }
        }
      : function() {},
  F = (function() {
    function t() {
      (this.isDirty = !1), (this.document = null), (this.instance = null);
    }
    var e = t.prototype;
    return (
      (e.appendChild = function(t) {
        this.document = t;
      }),
      (e.removeChild = function() {
        this.document = null;
      }),
      (e.markDirty = function() {
        this.isDirty = !0;
      }),
      (e.render = (function() {
        var t = a(
          o.mark(function t() {
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      return (
                        (this.instance = new c({ autoFirstPage: !1 })),
                        (t.next = 3),
                        this.document.render()
                      );
                    case 3:
                      this.isDirty = !1;
                    case 4:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(t, [
        {
          key: 'name',
          get: function() {
            return 'Root';
          },
        },
      ]),
      t
    );
  })(),
  N = function(t) {
    return t.charAt(0).toUpperCase() + t.slice(1);
  },
  G = function(t) {
    var e = (function(t) {
      return /((-)?\d+\.?\d*)%/g.exec(t);
    })(t);
    if (e) {
      var r = parseFloat(e[1], 10),
        n = r / 100;
      return {
        value: r,
        percent: n,
        absValue: Math.abs(r),
        absPercent: Math.abs(n),
      };
    }
    return null;
  },
  j = (function() {
    function t() {
      (this.parent = null),
        (this.children = []),
        (this.computed = !1),
        (this.layout = d.Node.createDefault());
    }
    var e = t.prototype;
    return (
      (e.appendChild = function(t) {
        t &&
          ((t.parent = this),
          this.children.push(t),
          this.layout.insertChild(t.layout, this.layout.getChildCount()));
      }),
      (e.appendChildBefore = function(t, e) {
        var r = this.children.indexOf(e);
        -1 !== r &&
          t &&
          ((t.parent = this),
          this.children.splice(r, 0, t),
          this.layout.insertChild(t.layout, r));
      }),
      (e.removeChild = function(t) {
        var e = this.children.indexOf(t);
        -1 !== e &&
          ((t.parent = null),
          this.children.splice(e, 1),
          this.layout.removeChild(t.layout));
      }),
      (e.removeAllChilds = function() {
        for (var t = [].concat(this.children), e = 0; e < t.length; e++)
          t[e].remove();
      }),
      (e.remove = function() {
        this.parent.removeChild(this);
      }),
      (e.setDimension = function(t, e) {
        var r = 'set' + N(t),
          n = r + 'Percent',
          i = G(e);
        i ? this.layout[n](i.value) : this.layout[r](e);
      }),
      (e.setPosition = function(t, e) {
        var r = G(e);
        r
          ? this.layout.setPositionPercent(t, r.value)
          : this.layout.setPosition(t, e);
      }),
      (e.setPadding = function(t, e) {
        var r = G(e);
        r
          ? this.layout.setPaddingPercent(t, r.value)
          : this.layout.setPadding(t, e);
      }),
      (e.setMargin = function(t, e) {
        var r = G(e);
        r
          ? this.layout.setMarginPercent(t, r.value)
          : this.layout.setMargin(t, e);
      }),
      (e.setBorder = function(t, e) {
        if (G(e))
          throw new Error('Node: You cannot set percentage border widths');
        this.layout.setBorder(t, e);
      }),
      (e.getAbsoluteLayout = function() {
        var t = this.parent,
          e =
            t && t.getAbsoluteLayout
              ? t.getAbsoluteLayout()
              : { left: 0, top: 0 };
        return {
          left: this.left + e.left,
          top: this.top + e.top,
          height: this.height,
          width: this.width,
        };
      }),
      (e.copyStyle = function(t) {
        this.layout.copyStyle(t.layout);
      }),
      (e.calculateLayout = function() {
        this.layout.calculateLayout(), (this.computed = !0);
      }),
      (e.isEmpty = function() {
        return 0 === this.children.length;
      }),
      (e.markDirty = function() {
        return this.layout.markDirty();
      }),
      (e.onAppendDynamically = function() {}),
      h(t, [
        {
          key: 'position',
          get: function() {
            return this.layout.getPositionType() === d.POSITION_TYPE_ABSOLUTE
              ? 'absolute'
              : 'relative';
          },
          set: function(t) {
            this.layout.setPositionType(
              'absolute' === t
                ? d.POSITION_TYPE_ABSOLUTE
                : d.POSITION_TYPE_RELATIVE,
            );
          },
        },
        {
          key: 'top',
          get: function() {
            return this.layout.getComputedTop() || 0;
          },
          set: function(t) {
            this.setPosition(d.EDGE_TOP, t);
          },
        },
        {
          key: 'left',
          get: function() {
            return this.layout.getComputedLeft() || 0;
          },
          set: function(t) {
            this.setPosition(d.EDGE_LEFT, t);
          },
        },
        {
          key: 'right',
          get: function() {
            return this.layout.getComputedRight() || 0;
          },
          set: function(t) {
            this.setPosition(d.EDGE_RIGHT, t);
          },
        },
        {
          key: 'bottom',
          get: function() {
            return this.layout.getComputedBottom() || 0;
          },
          set: function(t) {
            this.setPosition(d.EDGE_BOTTOM, t);
          },
        },
        {
          key: 'width',
          get: function() {
            return this.layout.getComputedWidth();
          },
          set: function(t) {
            this.setDimension('width', t);
          },
        },
        {
          key: 'minWidth',
          get: function() {
            return this.layout.getMinWidth().value;
          },
          set: function(t) {
            this.setDimension('minWidth', t);
          },
        },
        {
          key: 'maxWidth',
          get: function() {
            return this.layout.getMaxWidth().value;
          },
          set: function(t) {
            this.setDimension('maxWidth', t);
          },
        },
        {
          key: 'height',
          get: function() {
            return this.layout.getComputedHeight();
          },
          set: function(t) {
            this.setDimension('height', t);
          },
        },
        {
          key: 'minHeight',
          get: function() {
            return this.layout.getMinHeight().value;
          },
          set: function(t) {
            this.setDimension('minHeight', t);
          },
        },
        {
          key: 'maxHeight',
          get: function() {
            return this.layout.getMaxHeight().value;
          },
          set: function(t) {
            this.setDimension('maxHeight', t);
          },
        },
        {
          key: 'paddingTop',
          get: function() {
            return this.layout.getComputedPadding(d.EDGE_TOP) || 0;
          },
          set: function(t) {
            this.setPadding(d.EDGE_TOP, t);
          },
        },
        {
          key: 'paddingRight',
          get: function() {
            return this.layout.getComputedPadding(d.EDGE_RIGHT) || 0;
          },
          set: function(t) {
            this.setPadding(d.EDGE_RIGHT, t);
          },
        },
        {
          key: 'paddingBottom',
          get: function() {
            return this.layout.getComputedPadding(d.EDGE_BOTTOM) || 0;
          },
          set: function(t) {
            this.setPadding(d.EDGE_BOTTOM, t);
          },
        },
        {
          key: 'paddingLeft',
          get: function() {
            return this.layout.getComputedPadding(d.EDGE_LEFT) || 0;
          },
          set: function(t) {
            this.setPadding(d.EDGE_LEFT, t);
          },
        },
        {
          key: 'marginTop',
          get: function() {
            return this.layout.getComputedMargin(d.EDGE_TOP) || 0;
          },
          set: function(t) {
            this.setMargin(d.EDGE_TOP, t);
          },
        },
        {
          key: 'marginRight',
          get: function() {
            return this.layout.getComputedMargin(d.EDGE_RIGHT) || 0;
          },
          set: function(t) {
            this.setMargin(d.EDGE_RIGHT, t);
          },
        },
        {
          key: 'marginBottom',
          get: function() {
            return this.layout.getComputedMargin(d.EDGE_BOTTOM) || 0;
          },
          set: function(t) {
            this.setMargin(d.EDGE_BOTTOM, t);
          },
        },
        {
          key: 'marginLeft',
          get: function() {
            return this.layout.getComputedMargin(d.EDGE_LEFT) || 0;
          },
          set: function(t) {
            this.setMargin(d.EDGE_LEFT, t);
          },
        },
        {
          key: 'borderTopWidth',
          get: function() {
            return this.layout.getComputedBorder(d.EDGE_TOP) || 0;
          },
          set: function(t) {
            this.setBorder(d.EDGE_TOP, t);
          },
        },
        {
          key: 'borderRightWidth',
          get: function() {
            return this.layout.getComputedBorder(d.EDGE_RIGHT) || 0;
          },
          set: function(t) {
            this.setBorder(d.EDGE_RIGHT, t);
          },
        },
        {
          key: 'borderBottomWidth',
          get: function() {
            return this.layout.getComputedBorder(d.EDGE_BOTTOM) || 0;
          },
          set: function(t) {
            this.setBorder(d.EDGE_BOTTOM, t);
          },
        },
        {
          key: 'borderLeftWidth',
          get: function() {
            return this.layout.getComputedBorder(d.EDGE_LEFT) || 0;
          },
          set: function(t) {
            this.setBorder(d.EDGE_LEFT, t);
          },
        },
        {
          key: 'padding',
          get: function() {
            return {
              top: this.paddingTop,
              right: this.paddingRight,
              bottom: this.paddingBottom,
              left: this.paddingLeft,
            };
          },
          set: function(t) {
            (this.paddingTop = t),
              (this.paddingRight = t),
              (this.paddingBottom = t),
              (this.paddingLeft = t);
          },
        },
        {
          key: 'margin',
          get: function() {
            return {
              top: this.marginTop,
              right: this.marginRight,
              bottom: this.marginBottom,
              left: this.marginLeft,
            };
          },
          set: function(t) {
            (this.marginTop = t),
              (this.marginRight = t),
              (this.marginBottom = t),
              (this.marginLeft = t);
          },
        },
      ]),
      t
    );
  })(),
  U = function(t, e) {
    var r = function(t) {
      return 'alignItems' === t || 'alignContent' === t || 'alignSelf' === t;
    };
    switch (e) {
      case 'auto':
        if ('alignSelf' === t) return d.ALIGN_AUTO;
        break;
      case 'flex':
        return d.DISPLAY_FLEX;
      case 'none':
        return d.DISPLAY_NONE;
      case 'row':
        return d.FLEX_DIRECTION_ROW;
      case 'row-reverse':
        return d.FLEX_DIRECTION_ROW_REVERSE;
      case 'column':
        return d.FLEX_DIRECTION_COLUMN;
      case 'column-reverse':
        return d.FLEX_DIRECTION_COLUMN_REVERSE;
      case 'stretch':
        return d.ALIGN_STRETCH;
      case 'baseline':
        return d.ALIGN_BASELINE;
      case 'space-around':
        if ('justifyContent' === t) return d.JUSTIFY_SPACE_AROUND;
        if (r(t)) return d.ALIGN_SPACE_AROUND;
        break;
      case 'space-between':
        if ('justifyContent' === t) return d.JUSTIFY_SPACE_BETWEEN;
        if (r(t)) return d.ALIGN_SPACE_BETWEEN;
        break;
      case 'around':
        return d.JUSTIFY_SPACE_AROUND;
      case 'between':
        return d.JUSTIFY_SPACE_BETWEEN;
      case 'wrap':
        return d.WRAP_WRAP;
      case 'wrap-reverse':
        return d.WRAP_WRAP_REVERSE;
      case 'nowrap':
        return d.WRAP_NO_WRAP;
      case 'flex-start':
        if ('justifyContent' === t) return d.JUSTIFY_FLEX_START;
        if (r(t)) return d.ALIGN_FLEX_START;
        break;
      case 'flex-end':
        if ('justifyContent' === t) return d.JUSTIFY_FLEX_END;
        if (r(t)) return d.ALIGN_FLEX_END;
        break;
      case 'center':
        if ('justifyContent' === t) return d.JUSTIFY_CENTER;
        if (r(t)) return d.ALIGN_CENTER;
        break;
      default:
        return e;
    }
  },
  H = function(t) {
    var e = {},
      r = (function(t) {
        var e = /^(-?\d*\.?\d+)(in|mm|cm|pt)?$/g.exec(t);
        return e
          ? { value: parseFloat(e[1], 10), unit: e[2] || 'pt' }
          : { value: t, unit: void 0 };
      })(t);
    switch (r.unit) {
      case 'in':
        e = 72 * r.value;
        break;
      case 'mm':
        e = r.value * (1 / 25.4) * 72;
        break;
      case 'cm':
        e = r.value * (1 / 2.54) * 72;
        break;
      default:
        e = r.value;
    }
    return e;
  },
  V = function(t, e) {
    return t.match(/^border/) && 'string' == typeof e;
  },
  X = function(t, e) {
    var r = (function(t) {
      return t.match(/(\d+(px|in|mm|cm|pt)?)\s(\S+)\s(\S+)/);
    })(e);
    if (r) {
      if (t.match(/.Color/)) return r[4];
      if (t.match(/.Style/)) return r[3];
      if (t.match(/.Width/)) return r[1];
      throw new Error("StyleSheet: Invalid '" + e + "' for '" + t + "'");
    }
    return e;
  },
  Y = function(t, e) {
    return t.match(/^(margin)|(padding)/) && 'string' == typeof e;
  },
  J = function(t, e) {
    var r = (function(t) {
      return t.match(/\d+(px|in|mm|cm|pt|%)?/g);
    })(e);
    if (r) {
      if (t.match(/.Top/)) return r[0];
      if (t.match(/.Right/)) return r[1] || r[0];
      if (t.match(/.Bottom/)) return r[2] || r[0];
      if (t.match(/.Left/)) return r[3] || r[1] || r[0];
      throw new Error("StyleSheet: Invalid '" + e + "' for '" + t + "'");
    }
    return e;
  },
  q = {
    thin: 100,
    hairline: 100,
    ultralight: 200,
    extralight: 200,
    light: 300,
    normal: 400,
    medium: 500,
    semibold: 600,
    demibold: 600,
    bold: 700,
    ultrabold: 800,
    extrabold: 800,
    heavy: 900,
    black: 900,
  },
  K = function(t) {
    return t.match(/^fontWeight/);
  },
  $ = function(t) {
    return t ? ('number' == typeof t ? t : q[t.toLowerCase()]) : q.normal;
  },
  Z = function(t, e) {
    return t.match(/^objectPosition/) && 'string' == typeof e;
  },
  Q = function(t, e) {
    var r = (function(t) {
      return t.match(/\d+(px|in|mm|cm|pt|%)?/g);
    })(e);
    if (r) {
      if (t.match(/.X/)) return r[0];
      if (t.match(/.Y/)) return r[1];
      throw new Error("StyleSheet: Invalid '" + e + "' for '" + t + "'");
    }
    return e;
  },
  tt = function(t, e) {
    return t.match(/^transformOrigin/) && 'string' == typeof e;
  },
  et = function(t, e) {
    var r = (function(t) {
      return t.match(
        /(-?\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g,
      );
    })(e);
    if (r) {
      var n;
      if (t.match(/.X/)) n = r[0];
      else {
        if (!t.match(/.Y/))
          throw new Error("StyleSheet: Invalid '" + e + "' for '" + t + "'");
        n = r[1] || r[0];
      }
      return (function(t) {
        switch (t) {
          case 'top':
          case 'left':
            return '0%';
          case 'right':
          case 'bottom':
            return '100%';
          case 'center':
            return '50%';
          default:
            return t;
        }
      })(n);
    }
    return e;
  },
  rt = Object.prototype.hasOwnProperty,
  nt = {
    margin: {
      marginTop: !0,
      marginRight: !0,
      marginBottom: !0,
      marginLeft: !0,
    },
    marginHorizontal: { marginLeft: !0, marginRight: !0 },
    marginVertical: { marginTop: !0, marginBottom: !0 },
    padding: {
      paddingTop: !0,
      paddingRight: !0,
      paddingBottom: !0,
      paddingLeft: !0,
    },
    paddingHorizontal: { paddingLeft: !0, paddingRight: !0 },
    paddingVertical: { paddingTop: !0, paddingBottom: !0 },
    border: {
      borderTopColor: !0,
      borderTopStyle: !0,
      borderTopWidth: !0,
      borderRightColor: !0,
      borderRightStyle: !0,
      borderRightWidth: !0,
      borderBottomColor: !0,
      borderBottomStyle: !0,
      borderBottomWidth: !0,
      borderLeftColor: !0,
      borderLeftStyle: !0,
      borderLeftWidth: !0,
    },
    borderTop: { borderTopColor: !0, borderTopStyle: !0, borderTopWidth: !0 },
    borderRight: {
      borderRightColor: !0,
      borderRightStyle: !0,
      borderRightWidth: !0,
    },
    borderBottom: {
      borderBottomColor: !0,
      borderBottomStyle: !0,
      borderBottomWidth: !0,
    },
    borderLeft: {
      borderLeftColor: !0,
      borderLeftStyle: !0,
      borderLeftWidth: !0,
    },
    borderColor: {
      borderTopColor: !0,
      borderRightColor: !0,
      borderBottomColor: !0,
      borderLeftColor: !0,
    },
    borderRadius: {
      borderTopLeftRadius: !0,
      borderTopRightRadius: !0,
      borderBottomRightRadius: !0,
      borderBottomLeftRadius: !0,
    },
    borderStyle: {
      borderTopStyle: !0,
      borderRightStyle: !0,
      borderBottomStyle: !0,
      borderLeftStyle: !0,
    },
    borderWidth: {
      borderTopWidth: !0,
      borderRightWidth: !0,
      borderBottomWidth: !0,
      borderLeftWidth: !0,
    },
    objectPosition: { objectPositionX: !0, objectPositionY: !0 },
    transformOrigin: { transformOriginX: !0, transformOriginY: !0 },
  },
  it = function(t) {
    for (
      var e = (function(t) {
          if (!t) return t;
          for (var e = Object.keys(t), r = {}, n = 0; n < e.length; n++) {
            var i = e[n],
              o = t[i];
            switch (i) {
              case 'display':
              case 'flex':
              case 'flexDirection':
              case 'flexWrap':
              case 'flexFlow':
              case 'flexGrow':
              case 'flexShrink':
              case 'flexBasis':
              case 'justifyContent':
              case 'alignSelf':
              case 'alignItems':
              case 'alignContent':
              case 'order':
                r[i] = U(i, o);
                break;
              case 'textAlignVertical':
                r.verticalAlign = 'center' === o ? 'middle' : o;
                break;
              case 'margin':
              case 'marginHorizontal':
              case 'marginVertical':
              case 'padding':
              case 'paddingHorizontal':
              case 'paddingVertical':
              case 'border':
              case 'borderTop':
              case 'borderRight':
              case 'borderBottom':
              case 'borderLeft':
              case 'borderColor':
              case 'borderRadius':
              case 'borderStyle':
              case 'borderWidth':
              case 'objectPosition':
              case 'transformOrigin':
                var a = nt[i];
                for (var s in a) rt.call(a, s) && (r[s] = o);
                break;
              default:
                r[i] = o;
            }
          }
          return r;
        })(t),
        r = Object.keys(e),
        n = {},
        i = 0;
      i < r.length;
      i++
    ) {
      var o = r[i],
        a = e[o],
        s = void 0;
      (s = V(o, a)
        ? X(o, a)
        : Y(o, a)
        ? J(o, a)
        : Z(o, a)
        ? Q(o, a)
        : tt(o, a)
        ? et(o, a)
        : K(o)
        ? $(a)
        : a),
        (n[o] = H(s));
    }
    return n;
  },
  ot = function t(e) {
    return (
      Array.isArray(e) || (e = [e]),
      e.reduce(function(e, r) {
        if (r) {
          var n = Array.isArray(r) ? t(r) : r;
          Object.keys(n).forEach(function(t) {
            null !== n[t] && void 0 !== n[t] && (e[t] = n[t]);
          });
        }
        return e;
      }, {})
    );
  },
  at = {
    hairlineWidth: 1,
    create: function(t) {
      return t;
    },
    resolve: function(t, e) {
      return t
        ? ((t = (function(t, e) {
            return Object.keys(t).reduce(function(n, i) {
              var o, a;
              return /@media/.test(i)
                ? r({}, n, y((((a = {})[i] = t[i]), a), e))
                : r({}, n, (((o = {})[i] = t[i]), o));
            }, {});
          })((t = ot(t)), e)),
          (t = it(t)))
        : null;
    },
    flatten: ot,
    absoluteFillObject: {
      position: 'absolute',
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
    },
  },
  st = {
    debug: function() {
      var t = this.getAbsoluteLayout(),
        e = this.padding,
        r = this.margin;
      this.root.instance.save(),
        this.debugContent(t, r, e),
        this.debugPadding(t, r, e),
        this.debugMargin(t, r),
        this.debugText(t, r),
        this.debugOrigin(),
        this.root.instance.restore();
    },
    debugOrigin: function() {
      if (this.style.transform) {
        var t = this.origin;
        this.root.instance
          .circle(t[0], t[1], 3)
          .fill('red')
          .circle(t[0], t[1], 5)
          .stroke('red');
      }
    },
    debugText: function(t, e) {
      var r = Math.round(this.width + e.left + e.right),
        n = Math.round(this.height + e.top + e.bottom);
      this.root.instance
        .fontSize(4)
        .opacity(1)
        .fillColor('black')
        .text(r + ' x ' + n, t.left - e.left, Math.max(t.top - e.top - 4, 1));
    },
    debugContent: function(t, e, r) {
      this.root.instance
        .fillColor('#a1c6e7')
        .opacity(0.5)
        .rect(
          t.left + r.left,
          t.top + r.top,
          t.width - r.left - r.right,
          t.height - r.top - r.bottom,
        )
        .fill();
    },
    debugPadding: function(t, e, r) {
      this.root.instance.fillColor('#c4deb9').opacity(0.5),
        this.root.instance
          .rect(t.left + r.left, t.top, t.width - r.right - r.left, r.top)
          .fill(),
        this.root.instance.rect(t.left, t.top, r.left, t.height).fill(),
        this.root.instance
          .rect(t.left + t.width - r.right, t.top, r.right, t.height)
          .fill(),
        this.root.instance
          .rect(
            t.left + r.left,
            t.top + t.height - r.bottom,
            t.width - r.right - r.left,
            r.bottom,
          )
          .fill();
    },
    debugMargin: function(t, e) {
      this.root.instance.fillColor('#f8cca1').opacity(0.5),
        this.root.instance.rect(t.left, t.top - e.top, t.width, e.top).fill(),
        this.root.instance
          .rect(
            t.left - e.left,
            t.top - e.top,
            e.left,
            t.height + e.top + e.bottom,
          )
          .fill(),
        this.root.instance
          .rect(
            t.left + t.width,
            t.top - e.top,
            e.right,
            t.height + e.top + e.bottom,
          )
          .fill(),
        this.root.instance
          .rect(t.left, t.top + t.height, t.width, e.bottom)
          .fill();
    },
  },
  ut = ((Math.sqrt(2) - 1) / 3) * 4;
var ht = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = e.height,
      h = r.borderTopWidth,
      c = r.borderRightWidth,
      l = r.borderLeftWidth;
    t.moveTo(a + i, o), t.lineTo(a + s - n, o);
    var d = n * (1 - ut);
    t.bezierCurveTo(a + s - d, o, a + s, o + d, a + s, o + n);
    var f = o + Math.max(h, n);
    t.lineTo(a + s, f), t.lineTo(a + s - c, f);
    var p = Math.max(n - c, 0),
      g = Math.max(n - h, 0),
      m = p * (1 - ut),
      y = g * (1 - ut);
    t.bezierCurveTo(
      a + s - c,
      o + h + y,
      a + s - c - m,
      o + h,
      a + s - c - p,
      o + h,
    ),
      t.lineTo(a + Math.max(i, l), o + h);
    var v = Math.max(i - l, 0),
      b = Math.max(i - h, 0),
      T = v * (1 - ut),
      w = b * (1 - ut),
      x = o + Math.max(h, i);
    t.bezierCurveTo(a + l + T, o + h, a + l, o + h + w, a + l, x),
      t.lineTo(a, x),
      t.lineTo(a, o + i);
    var E = i * (1 - ut);
    if (
      (t.bezierCurveTo(a, o + E, a + E, o, a + i, o),
      t.closePath(),
      t.clip(),
      c)
    ) {
      var C = -h / c;
      t.moveTo(a + s / 2, C * (-s / 2) + o),
        t.lineTo(a + s, o),
        t.lineTo(a, o),
        t.lineTo(a, o + u),
        t.closePath(),
        t.clip();
    }
    if (l) {
      var k = -h / l;
      t.moveTo(a + s / 2, k * (-s / 2) + o),
        t.lineTo(a, o),
        t.lineTo(a + s, o),
        t.lineTo(a + s, o + u),
        t.closePath(),
        t.clip();
    }
  },
  ct = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = r.borderTopColor,
      h = r.borderTopWidth,
      c = r.borderTopStyle,
      l = r.borderRightWidth,
      d = r.borderLeftWidth,
      f = i * (1 - ut),
      p = n * (1 - ut);
    t.moveTo(a, o + Math.max(i, h)),
      t.bezierCurveTo(a, o + f, a + f, o, a + i, o),
      t.lineTo(a + s - n, o),
      t.bezierCurveTo(a + s - p, o, a + s, o + p, a + s, o + n),
      t.strokeColor(u),
      t.lineWidth(2 * Math.max(l, h, d)),
      'dashed' === c
        ? t.dash(2 * h, { space: 1.2 * h })
        : 'dotted' === c && t.dash(h, { space: 1.2 * h }),
      t.stroke(),
      t.undash();
  },
  lt = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = e.height,
      h = r.borderTopWidth,
      c = r.borderRightWidth,
      l = r.borderBottomWidth;
    t.moveTo(a + s, o + n), t.lineTo(a + s, o + u - i);
    var d = i * (1 - ut);
    t.bezierCurveTo(a + s, o + u - d, a + s - d, o + u, a + s - i, o + u);
    var f = a + s - Math.max(c, i);
    t.lineTo(f, o + u), t.lineTo(f, o + u - l);
    var p = Math.max(i - c, 0),
      g = Math.max(i - l, 0),
      m = p * (1 - ut),
      y = g * (1 - ut);
    t.bezierCurveTo(
      a + s - c - m,
      o + u - l,
      a + s - c,
      o + u - l - y,
      a + s - c,
      o + u - Math.max(i, l),
    ),
      t.lineTo(a + s - c, o + Math.max(n, h));
    var v = Math.max(n - c, 0),
      b = Math.max(n - h, 0),
      T = v * (1 - ut),
      w = b * (1 - ut),
      x = a + s - Math.max(n, c);
    t.bezierCurveTo(a + s - c, o + h + w, a + s - c - T, o + h, x, o + h),
      t.lineTo(x, o),
      t.lineTo(a + s - n, o);
    var E = n * (1 - ut);
    if (
      (t.bezierCurveTo(a + s - E, o, a + s, o + E, a + s, o + n),
      t.closePath(),
      t.clip(),
      h)
    ) {
      var C = -h / c;
      t.moveTo(a + s / 2, C * (-s / 2) + o),
        t.lineTo(a + s, o),
        t.lineTo(a + s, o + u),
        t.lineTo(a, o + u),
        t.closePath(),
        t.clip();
    }
    if (l) {
      var k = l / c;
      t.moveTo(a + s / 2, k * (-s / 2) + o + u),
        t.lineTo(a + s, o + u),
        t.lineTo(a + s, o),
        t.lineTo(a, o),
        t.closePath(),
        t.clip();
    }
  },
  dt = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = e.height,
      h = r.borderRightColor,
      c = r.borderRightStyle,
      l = r.borderRightWidth,
      d = r.borderTopWidth,
      f = r.borderBottomWidth,
      p = i * (1 - ut),
      g = n * (1 - ut);
    t.moveTo(a + s - n, o),
      t.bezierCurveTo(a + s - g, o, a + s, o + g, a + s, o + n),
      t.lineTo(a + s, o + u - i),
      t.bezierCurveTo(a + s, o + u - p, a + s - p, o + u, a + s - i, o + u),
      t.strokeColor(h),
      t.lineWidth(2 * Math.max(l, d, f)),
      'dashed' === c
        ? t.dash(2 * l, { space: 1.2 * l })
        : 'dotted' === c && t.dash(l, { space: 1.2 * l }),
      t.stroke(),
      t.undash();
  },
  ft = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = e.height,
      h = r.borderBottomWidth,
      c = r.borderRightWidth,
      l = r.borderLeftWidth;
    t.moveTo(a + s - i, o + u), t.lineTo(a + n, o + u);
    var d = n * (1 - ut);
    t.bezierCurveTo(a + d, o + u, a, o + u - d, a, o + u - n);
    var f = o + u - Math.max(h, n);
    t.lineTo(a, f), t.lineTo(a + l, f);
    var p = Math.max(n - l, 0),
      g = Math.max(n - h, 0),
      m = p * (1 - ut),
      y = g * (1 - ut);
    t.bezierCurveTo(
      a + l,
      o + u - h - y,
      a + l + m,
      o + u - h,
      a + l + p,
      o + u - h,
    ),
      t.lineTo(a + s - Math.max(i, c), o + u - h);
    var v = Math.max(i - c, 0),
      b = Math.max(i - h, 0),
      T = v * (1 - ut),
      w = b * (1 - ut),
      x = o + u - Math.max(h, i);
    t.bezierCurveTo(
      a + s - c - T,
      o + u - h,
      a + s - c,
      o + u - h - w,
      a + s - c,
      x,
    ),
      t.lineTo(a + s, x),
      t.lineTo(a + s, o + u - i);
    var E = i * (1 - ut);
    if (
      (t.bezierCurveTo(a + s, o + u - E, a + s - E, o + u, a + s - i, o + u),
      t.closePath(),
      t.clip(),
      c)
    ) {
      var C = h / c;
      t.moveTo(a + s / 2, C * (-s / 2) + o + u),
        t.lineTo(a + s, o + u),
        t.lineTo(a, o + u),
        t.lineTo(a, o),
        t.closePath(),
        t.clip();
    }
    if (l) {
      var k = -h / l;
      t.moveTo(a + s / 2, k * (s / 2) + o + u),
        t.lineTo(a, o + u),
        t.lineTo(a + s, o + u),
        t.lineTo(a + s, o),
        t.closePath(),
        t.clip();
    }
  },
  pt = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = e.height,
      h = r.borderBottomColor,
      c = r.borderBottomStyle,
      l = r.borderBottomWidth,
      d = r.borderRightWidth,
      f = r.borderLeftWidth,
      p = n * (1 - ut),
      g = i * (1 - ut);
    t.moveTo(a + s, o + u - i),
      t.bezierCurveTo(a + s, o + u - g, a + s - g, o + u, a + s - i, o + u),
      t.lineTo(a + n, o + u),
      t.bezierCurveTo(a + p, o + u, a, o + u - p, a, o + u - n),
      t.strokeColor(h),
      t.lineWidth(2 * Math.max(l, d, f)),
      'dashed' === c
        ? t.dash(2 * l, { space: 1.2 * l })
        : 'dotted' === c && t.dash(l, { space: 1.2 * l }),
      t.stroke(),
      t.undash();
  },
  gt = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.width,
      u = e.height,
      h = r.borderTopWidth,
      c = r.borderLeftWidth,
      l = r.borderBottomWidth;
    t.moveTo(a, o + u - n), t.lineTo(a, o + i);
    var d = i * (1 - ut);
    t.bezierCurveTo(a, o + d, a + d, o, a + i, o);
    var f = a + Math.max(c, i);
    t.lineTo(f, o), t.lineTo(f, o + h);
    var p = Math.max(i - c, 0),
      g = Math.max(i - h, 0),
      m = p * (1 - ut),
      y = g * (1 - ut);
    t.bezierCurveTo(
      a + c + m,
      o + h,
      a + c,
      o + h + y,
      a + c,
      o + Math.max(i, h),
    ),
      t.lineTo(a + c, o + u - Math.max(n, l));
    var v = Math.max(n - c, 0),
      b = Math.max(n - l, 0),
      T = v * (1 - ut),
      w = b * (1 - ut),
      x = a + Math.max(n, c);
    t.bezierCurveTo(a + c, o + u - l - w, a + c + T, o + u - l, x, o + u - l),
      t.lineTo(x, o + u),
      t.lineTo(a + n, o + u);
    var E = n * (1 - ut);
    if (
      (t.bezierCurveTo(a + E, o + u, a, o + u - E, a, o + u - n),
      t.closePath(),
      t.clip(),
      l)
    ) {
      var C = -l / c;
      t.moveTo(a + s / 2, C * (s / 2) + o + u),
        t.lineTo(a, o + u),
        t.lineTo(a, o),
        t.lineTo(a + s, o),
        t.closePath(),
        t.clip();
    }
    if (l) {
      var k = -h / c;
      t.moveTo(a + s / 2, k * (-s / 2) + o),
        t.lineTo(a, o),
        t.lineTo(a, o + u),
        t.lineTo(a + s, o + u),
        t.closePath(),
        t.clip();
    }
  },
  mt = function(t, e, r, n, i) {
    var o = e.top,
      a = e.left,
      s = e.height,
      u = r.borderLeftColor,
      h = r.borderLeftStyle,
      c = r.borderLeftWidth,
      l = r.borderTopWidth,
      d = r.borderBottomWidth,
      f = n * (1 - ut),
      p = i * (1 - ut);
    t.moveTo(a + n, o + s),
      t.bezierCurveTo(a + f, o + s, a, o + s - f, a, o + s - n),
      t.lineTo(a, o + i),
      t.bezierCurveTo(a, o + p, a + p, o, a + i, o),
      t.strokeColor(u),
      t.lineWidth(2 * Math.max(c, l, d)),
      'dashed' === h
        ? t.dash(2 * c, { space: 1.2 * c })
        : 'dotted' === h && t.dash(c, { space: 1.2 * c }),
      t.stroke(),
      t.undash();
  },
  yt = {
    drawBorders: function() {
      var t = this.root.instance,
        e = this.getAbsoluteLayout(),
        r = this.borderTopWidth,
        n = this.borderLeftWidth,
        i = this.borderRightWidth,
        o = this.borderBottomWidth,
        a = this.style,
        s = a.opacity,
        u = a.borderTopLeftRadius,
        h = void 0 === u ? 0 : u,
        c = a.borderTopRightRadius,
        l = void 0 === c ? 0 : c,
        d = a.borderBottomLeftRadius,
        f = void 0 === d ? 0 : d,
        p = a.borderBottomRightRadius,
        g = void 0 === p ? 0 : p,
        m = a.borderTopColor,
        y = void 0 === m ? 'black' : m,
        v = a.borderTopStyle,
        b = void 0 === v ? 'solid' : v,
        T = a.borderLeftColor,
        w = void 0 === T ? 'black' : T,
        x = a.borderLeftStyle,
        E = void 0 === x ? 'solid' : x,
        C = a.borderRightColor,
        k = void 0 === C ? 'black' : C,
        S = a.borderRightStyle,
        R = void 0 === S ? 'solid' : S,
        A = a.borderBottomColor,
        P = void 0 === A ? 'black' : A,
        L = a.borderBottomStyle,
        M = {
          borderTopColor: y,
          borderTopWidth: r,
          borderTopStyle: b,
          borderLeftColor: w,
          borderLeftWidth: n,
          borderLeftStyle: E,
          borderRightColor: k,
          borderRightWidth: i,
          borderRightStyle: R,
          borderBottomColor: P,
          borderBottomWidth: o,
          borderBottomStyle: void 0 === L ? 'solid' : L,
          borderTopLeftRadius: h,
          borderTopRightRadius: l,
          borderBottomLeftRadius: f,
          borderBottomRightRadius: g,
        },
        B = e.width,
        O = e.height,
        I = Math.min(l, 0.5 * B, 0.5 * O),
        D = Math.min(h, 0.5 * B, 0.5 * O),
        _ = Math.min(g, 0.5 * B, 0.5 * O),
        W = Math.min(f, 0.5 * B, 0.5 * O);
      t.save(),
        t.strokeOpacity(s),
        r && (t.save(), ht(t, e, M, I, D), ct(t, e, M, I, D), t.restore()),
        i && (t.save(), lt(t, e, M, I, _), dt(t, e, M, I, _), t.restore()),
        o && (t.save(), ft(t, e, M, W, _), pt(t, e, M, W, _), t.restore()),
        n && (t.save(), gt(t, e, M, W, D), mt(t, e, M, W, D), t.restore()),
        t.restore();
    },
  },
  vt = ((Math.sqrt(2) - 1) / 3) * 4,
  bt = {
    clip: function() {
      var t = this.getAbsoluteLayout(),
        e = t.top,
        r = t.left,
        n = t.width,
        i = t.height,
        o = this.style,
        a = o.borderTopLeftRadius,
        s = void 0 === a ? 0 : a,
        u = o.borderTopRightRadius,
        h = void 0 === u ? 0 : u,
        c = o.borderBottomRightRadius,
        l = void 0 === c ? 0 : c,
        d = o.borderBottomLeftRadius,
        f = void 0 === d ? 0 : d,
        p = Math.min(h, 0.5 * n, 0.5 * i),
        g = p * (1 - vt);
      this.root.instance.moveTo(r + p, e),
        this.root.instance.lineTo(r + n - p, e),
        this.root.instance.bezierCurveTo(
          r + n - g,
          e,
          r + n,
          e + g,
          r + n,
          e + p,
        );
      var m = Math.min(l, 0.5 * n, 0.5 * i),
        y = m * (1 - vt);
      this.root.instance.lineTo(r + n, e + i - m),
        this.root.instance.bezierCurveTo(
          r + n,
          e + i - y,
          r + n - y,
          e + i,
          r + n - m,
          e + i,
        );
      var v = Math.min(f, 0.5 * n, 0.5 * i),
        b = v * (1 - vt);
      this.root.instance.lineTo(r + v, e + i),
        this.root.instance.bezierCurveTo(
          r + b,
          e + i,
          r,
          e + i - b,
          r,
          e + i - v,
        );
      var T = Math.min(s, 0.5 * n, 0.5 * i),
        w = T * (1 - vt);
      this.root.instance.lineTo(r, e + T),
        this.root.instance.bezierCurveTo(r, e + w, r + w, e, r + T, e),
        this.root.instance.closePath(),
        this.root.instance.clip();
    },
  },
  Tt = function(t) {
    var e = /translateX\((-?\d+\.?d*)\)/g.exec(t),
      r = /translate\((-?\d+\.?d*).*,\s*(-?\d+\.?d*).*\)/g.exec(t);
    return e && e[1] ? e[1] : r && r[1] ? r[1] : 0;
  },
  wt = function(t) {
    var e = /translateY\((-?\d+\.?\d*)\)/g.exec(t),
      r = /translate\((-?\d+\.?\d*).*,\s*(-?\d+\.?\d*).*\)/g.exec(t);
    return e && e[1] ? e[1] : r && r[2] ? r[2] : 0;
  },
  xt = function(t) {
    var e = /scaleX\((-?\d+\.?\d*)\)/g.exec(t),
      r = /scale\((-?\d+\.?\d*).*,\s*(-?\d+\.?\d*).*\)/g.exec(t);
    return e && e[1] ? e[1] : r && r[1] ? r[1] : 1;
  },
  Et = function(t) {
    var e = /scaleY\((-?\d+\.?\d*)\)/g.exec(t),
      r = /scale\((-?\d+\.?\d*).*,\s*(-?\d+\.?\d*).*\)/g.exec(t);
    return e && e[1] ? e[1] : r && r[2] ? r[2] : 1;
  },
  Ct = function(t, e, r) {
    if (/rotate/g.test(e))
      t.root.instance.rotate(
        (function(t) {
          var e = /rotate\((-?\d+.?\d+)(.+)\)/g.exec(t);
          if (e && e[1] && e[2]) {
            var r = e[1];
            return 'rad' === e[2] ? (180 * r) / Math.PI : r;
          }
          return 0;
        })(e),
        { origin: r },
      );
    else if (/scaleX/g.test(e)) t.root.instance.scale(xt(e), 1, { origin: r });
    else if (/scaleY/g.test(e)) t.root.instance.scale(1, Et(e), { origin: r });
    else if (/scale/g.test(e))
      t.root.instance.scale(xt(e), Et(e), { origin: r });
    else if (/translateX/g.test(e))
      t.root.instance.translate(Tt(e), 1, { origin: r });
    else if (/translateY/g.test(e))
      t.root.instance.translate(1, wt(e), { origin: r });
    else if (/translate/g.test(e))
      t.root.instance.translate(Tt(e), wt(e), { origin: r });
    else if (/matrix/g.test(e)) {
      var n;
      (n = t.root.instance).transform.apply(
        n,
        (function(t) {
          var e = /matrix\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\)/g.exec(
            t,
          );
          return e ? e.slice(1, 7) : null;
        })(e),
      );
    }
  },
  kt = {
    applyTransformations: function() {
      for (
        var t,
          e = /[a-zA-Z]+\([^)]+\)/g,
          r = this.origin,
          n = (this.style && this.style.transform) || '';
        null != (t = e.exec(n));

      )
        Ct(this, t[0], r);
    },
  },
  St = [
    'color',
    'fontFamily',
    'fontSize',
    'fontStyle',
    'fontWeight',
    'letterSpacing',
    'opacity',
    'textDecoration',
    'lineHeight',
    'textAlign',
    'visibility',
    'wordSpacing',
  ],
  Rt = (function(e) {
    function n(t, r) {
      var i;
      return (
        ((i = e.call(this) || this).root = t),
        (i.style = {}),
        (i.props = p({}, i.constructor.defaultProps, n.defaultProps, r)),
        z(!i.props.styles, '"styles" prop passed instead of "style" prop'),
        i
      );
    }
    t(n, e);
    var i = n.prototype;
    return (
      (i.appendChild = function(t) {
        e.prototype.appendChild.call(this, t), this.root.markDirty();
      }),
      (i.appendChildBefore = function(t, r) {
        e.prototype.appendChildBefore.call(this, t, r), this.root.markDirty();
      }),
      (i.removeChild = function(t) {
        e.prototype.removeChild.call(this, t), this.root.markDirty();
      }),
      (i.update = function(t) {
        (this.props = p({}, this.constructor.defaultProps, n.defaultProps, t)),
          this.root.markDirty();
      }),
      (i.applyProps = function() {
        var t = this;
        (this.style = this.resolveStyles()),
          g(this.style).map(function(e) {
            var r = e[0],
              n = e[1];
            t.applyStyle(r, n);
          }),
          this.children.forEach(function(t) {
            t.applyProps && t.applyProps();
          });
      }),
      (i.resolveStyles = function() {
        var t = this.page,
          e = t.size,
          n = t.orientation,
          i = at.resolve(this.props.style, {
            orientation: n,
            width: e.width,
            height: e.height,
          }),
          o = this.parent ? f(this.parent.style, St) : {};
        return r({}, o, i);
      }),
      (i.applyStyle = function(t, e) {
        if (void 0 !== e) {
          var r = 'set' + N(t);
          switch (t) {
            case 'marginTop':
            case 'marginRight':
            case 'marginBottom':
            case 'marginLeft':
            case 'paddingTop':
            case 'paddingRight':
            case 'paddingBottom':
            case 'paddingLeft':
            case 'borderTopWidth':
            case 'borderRightWidth':
            case 'borderBottomWidth':
            case 'borderLeftWidth':
            case 'position':
            case 'top':
            case 'right':
            case 'bottom':
            case 'left':
            case 'width':
            case 'height':
            case 'minHeight':
            case 'maxHeight':
            case 'minWidth':
            case 'maxWidth':
              this[t] = e;
              break;
            default:
              m(this.layout[r]) && this.layout[r](e);
          }
        }
      }),
      (i.getLayoutData = function() {
        var t = this.getAbsoluteLayout();
        return {
          type: this.name,
          top: t.top,
          left: t.left,
          width: t.width,
          style: this.style,
          height: t.height,
          children: this.children.map(function(t) {
            return t.getLayoutData();
          }),
        };
      }),
      (i.drawBackgroundColor = function() {
        var t = this.style,
          e = t.backgroundColor,
          r = t.opacity,
          n = void 0 === r ? 1 : r,
          i = this.getAbsoluteLayout(),
          o = i.left,
          a = i.top,
          s = i.width,
          u = i.height;
        e &&
          (this.root.instance.save(),
          this.clip(),
          this.root.instance
            .fillOpacity(n)
            .fillColor(e)
            .rect(o, a, s, u)
            .fill()
            .restore());
      }),
      (i.clone = function() {
        var t = new this.constructor(this.root, this.props);
        return t.copyStyle(this), (t.style = this.style), t;
      }),
      (i.onNodeSplit = function(t, e) {
        this.calculateLayout(),
          (e.marginTop = 0),
          (e.paddingTop = 0),
          e.style.height && (e.height = this.height - t),
          (this.height = t),
          (this.marginBottom = 0),
          (this.paddingBottom = 0);
      }),
      (i.renderChildren = (function() {
        var t = a(
          o.mark(function t() {
            var e, r, n, i;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      (e = this.children.filter(function(t) {
                        return t.absolute;
                      })),
                        (r = this.children.filter(function(t) {
                          return !t.absolute;
                        })),
                        (n = 0);
                    case 3:
                      if (!(n < r.length)) {
                        t.next = 9;
                        break;
                      }
                      return (t.next = 6), r[n].render();
                    case 6:
                      n++, (t.next = 3);
                      break;
                    case 9:
                      i = 0;
                    case 10:
                      if (!(i < e.length)) {
                        t.next = 16;
                        break;
                      }
                      return (t.next = 13), e[i].render();
                    case 13:
                      i++, (t.next = 10);
                      break;
                    case 16:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(n, [
        {
          key: 'page',
          get: function() {
            return this.parent.page;
          },
        },
        {
          key: 'wrap',
          get: function() {
            return this.props.wrap;
          },
        },
        {
          key: 'break',
          get: function() {
            return this.props.break;
          },
          set: function(t) {
            this.props.break = t;
          },
        },
        {
          key: 'fixed',
          get: function() {
            return this.props.fixed;
          },
        },
        {
          key: 'minPresenceAhead',
          get: function() {
            return this.props.minPresenceAhead;
          },
        },
        {
          key: 'absolute',
          get: function() {
            return 'absolute' === this.props.style.position;
          },
        },
        {
          key: 'origin',
          get: function() {
            var t = this.style,
              e = t.transformOriginX,
              r = t.transformOriginY,
              n = this.getAbsoluteLayout(),
              i = n.left,
              o = n.top,
              a = n.width,
              s = n.height,
              u = G(e),
              h = G(r);
            return [i + (u ? a * u.percent : e), o + (h ? s * h.percent : r)];
          },
        },
      ]),
      n
    );
  })(j);
(Rt.defaultProps = {
  style: {
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0,
    borderBottomLeftRadius: 0,
    transformOriginX: '50%',
    transformOriginY: '50%',
  },
  minPresenceAhead: 0,
}),
  Object.assign(Rt.prototype, st),
  Object.assign(Rt.prototype, yt),
  Object.assign(Rt.prototype, bt),
  Object.assign(Rt.prototype, kt);
var At = function(t, e) {
    return Array.from({ length: Math.ceil(t / e) }, function(t, r) {
      return r * e;
    });
  },
  Pt = function(t) {
    var e = G(t);
    return e ? 100 / e.value : null;
  },
  Lt = {
    getRulerWidth: function() {
      return 13;
    },
    hasHorizontalRuler: function() {
      return this.props.ruler || this.props.horizontalRuler;
    },
    hasVerticalRuler: function() {
      return this.props.ruler || this.props.verticalRuler;
    },
    getHorizontalSteps: function() {
      var t = this.props.horizontalRulerSteps || this.props.rulerSteps || 50;
      if ('string' == typeof t) {
        var e = Pt(t);
        if (e) return (this.width - (this.hasVerticalRuler() ? 13 : 0)) / e;
        throw new Error('Page: Invalid horizontal steps value');
      }
      return t;
    },
    getVerticalSteps: function() {
      var t = this.props.verticalRulerSteps || this.props.rulerSteps || 50;
      if ('string' == typeof t) {
        var e = Pt(t);
        if (e) return (this.height - (this.hasHorizontalRuler() ? 13 : 0)) / e;
        throw new Error('Page: Invalid horizontal steps value');
      }
      return t;
    },
    renderRuler: function() {
      var t = this.hasHorizontalRuler(),
        e = this.hasVerticalRuler();
      (t || e) &&
        (this.root.instance
          .save()
          .lineWidth(0.5)
          .fontSize(5)
          .opacity(1),
        t && this.drawHorizontalRuler(),
        e && this.drawVerticalRuler(),
        t && e && this.root.instance.rect(0, 0, 12.5, 12.5).fill('white'),
        this.root.instance.restore());
    },
    drawHorizontalRuler: function() {
      var t = this,
        e = this.hasVerticalRuler() ? 13 : 0;
      this.root.instance
        .rect(e, 0, this.width, 13)
        .fill('white')
        .moveTo(this.hasVerticalRuler() ? 13 : 0, 13)
        .lineTo(this.width, 13)
        .stroke('gray');
      var r = At(this.width, this.getHorizontalSteps());
      r.map(function(r) {
        t.root.instance
          .moveTo(e + r, 0)
          .lineTo(e + r, 13)
          .stroke('gray')
          .fillColor('black')
          .text('' + Math.round(r), e + r + 1, 1);
      }),
        r.map(function(r) {
          0 !== r &&
            t.root.instance
              .moveTo(e + r, 13)
              .lineTo(e + r, t.height)
              .stroke('#ababab');
        });
    },
    drawVerticalRuler: function() {
      var t = this,
        e = this.hasHorizontalRuler() ? 13 : 0;
      this.root.instance
        .rect(0, e, 13, this.height)
        .fill('white')
        .moveTo(13, this.hasHorizontalRuler() ? 13 : 0)
        .lineTo(13, this.height)
        .stroke('gray');
      var r = At(this.height, this.getVerticalSteps());
      r.map(function(r) {
        t.root.instance
          .moveTo(0, e + r)
          .lineTo(13, e + r)
          .stroke('gray')
          .fillColor('black')
          .text('' + Math.round(r), 1, e + r + 1);
      }),
        r.map(function(r) {
          0 !== r &&
            t.root.instance
              .moveTo(13, e + r)
              .lineTo(t.width, e + r)
              .stroke('#ababab');
        });
    },
  },
  Mt = (function() {
    function t(t, e) {
      (this.root = t),
        (this.value = e),
        (this.parent = null),
        (this.props = {});
    }
    var e = t.prototype;
    return (
      (e.getLayoutData = function() {
        return this.value;
      }),
      (e.remove = function() {
        this.parent.removeChild(this);
      }),
      (e.clone = function() {
        return new this.constructor(this.root, this.value);
      }),
      (e.update = function(t) {
        (this.value = t),
          (this.parent.computed = !1),
          (this.parent.container = null),
          this.root.markDirty();
      }),
      h(t, [
        {
          key: 'name',
          get: function() {
            return 'TextInstance';
          },
        },
      ]),
      t
    );
  })(),
  Bt = {
    '4A0': [4767.87, 6740.79],
    '2A0': [3370.39, 4767.87],
    A0: [2383.94, 3370.39],
    A1: [1683.78, 2383.94],
    A2: [1190.55, 1683.78],
    A3: [841.89, 1190.55],
    A4: [595.28, 841.89],
    A5: [419.53, 595.28],
    A6: [297.64, 419.53],
    A7: [209.76, 297.64],
    A8: [147.4, 209.76],
    A9: [104.88, 147.4],
    A10: [73.7, 104.88],
    B0: [2834.65, 4008.19],
    B1: [2004.09, 2834.65],
    B2: [1417.32, 2004.09],
    B3: [1000.63, 1417.32],
    B4: [708.66, 1000.63],
    B5: [498.9, 708.66],
    B6: [354.33, 498.9],
    B7: [249.45, 354.33],
    B8: [175.75, 249.45],
    B9: [124.72, 175.75],
    B10: [87.87, 124.72],
    C0: [2599.37, 3676.54],
    C1: [1836.85, 2599.37],
    C2: [1298.27, 1836.85],
    C3: [918.43, 1298.27],
    C4: [649.13, 918.43],
    C5: [459.21, 649.13],
    C6: [323.15, 459.21],
    C7: [229.61, 323.15],
    C8: [161.57, 229.61],
    C9: [113.39, 161.57],
    C10: [79.37, 113.39],
    RA0: [2437.8, 3458.27],
    RA1: [1729.13, 2437.8],
    RA2: [1218.9, 1729.13],
    RA3: [864.57, 1218.9],
    RA4: [609.45, 864.57],
    SRA0: [2551.18, 3628.35],
    SRA1: [1814.17, 2551.18],
    SRA2: [1275.59, 1814.17],
    SRA3: [907.09, 1275.59],
    SRA4: [637.8, 907.09],
    EXECUTIVE: [521.86, 756],
    FOLIO: [612, 936],
    LEGAL: [612, 1008],
    LETTER: [612, 792],
    TABLOID: [792, 1224],
  },
  Ot = (function(e) {
    function r(t, r) {
      var n;
      return ((n = e.call(this, t, r) || this)._size = null), n;
    }
    t(r, e);
    var n = r.prototype;
    return (
      (n.resetMargins = function() {
        (this.marginTop ||
          this.marginBottom ||
          this.marginLeft ||
          this.marginRight) &&
          (z(
            !1,
            'Margin values are not allowed on Page element. Use padding instead.',
          ),
          (this.marginTop = 0),
          (this.marginBottom = 0),
          (this.marginLeft = 0),
          (this.marginRight = 0));
      }),
      (n.applyProps = function() {
        e.prototype.applyProps.call(this),
          (this.top = 0),
          (this.left = 0),
          (this.width = this.size.width),
          this.resetMargins();
        var t = this.getRulerWidth();
        this.hasHorizontalRuler() && (this.paddingTop = this.paddingTop + t),
          this.hasVerticalRuler() && (this.paddingLeft = this.paddingLeft + t);
      }),
      (n.setPadding = function(t, e) {
        var r =
            t === d.EDGE_TOP || t === d.EDGE_BOTTOM
              ? this.size.height
              : this.size.width,
          n = G(e);
        n
          ? this.layout.setPadding(t, r * n.percent)
          : this.layout.setPadding(t, e);
      }),
      (n.addDynamicChild = (function() {
        var t = a(
          o.mark(function t(e, r) {
            var n, a, s, u, h, c, l;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      if (r) {
                        t.next = 2;
                        break;
                      }
                      return t.abrupt('return');
                    case 2:
                      (n = Array.isArray(r) ? r : [r]), (a = 0);
                    case 4:
                      if (!(a < n.length)) {
                        t.next = 27;
                        break;
                      }
                      if (
                        ((s = n[a]),
                        (u = s.type),
                        (h = s.props),
                        'string' != typeof s)
                      ) {
                        t.next = 12;
                        break;
                      }
                      (c = new Mt(this.root, s)),
                        e.appendChild(c),
                        (t.next = 24);
                      break;
                    case 12:
                      if (u === i) {
                        t.next = 22;
                        break;
                      }
                      return (
                        (l = rr(s, this.root)),
                        (t.next = 16),
                        l.onAppendDynamically()
                      );
                    case 16:
                      return (
                        e.appendChild(l),
                        l.applyProps(),
                        (t.next = 20),
                        this.addDynamicChild(l, h.children)
                      );
                    case 20:
                      t.next = 24;
                      break;
                    case 22:
                      return (t.next = 24), this.addDynamicChild(e, h.children);
                    case 24:
                      a++, (t.next = 4);
                      break;
                    case 27:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function(e, r) {
          return t.apply(this, arguments);
        };
      })()),
      (n.renderDynamicNodes = (function() {
        var t = a(
          o.mark(function t(e, r) {
            var n, i, a;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      n = this.children.slice(0);
                    case 1:
                      if (!(n.length > 0)) {
                        t.next = 14;
                        break;
                      }
                      if (((i = n.shift()), !(!r || r(i)) || !i.props.render)) {
                        t.next = 11;
                        break;
                      }
                      return (
                        i.removeAllChilds(),
                        (a = i.props.render(e)),
                        (t.next = 9),
                        this.addDynamicChild(i, a)
                      );
                    case 9:
                      return (
                        i.fixed || (i.props.render = null),
                        t.abrupt('continue', 1)
                      );
                    case 11:
                      i.children && n.push.apply(n, i.children), (t.next = 1);
                      break;
                    case 14:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function(e, r) {
          return t.apply(this, arguments);
        };
      })()),
      (n.nodeWillWrap = (function() {
        var t = a(
          o.mark(function t(e) {
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      return (t.next = 2), this.renderDynamicNodes(e);
                    case 2:
                      this.calculateLayout();
                    case 3:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function(e) {
          return t.apply(this, arguments);
        };
      })()),
      (n.onNodeSplit = function(t, e) {
        (e.marginTop = 0), (this.marginBottom = 0), this.calculateLayout();
      }),
      (n.clone = function() {
        var t = e.prototype.clone.call(this);
        return (t._size = this.size), t;
      }),
      (n.update = function(t) {
        e.prototype.update.call(this, t), (this._size = null);
      }),
      (n.render = (function() {
        var t = a(
          o.mark(function t() {
            var e;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      return (
                        (e = this.root.instance),
                        (this.height = this.size.height),
                        this.calculateLayout(),
                        e.addPage({
                          size: [this.size.width, this.size.height],
                          margin: 0,
                        }),
                        this.style.backgroundColor &&
                          e
                            .fillColor(this.style.backgroundColor)
                            .rect(0, 0, this.size.width, this.size.height)
                            .fill(),
                        (t.next = 7),
                        this.renderChildren()
                      );
                    case 7:
                      this.props.debug && this.debug(), this.renderRuler();
                    case 9:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(r, [
        {
          key: 'name',
          get: function() {
            return 'Page';
          },
        },
        {
          key: 'document',
          get: function() {
            return this.parent;
          },
        },
        {
          key: 'page',
          get: function() {
            return this;
          },
        },
        {
          key: 'orientation',
          get: function() {
            return this.props.orientation;
          },
        },
        {
          key: 'size',
          get: function() {
            return this._size
              ? this._size
              : ((this._size = (function(t, e) {
                  var r;
                  if ((void 0 === e && (e = 'portrait'), 'string' == typeof t))
                    r = Bt[t.toUpperCase()];
                  else if (Array.isArray(t)) r = t;
                  else {
                    if ('object' != typeof t || !t.width || !t.height)
                      throw new Error('Invalid Page size: ' + t);
                    r = [t.width, t.height];
                  }
                  return 'portrait' === e
                    ? { width: r[0], height: r[1] }
                    : { width: r[1], height: r[0] };
                })(this.props.size, this.orientation)),
                this.hasHorizontalRuler() &&
                  (this._size.width += this.getRulerWidth()),
                this.hasVerticalRuler() &&
                  (this._size.height += this.getRulerWidth()),
                this._size);
          },
        },
      ]),
      r
    );
  })(Rt);
(Ot.defaultProps = { size: 'A4', wrap: !0, orientation: 'portrait' }),
  Object.assign(Ot.prototype, Lt);
var It = (function(e) {
  function r() {
    return e.apply(this, arguments) || this;
  }
  return (
    t(r, e),
    (r.prototype.render = (function() {
      var t = a(
        o.mark(function t() {
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    return (
                      this.root.instance.save(),
                      this.applyTransformations(),
                      this.drawBackgroundColor(),
                      this.drawBorders(),
                      (t.next = 6),
                      this.renderChildren()
                    );
                  case 6:
                    this.props.debug && this.debug(),
                      this.root.instance.restore();
                  case 8:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    h(r, [
      {
        key: 'name',
        get: function() {
          return 'View';
        },
      },
    ]),
    r
  );
})(Rt);
It.defaultProps = { wrap: !0 };
var Dt,
  _t,
  Wt = (function() {
    var t = a(
      o.mark(function t(e, r) {
        var n, i;
        return o.wrap(function(t) {
          for (;;)
            switch ((t.prev = t.next)) {
              case 0:
                return (t.next = 2), x(e, r);
              case 2:
                return (
                  (n = t.sent),
                  (t.next = 5),
                  n.buffer ? n.buffer() : n.arrayBuffer()
                );
              case 5:
                return (
                  (i = t.sent),
                  t.abrupt(
                    'return',
                    'Buffer' === i.constructor.name ? i : Buffer.from(i),
                  )
                );
              case 7:
              case 'end':
                return t.stop();
            }
        }, t);
      }),
    );
    return function(e, r) {
      return t.apply(this, arguments);
    };
  })(),
  zt = function(t) {
    throw new Error(
      'Invalid font url: ' +
        t +
        '. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)',
    );
  },
  Ft = (function() {
    function t(t, e, r, n, i, o) {
      (this.src = t),
        (this.fontFamily = e),
        (this.fontStyle = r || 'normal'),
        (this.fontWeight = $(n) || 400),
        (this.unicodeRange = i instanceof RegExp ? i : /./),
        (this.data = null),
        (this.loading = !1),
        (this.options = o);
    }
    return (
      (t.prototype.load = (function() {
        var t = a(
          o.mark(function t() {
            var e,
              r,
              n,
              i,
              a,
              s,
              u = this;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      if (((this.loading = !0), !T(this.src))) {
                        t.next = 9;
                        break;
                      }
                      return (
                        (e = this.options),
                        (r = e.headers),
                        (n = e.body),
                        (i = e.method),
                        (a = void 0 === i ? 'GET' : i),
                        (t.next = 5),
                        Wt(this.src, { method: a, body: n, headers: r })
                      );
                    case 5:
                      (s = t.sent), (this.data = w.create(s)), (t.next = 13);
                      break;
                    case 9:
                      return (
                        zt(this.src),
                        (t.next = 12),
                        new Promise(function(t, e) {
                          return w.open(u.src, function(r, n) {
                            return r ? e(r) : t(n);
                          });
                        })
                      );
                    case 12:
                      this.data = t.sent;
                    case 13:
                      this.loading = !1;
                    case 14:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      t
    );
  })(),
  Nt = (function() {
    function t(t) {
      (this.family = t), (this.sources = []);
    }
    t.create = function(e) {
      return new t(e);
    };
    var r = t.prototype;
    return (
      (r.register = function(t) {
        var r = t.src,
          n = t.fontWeight,
          i = t.fontStyle,
          o = t.unicodeRange,
          a = e(t, ['src', 'fontWeight', 'fontStyle', 'unicodeRange']);
        this.sources.push(new Ft(r, this.fontFamily, i, n, o, a));
      }),
      (r.resolve = function(t) {
        var e,
          r = t.fontWeight,
          n = void 0 === r ? 400 : r,
          i = t.fontStyle,
          o = void 0 === i ? 'normal' : i,
          a = this.sources.filter(function(t) {
            return t.fontStyle === o;
          }),
          s = a.find(function(t) {
            return t.fontWeight === n;
          });
        if (s) return s;
        if (n >= 400 && n <= 500) {
          var u = a.filter(function(t) {
              return t.fontWeight <= n;
            }),
            h = a.filter(function(t) {
              return t.fontWeight > 500;
            });
          e =
            a.filter(function(t) {
              return t.fontWeight >= n && t.fontWeight < 500;
            })[0] ||
            u[u.length - 1] ||
            h[0];
        }
        var c = a.filter(function(t) {
            return t.fontWeight < n;
          }),
          l = a.filter(function(t) {
            return t.fontWeight > n;
          });
        if (
          (n < 400 && (e = c[c.length - 1] || l[0]),
          n > 500 && (e = l[0] || c[c.length - 1]),
          !e)
        )
          throw new Error(
            'Could not resolve font for ' +
              this.fontFamily +
              ', fontWeight ' +
              n,
          );
        return e;
      }),
      t
    );
  })(),
  Gt = [
    'Courier',
    'Courier-Bold',
    'Courier-Oblique',
    'Helvetica',
    'Helvetica-Bold',
    'Helvetica-Oblique',
    'Times-Roman',
    'Times-Bold',
    'Times-Italic',
  ];
function jt(t, e) {
  var r;
  if ('undefined' == typeof Symbol || null == t[Symbol.iterator]) {
    if (
      Array.isArray(t) ||
      (r = (function(t, e) {
        if (!t) return;
        if ('string' == typeof t) return Ut(t, e);
        var r = Object.prototype.toString.call(t).slice(8, -1);
        'Object' === r && t.constructor && (r = t.constructor.name);
        if ('Map' === r || 'Set' === r) return Array.from(t);
        if (
          'Arguments' === r ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
          return Ut(t, e);
      })(t)) ||
      (e && t && 'number' == typeof t.length)
    ) {
      r && (t = r);
      var n = 0;
      return function() {
        return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] };
      };
    }
    throw new TypeError(
      'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  }
  return (r = t[Symbol.iterator]()).next.bind(r);
}
function Ut(t, e) {
  (null == e || e > t.length) && (e = t.length);
  for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
  return n;
}
var Ht = {},
  Vt = function(t) {
    var e = t.fontFamily;
    if (Gt.includes(e)) return null;
    if (!Ht[e])
      throw new Error(
        'Font family not registered: ' +
          e +
          '. Please register it calling Font.register() method.',
      );
    return Ht[e].resolve(t);
  },
  Xt = r(
    {
      register: function(t, e) {
        'object' == typeof t
          ? (e = t)
          : (z(
              !1,
              'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',
            ),
            (e.src = t));
        var n = e.family;
        if ((Ht[n] || (Ht[n] = Nt.create(n)), e.fonts))
          for (var i = 0; i < e.fonts.length; i++)
            Ht[n].register(r({ family: n }, e.fonts[i]));
        else Ht[n].register(e);
      },
      getRegisteredFonts: function() {
        return Ht;
      },
      getRegisteredFontFamilies: function() {
        return Object.keys(Ht);
      },
      getFont: Vt,
      load: function(t, n, i) {
        for (
          var o,
            a = t.fontFamily,
            s = e(t, ['fontFamily']),
            u = [],
            h = jt(
              'string' == typeof a
                ? a.split(',').map(function(t) {
                    return t.trim();
                  })
                : [].concat(a || []),
            );
          !(o = h()).done;

        ) {
          var c = o.value;
          if (Gt.includes(c)) break;
          var l = Vt(r({}, s, { fontFamily: c }));
          if (
            ('string' != typeof i || i.search(l.unicodeRange) >= 0) &&
            !l.data &&
            !l.loading &&
            (u.push(l.load()), '.' === l.unicodeRange.source)
          )
            break;
        }
        return Promise.all(u);
      },
      clear: function() {
        Ht = {};
      },
      reset: function() {
        for (var t in Ht) Ht.hasOwnProperty(t) && (Ht[t].data = null);
      },
    },
    {
      registerEmojiSource: function(t) {
        var e = t.url,
          r = t.format;
        Dt = { url: e, format: void 0 === r ? 'png' : r };
      },
      getEmojiSource: function() {
        return Dt;
      },
    },
    {
      registerHyphenationCallback: function(t) {
        _t = t;
      },
      getHyphenationCallback: function() {
        return _t;
      },
    },
  ),
  Yt = /^([a-z]+\:(\/\/)?)/i,
  Jt = function(t) {
    return t ? ('string' != typeof t || t.match(Yt) ? t : 'http://' + t) : '';
  },
  qt = (function() {
    function t(t) {
      (this.name = t), (this.src = l.open(null, t));
    }
    var e = t.prototype;
    return (
      (e.layout = function(t) {
        var e = this,
          r = this.src.encode(t),
          n = r[0],
          i = r[1];
        return {
          positions: i,
          stringIndices: i.map(function(t, e) {
            return e;
          }),
          glyphs: n.map(function(t, r) {
            var n = e.getGlyph(parseInt(t, 16));
            return (n.advanceWidth = i[r].advanceWidth), n;
          }),
        };
      }),
      (e.glyphForCodePoint = function(t) {
        var e = this.getGlyph(t);
        return (e.advanceWidth = 400), e;
      }),
      (e.getGlyph = function(t) {
        return {
          id: t,
          _font: this.src,
          codePoints: [t],
          isLigature: !1,
          name: this.src.font.characterToGlyph(t),
        };
      }),
      (e.hasGlyphForCodePoint = function(t) {
        return '.notdef' !== this.src.font.characterToGlyph(t);
      }),
      h(t, [
        {
          key: 'ascent',
          get: function() {
            return this.src.ascender;
          },
        },
        {
          key: 'descent',
          get: function() {
            return this.src.descender;
          },
        },
        {
          key: 'lineGap',
          get: function() {
            return this.src.lineGap;
          },
        },
        {
          key: 'unitsPerEm',
          get: function() {
            return 1e3;
          },
        },
      ]),
      t
    );
  })();
function Kt(t, e) {
  var r;
  if ('undefined' == typeof Symbol || null == t[Symbol.iterator]) {
    if (
      Array.isArray(t) ||
      (r = (function(t, e) {
        if (!t) return;
        if ('string' == typeof t) return $t(t, e);
        var r = Object.prototype.toString.call(t).slice(8, -1);
        'Object' === r && t.constructor && (r = t.constructor.name);
        if ('Map' === r || 'Set' === r) return Array.from(t);
        if (
          'Arguments' === r ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
          return $t(t, e);
      })(t)) ||
      (e && t && 'number' == typeof t.length)
    ) {
      r && (t = r);
      var n = 0;
      return function() {
        return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] };
      };
    }
    throw new TypeError(
      'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  }
  return (r = t[Symbol.iterator]()).next.bind(r);
}
function $t(t, e) {
  (null == e || e > t.length) && (e = t.length);
  for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
  return n;
}
var Zt = function() {
    return function(t) {
      var e = t.Run;
      return (function() {
        function t() {
          this.fontCache = {};
        }
        var r = t.prototype;
        return (
          (r.getOrCreateFont = function(t) {
            if (this.fontCache[t]) return this.fontCache[t];
            var e = new qt(t);
            return (this.fontCache[t] = e), e;
          }),
          (r.shouldFallbackToFont = function(t, e) {
            return (
              !e.hasGlyphForCodePoint(t) &&
              this.fallbackFont.hasGlyphForCodePoint(t)
            );
          }),
          (r.getRuns = function(t, r) {
            for (
              var n, i = [], o = null, a = 0, s = 0, u = Kt(r);
              !(n = u()).done;

            ) {
              var h = n.value,
                c =
                  'string' == typeof h.attributes.font
                    ? this.getOrCreateFont(h.attributes.font)
                    : h.attributes.font;
              if (0 === t.length) {
                i.push(new e(0, 0, { font: c }));
                break;
              }
              for (var l, d = Kt(t.slice(h.start, h.end)); !(l = d()).done; ) {
                var f = l.value,
                  p = f.codePointAt(),
                  g = this.shouldFallbackToFont(p, c) ? this.fallbackFont : c;
                g !== o &&
                  (o && i.push(new e(a, s, { font: o })), (o = g), (a = s)),
                  (s += f.length);
              }
            }
            return a < t.length && i.push(new e(a, t.length, { font: o })), i;
          }),
          h(t, [
            {
              key: 'fallbackFont',
              get: function() {
                return this.getOrCreateFont('Helvetica');
              },
            },
          ]),
          t
        );
      })();
    };
  },
  Qt = require('hyphen'),
  te = require('hyphen/patterns/en-us'),
  ee = Qt(te),
  re = function(t) {
    var e = t.hyphenationCallback;
    return function() {
      return (function() {
        function t() {
          this.cache = {};
        }
        var r = t.prototype;
        return (
          (r.calculateParts = function(t) {
            return t.includes('­') ? t.split('­') : ee(t).split('­');
          }),
          (r.hyphenateWord = function(t) {
            if (this.cache[t]) return this.cache[t];
            var r = e ? e(t) : this.calculateParts(t);
            return (this.cache[t] = r), r;
          }),
          t
        );
      })();
    };
  },
  ne = (function() {
    function t(t) {
      (this.prev = null), (this.next = null), (this.data = t);
    }
    return (
      (t.prototype.toString = function() {
        return this.data.toString();
      }),
      t
    );
  })(),
  ie = (function() {
    function t() {
      (this.head = null), (this.tail = null), (this.listSize = 0);
    }
    var e = t.prototype;
    return (
      (e.isLinked = function(t) {
        return !(
          (t &&
            null === t.prev &&
            null === t.next &&
            this.tail !== t &&
            this.head !== t) ||
          this.isEmpty()
        );
      }),
      (e.size = function() {
        return this.listSize;
      }),
      (e.isEmpty = function() {
        return 0 === this.listSize;
      }),
      (e.first = function() {
        return this.head;
      }),
      (e.last = function() {
        return this.last;
      }),
      (e.toString = function() {
        return this.toArray().toString();
      }),
      (e.toArray = function() {
        for (var t = this.head, e = []; null !== t; ) e.push(t), (t = t.next);
        return e;
      }),
      (e.forEach = function(t) {
        for (var e = this.head; null !== e; ) t(e), (e = e.next);
      }),
      (e.contains = function(t) {
        var e = this.head;
        if (!this.isLinked(t)) return !1;
        for (; null !== e; ) {
          if (e === t) return !0;
          e = e.next;
        }
        return !1;
      }),
      (e.at = function(t) {
        var e = this.head,
          r = 0;
        if (t >= this.listLength || t < 0) return null;
        for (; null !== e; ) {
          if (t === r) return e;
          (e = e.next), (r += 1);
        }
        return null;
      }),
      (e.insertAfter = function(t, e) {
        return this.isLinked(t)
          ? ((e.prev = t),
            (e.next = t.next),
            null === t.next ? (this.tail = e) : (t.next.prev = e),
            (t.next = e),
            (this.listSize += 1),
            this)
          : this;
      }),
      (e.insertBefore = function(t, e) {
        return this.isLinked(t)
          ? ((e.prev = t.prev),
            (e.next = t),
            null === t.prev ? (this.head = e) : (t.prev.next = e),
            (t.prev = e),
            (this.listSize += 1),
            this)
          : this;
      }),
      (e.push = function(t) {
        return (
          null === this.head ? this.unshift(t) : this.insertAfter(this.tail, t),
          this
        );
      }),
      (e.unshift = function(t) {
        return (
          null === this.head
            ? ((this.head = t),
              (this.tail = t),
              (t.prev = null),
              (t.next = null),
              (this.listSize += 1))
            : this.insertBefore(this.head, t),
          this
        );
      }),
      (e.remove = function(t) {
        return this.isLinked(t)
          ? (null === t.prev ? (this.head = t.next) : (t.prev.next = t.next),
            null === t.next ? (this.tail = t.prev) : (t.next.prev = t.prev),
            (this.listSize -= 1),
            this)
          : this;
      }),
      (e.pop = function() {
        var t = this.tail;
        return (
          (this.tail.prev.next = null),
          (this.tail = this.tail.prev),
          (this.listSize -= 1),
          (t.prev = null),
          (t.next = null),
          t
        );
      }),
      (e.shift = function() {
        var t = this.head;
        return (
          (this.head.next.prev = null),
          (this.head = this.head.next),
          (this.listSize -= 1),
          (t.prev = null),
          (t.next = null),
          t
        );
      }),
      t
    );
  })();
ie.Node = ne;
var oe = function t(e, r, n) {
  var i = {
      demerits: {
        line: (n && n.demerits && n.demerits.line) || 10,
        flagged: (n && n.demerits && n.demerits.flagged) || 100,
        fitness: (n && n.demerits && n.demerits.fitness) || 3e3,
      },
      tolerance: (n && n.tolerance) || 3,
    },
    o = new ie(),
    a = { width: 0, stretch: 0, shrink: 0 },
    s = r,
    u = [],
    h = { data: { demerits: 1 / 0 } };
  function c(t, e, r, n, i, o, a) {
    return {
      position: t,
      demerits: e,
      ratio: r,
      line: n,
      fitnessClass: i,
      totals: o || { width: 0, stretch: 0, shrink: 0 },
      previous: a,
    };
  }
  function l(r, n, i, o) {
    var u = a.width - i.totals.width,
      h = 0,
      c = 0,
      l = o < s.length ? s[o - 1] : s[s.length - 1];
    return (
      'penalty' === e[n].type && (u += e[n].width),
      u < l
        ? (h = a.stretch - i.totals.stretch) > 0
          ? (l - u) / h
          : t.infinity
        : u > l
        ? (c = a.shrink - i.totals.shrink) > 0
          ? (l - u) / c
          : t.infinity
        : 0
    );
  }
  function d(r) {
    for (
      var n = { width: a.width, stretch: a.stretch, shrink: a.shrink }, i = r;
      i < e.length;
      i += 1
    )
      if ('glue' === e[i].type)
        (n.width += e[i].width),
          (n.stretch += e[i].stretch),
          (n.shrink += e[i].shrink);
      else if (
        'box' === e[i].type ||
        ('penalty' === e[i].type && e[i].penalty === -t.infinity && i > r)
      )
        break;
    return n;
  }
  function f(e, r, n) {
    for (
      var a,
        s,
        u,
        h,
        f,
        p = o.first(),
        g = null,
        m = 0,
        y = 0,
        v = [],
        b = 0,
        T = 0;
      null !== p;

    ) {
      for (
        v = [
          { demerits: 1 / 0 },
          { demerits: 1 / 0 },
          { demerits: 1 / 0 },
          { demerits: 1 / 0 },
        ];
        null !== p &&
        ((g = p.next),
        (b = p.data.line + 1),
        ((m = l(p.data.position, r, p.data, b)) < -1 ||
          ('penalty' === e.type && e.penalty === -t.infinity)) &&
          o.remove(p),
        m >= -1 &&
          m <= i.tolerance &&
          ((a = 100 * Math.pow(Math.abs(m), 3)),
          (y =
            'penalty' === e.type && e.penalty >= 0
              ? Math.pow(i.demerits.line + a, 2) + Math.pow(e.penalty, 2)
              : 'penalty' === e.type && e.penalty !== -t.infinity
              ? Math.pow(i.demerits.line + a, 2) - Math.pow(e.penalty, 2)
              : Math.pow(i.demerits.line + a, 2)),
          'penalty' === e.type &&
            'penalty' === n[p.data.position].type &&
            (y += i.demerits.flagged * e.flagged * n[p.data.position].flagged),
          (T = m < -0.5 ? 0 : m <= 0.5 ? 1 : m <= 1 ? 2 : 3),
          Math.abs(T - p.data.fitnessClass) > 1 && (y += i.demerits.fitness),
          (y += p.data.demerits) < v[T].demerits &&
            (v[T] = { active: p, demerits: y, ratio: m })),
        !(null !== (p = g) && p.data.line >= b));

      );
      for (s = d(r), u = 0; u < v.length; u += 1)
        (h = v[u]).demerits < 1 / 0 &&
          ((f = new ie.Node(
            c(r, h.demerits, h.ratio, h.active.data.line + 1, u, s, h.active),
          )),
          null !== p ? o.insertBefore(p, f) : o.push(f));
    }
  }
  if (
    (o.push(new ie.Node(c(0, 0, 0, 0, 0, void 0, null))),
    e.forEach(function(e, r, n) {
      'box' === e.type
        ? (a.width += e.width)
        : 'glue' === e.type
        ? (r > 0 && 'box' === n[r - 1].type && f(e, r, n),
          (a.width += e.width),
          (a.stretch += e.stretch),
          (a.shrink += e.shrink))
        : 'penalty' === e.type && e.penalty !== t.infinity && f(e, r, n);
    }),
    0 !== o.size())
  ) {
    for (
      o.forEach(function(t) {
        t.data.demerits < h.data.demerits && (h = t);
      });
      null !== h;

    )
      u.push({ position: h.data.position, ratio: h.data.ratio }),
        (h = h.data.previous);
    return u.reverse();
  }
  return [];
};
(oe.infinity = 1e4),
  (oe.glue = function(t, e, r, n) {
    return { type: 'glue', value: e, width: t, stretch: r, shrink: n };
  }),
  (oe.box = function(t, e, r) {
    return (
      void 0 === r && (r = !1),
      { type: 'box', width: t, value: e, hyphenated: r }
    );
  }),
  (oe.penalty = function(t, e, r) {
    return { type: 'penalty', width: t, penalty: e, flagged: r };
  });
var ae = function(t, e, r) {
    for (
      var n = null,
        i = 1 / 0,
        o = { width: 0, stretch: 0, shrink: 0 },
        a = e[Math.min(r, e.length - 1)],
        s = function(t) {
          return o.width < a
            ? o.stretch - t.stretch > 0
              ? (a - o.width) / o.stretch
              : 1e4
            : o.width > a
            ? o.shrink - t.shrink > 0
              ? (a - o.width) / o.shrink
              : 1e4
            : 0;
        },
        u = 0;
      u < t.length;
      u++
    ) {
      var h = t[u];
      if (
        ('box' === h.type
          ? (o.width += h.width)
          : 'glue' === h.type &&
            ((o.width += h.width),
            (o.stretch += h.stretch),
            (o.shrink += h.shrink)),
        o.width - o.shrink > a)
      )
        break;
      if ('penalty' === h.type || 'glue' === h.type) {
        var c = s(h),
          l = 'penalty' === h.type ? h.penalty : 0,
          d = 100 * Math.pow(Math.abs(c), 3) + l;
        i >= d && ((n = u), (i = d));
      }
    }
    return o.width - o.shrink > a ? n : null;
  },
  se = 3,
  ue = 6,
  he = 9,
  ce = function(t) {
    var e = (void 0 === t ? {} : t).penalty;
    return function() {
      return (function() {
        function t(t) {
          this.tolerance = t || 4;
        }
        var r = t.prototype;
        return (
          (r.getNodes = function(t, r, n) {
            var i = n.align,
              o = 0,
              a = e || ('justify' === i ? 100 : 600),
              s = r.reduce(function(e, n, i) {
                var s = t.glyphIndexForStringIndex(o),
                  u = t.glyphIndexForStringIndex(o + n.length),
                  h = t.slice(s, u);
                if ('' === h.string.trim()) {
                  var c = h.advanceWidth,
                    l = (c * se) / ue,
                    d = (c * se) / he,
                    f = { value: h, start: o, end: o + h.end };
                  e.push(oe.glue(c, f, l, d));
                } else {
                  var p = ' ' !== r[i + 1],
                    g = { value: h, start: o, end: o + h.end };
                  e.push(oe.box(h.advanceWidth, g, p)),
                    r[i + 1] && p && e.push(oe.penalty(5, a, 1));
                }
                return (o += n.length), e;
              }, []);
            return (
              s.push(oe.glue(0, null, oe.infinity, 0)),
              s.push(oe.penalty(0, -oe.infinity, 1)),
              s
            );
          }),
          (r.breakLines = function(t, e, r) {
            var n = 0,
              i = null,
              o = r.reduce(function(r, o) {
                var a,
                  s = e[o.position],
                  u = e[o.position - 1];
                return o.position === e.length - 1
                  ? r
                  : ('penalty' === s.type
                      ? ((i = t.glyphIndexForStringIndex(u.value.end)),
                        (a = t.copy().slice(n, i)).insertGlyph(a.length, 45))
                      : ((i = t.glyphIndexForStringIndex(s.value.end)),
                        (a = t.copy().slice(n, i))),
                    (n = i),
                    [].concat(r, [a]));
              }, []),
              a = t.slice(n, t.glyphIndexForStringIndex(t.string.length));
            return o.push(a), o;
          }),
          (r.suggestLineBreak = function(t, e, r, n) {
            for (
              var i = this.getNodes(t, e, n),
                o = this.tolerance,
                a = oe(i, r, { tolerance: o });
              0 === a.length && o < 50;

            )
              a = oe(i, r, { tolerance: (o += 5) });
            return (
              (0 === a.length || (1 === a.length && 0 === a[0].position)) &&
                (a = (function(t, e) {
                  for (
                    var r = 0, n = 0, i = t, o = [{ position: 0 }];
                    i.length > 0;

                  ) {
                    var a = ae(i, e, n);
                    a
                      ? ((r += a),
                        o.push({ position: r }),
                        (i = i.slice(a + 1, i.length)),
                        r++,
                        n++)
                      : (i = []);
                  }
                  return o;
                })(i, r)),
              this.breakLines(t, i, a.slice(1))
            );
          }),
          t
        );
      })();
    };
  },
  le = { before: -0.5, after: -0.5 },
  de = (function(e) {
    function r(t) {
      var r = t.hyphenationCallback,
        n = t.hyphenationPenalty,
        i = {
          scriptItemizer: P(),
          decorationEngine: M(),
          fontSubstitutionEngine: Zt(),
          wordHyphenation: re({ hyphenationCallback: r }),
          lineBreaker: ce({ penalty: n }),
          justificationEngine: L({ shrinkWhitespaceFactor: le }),
        };
      return e.call(this, i) || this;
    }
    return t(r, e), r;
  })(E);
_.isValid = function(t) {
  try {
    return !!new _(t);
  } catch (t) {
    return !1;
  }
};
var fe = [
    65472,
    65473,
    65474,
    65475,
    65477,
    65478,
    65479,
    65480,
    65481,
    65482,
    65483,
    65484,
    65485,
    65486,
    65487,
  ],
  pe = function(t) {
    if (
      ((this.data = null),
      (this.width = null),
      (this.height = null),
      (this.data = t),
      65496 !== t.readUInt16BE(0))
    )
      throw new Error('SOI not found in JPEG');
    for (
      var e, r = 2;
      r < t.length && ((e = t.readUInt16BE(r)), (r += 2), !fe.includes(e));

    )
      r += t.readUInt16BE(r);
    if (!fe.includes(e)) throw new Error('Invalid JPEG.');
    (r += 3),
      (this.height = t.readUInt16BE(r)),
      (r += 2),
      (this.width = t.readUInt16BE(r));
  };
pe.isValid = function(t) {
  if (!t || !Buffer.isBuffer(t) || 65496 !== t.readUInt16BE(0)) return !1;
  for (
    var e, r = 2;
    r < t.length && ((e = t.readUInt16BE(r)), (r += 2), !fe.includes(e));

  )
    r += t.readUInt16BE(r);
  return !!fe.includes(e);
};
var ge = function(t) {
  if (
    ((this.data = null),
    (this.width = null),
    (this.height = null),
    71 !== t[0] || 73 !== t[1] || 70 !== t[2])
  )
    throw new TypeError(
      'Image passed to GIF decoder appears not to be in GIF format',
    );
};
ge.isValid = function(t) {
  try {
    return 71 === t[0] && 73 === t[1] && 70 === t[2];
  } catch (t) {
    return !1;
  }
};
var me,
  ye,
  ve,
  be,
  Te,
  we = function(t) {
    return new Promise(function(e, r) {
      return I(t, function(t, n) {
        return t ? r(t) : e(n);
      });
    });
  },
  xe =
    ((ye = (void 0 === (me = { limit: 30 }) ? {} : me).limit),
    (ve = void 0 === ye ? 100 : ye),
    (be = {}),
    (Te = []),
    {
      get: function(t) {
        return be[t];
      },
      set: function(t, e) {
        Te.push(t), Te.length > ve && delete be[Te.shift()], (be[t] = e);
      },
      reset: function() {
        (be = {}), (Te = []);
      },
      length: function() {
        return Te.length;
      },
    }),
  Ee = (function() {
    var t = a(
      o.mark(function t(e, r) {
        var n, i;
        return o.wrap(function(t) {
          for (;;)
            switch ((t.prev = t.next)) {
              case 0:
                return (t.next = 2), x(e, r);
              case 2:
                return (
                  (n = t.sent),
                  (t.next = 5),
                  n.buffer ? n.buffer() : n.arrayBuffer()
                );
              case 5:
                return (
                  (i = t.sent),
                  t.abrupt(
                    'return',
                    'Buffer' === i.constructor.name ? i : Buffer.from(i),
                  )
                );
              case 7:
              case 'end':
                return t.stop();
            }
        }, t);
      }),
    );
    return function(e, r) {
      return t.apply(this, arguments);
    };
  })(),
  Ce = (function() {
    var t = a(
      o.mark(function t(e, r) {
        var n;
        return o.wrap(function(t) {
          for (;;)
            switch ((t.prev = t.next)) {
              case 0:
                (t.t0 = r.toLowerCase()),
                  (t.next =
                    'jpg' === t.t0
                      ? 3
                      : 'jpeg' === t.t0
                      ? 3
                      : 'png' === t.t0
                      ? 4
                      : 'gif' === t.t0
                      ? 5
                      : 11);
                break;
              case 3:
                return t.abrupt('return', new pe(e));
              case 4:
                return t.abrupt('return', new _(e));
              case 5:
                t.next = 7;
                break;
              case 7:
                return (
                  (t.next = 9),
                  O.compress(
                    new File([D(e)], 'image.gif', { type: 'image/gif' }),
                    { quality: 0.8 },
                  ).then(function(t) {
                    return we(t);
                  })
                );
              case 9:
                return (n = t.sent), t.abrupt('return', new pe(n));
              case 11:
                return t.abrupt('return', null);
              case 12:
              case 'end':
                return t.stop();
            }
        }, t);
      }),
    );
    return function(e, r) {
      return t.apply(this, arguments);
    };
  })(),
  ke = function(t) {
    var e = (function(t) {
      var e;
      return (
        pe.isValid(t)
          ? (e = 'jpg')
          : _.isValid(t)
          ? (e = 'png')
          : ge.isValid(t) && (e = 'gif'),
        e
      );
    })(t);
    if (e) return Ce(t, e);
  },
  Se = function(t) {
    var e =
        137 === t[0] &&
        80 === t[1] &&
        78 === t[2] &&
        71 === t[3] &&
        13 === t[4] &&
        10 === t[5] &&
        26 === t[6] &&
        10 === t[7],
      r = 255 === t[0] && 216 === t[1] && 255 === t[2],
      n = 71 === t[0] && 73 === t[1] && 70 === t[2],
      i = '';
    if (e) i = 'png';
    else if (r) i = 'jpg';
    else {
      if (!n) throw new Error('Not valid image extension');
      i = 'gif';
    }
    return i;
  },
  Re = (function() {
    var t = a(
      o.mark(function t(e, r) {
        var n, i, a, s, u, h, c;
        return o.wrap(function(t) {
          for (;;)
            switch ((t.prev = t.next)) {
              case 0:
                (n = e.uri),
                  (i = e.body),
                  (a = e.headers),
                  (s = e.method),
                  (u = void 0 === s ? 'GET' : s),
                  (t.next = 7);
                break;
              case 4:
                (t.t0 = t.sent), (t.next = 10);
                break;
              case 7:
                return (t.next = 9), Ee(n, { body: i, headers: a, method: u });
              case 9:
                t.t0 = t.sent;
              case 10:
                return (h = t.t0), (c = Se(h)), t.abrupt('return', Ce(h, c));
              case 13:
              case 'end':
                return t.stop();
            }
        }, t);
      }),
    );
    return function(e, r) {
      return t.apply(this, arguments);
    };
  })(),
  Ae = function(t, r) {
    var n,
      i,
      o = void 0 === r ? {} : r,
      a = o.cache,
      s = void 0 === a || a,
      u = e(o, ['cache']),
      h = t.data ? t.data.toString() : t.uri;
    if (s && xe.get(h)) return xe.get(h);
    if (
      ((i = t.uri),
      !(n = /^data:image\/[a-zA-Z]*;base64,[^"]*/.test(i)
        ? (function(t) {
            var e = t.uri,
              r = /^data:image\/([a-zA-Z]*);base64,([^"]*)/.exec(e),
              n = r[1],
              i = r[2];
            if (
              !(function(t) {
                var e = t.toLowerCase();
                return (
                  'jpg' === e || 'jpeg' === e || 'png' === e || 'gif' === e
                );
              })(n)
            )
              throw new Error('Base64 image invalid format: ' + n);
            return Ce(Buffer.from(i, 'base64'), n);
          })(t)
        : Buffer.isBuffer(t)
        ? ke(t)
        : 'object' == typeof t && t.data
        ? (function(t) {
            if (t.data && t.format) return Ce(t.data, t.format);
            throw new Error(
              'Invalid data given for local file: ' + JSON.stringify(t),
            );
          })(t)
        : Re(t, u)))
    )
      throw new Error('Cannot resolve image');
    return s && xe.set(h, n), n;
  },
  Pe = {},
  Le = B(),
  Me = function(t) {
    return '️' !== t;
  },
  Be = function(t) {
    var e,
      r = Xt.getEmojiSource(),
      n = r.url,
      i = r.format;
    return (
      '' +
      n +
      ((e = t),
      Array.from(e)
        .filter(Me)
        .map(function(t) {
          return t.codePointAt(0).toString(16);
        })
        .join('-')) +
      '.' +
      i
    );
  },
  Oe = function(t) {
    var e = Xt.getEmojiSource();
    if (!e || !e.url) return [];
    for (
      var r,
        n = [],
        i = function() {
          var t,
            e = r[0];
          if (!Pe[e] || Pe[e].loading) {
            var i = Be(e);
            Pe[e] = { loading: !0 };
            var o =
              ((t = Ae),
              function() {
                return t.apply(void 0, arguments).then(
                  function(t) {
                    return t;
                  },
                  function(t) {
                    return t;
                  },
                );
              });
            n.push(
              o({ uri: i }).then(function(t) {
                (Pe[e].loading = !1), (Pe[e].data = t.data);
              }),
            );
          }
        };
      (r = Le.exec(t));

    )
      i();
    return n;
  },
  Ie = [8232, 8233];
function De(t, e) {
  var r;
  if ('undefined' == typeof Symbol || null == t[Symbol.iterator]) {
    if (
      Array.isArray(t) ||
      (r = (function(t, e) {
        if (!t) return;
        if ('string' == typeof t) return _e(t, e);
        var r = Object.prototype.toString.call(t).slice(8, -1);
        'Object' === r && t.constructor && (r = t.constructor.name);
        if ('Map' === r || 'Set' === r) return Array.from(t);
        if (
          'Arguments' === r ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
          return _e(t, e);
      })(t)) ||
      (e && t && 'number' == typeof t.length)
    ) {
      r && (t = r);
      var n = 0;
      return function() {
        return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] };
      };
    }
    throw new TypeError(
      'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  }
  return (r = t[Symbol.iterator]()).next.bind(r);
}
function _e(t, e) {
  (null == e || e > t.length) && (e = t.length);
  for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
  return n;
}
var We = [
    function(t) {
      return t.map(function(t) {
        var e,
          r =
            ((e = t.attributes.font),
            Ie.reduce(function(t, r) {
              return e.hasGlyphForCodePoint && e.hasGlyphForCodePoint(r)
                ? t
                : [].concat(t, [String.fromCharCode(r)]);
            }, [])),
          n = new RegExp(r.join('|'));
        return { string: t.string.replace(n, ''), attributes: t.attributes };
      });
    },
    function(t) {
      for (var e = [], n = 0; n < t.length; n++) {
        for (var i = t[n], o = void 0, a = 0; (o = Le.exec(i.string)); ) {
          var s = o.index,
            u = o[0],
            h = i.attributes.fontSize,
            c = i.string.slice(a, s + o[0].length);
          Pe[u] && Pe[u].data
            ? e.push({
                string: c.replace(o, C.CHARACTER),
                attributes: r({}, i.attributes, {
                  attachment: new C(h, h, {
                    yOffset: Math.floor(0.1 * h),
                    image: Pe[u].data,
                  }),
                }),
              })
            : e.push({
                string: c.replace(o, String.fromCharCode(0)),
                attributes: i.attributes,
              }),
            (a = s + u.length);
        }
        a < i.string.length &&
          e.push({ string: i.string.slice(a), attributes: i.attributes });
      }
      return e;
    },
  ],
  ze = function(t) {
    return k
      .fromFragments(
        (function t(e) {
          if (!e) return [{ string: '' }];
          var r = [],
            n = e.style,
            i = n.color,
            o = void 0 === i ? 'black' : i,
            a = n.backgroundColor,
            s = n.fontFamily,
            u = void 0 === s ? 'Helvetica' : s,
            h = n.fontWeight,
            c = n.fontStyle,
            l = n.fontSize,
            d = void 0 === l ? 18 : l,
            f = n.textAlign,
            p = void 0 === f ? 'left' : f,
            g = n.position,
            m = n.top,
            y = n.bottom,
            v = n.lineHeight,
            b = n.textDecoration,
            T = n.textDecorationColor,
            w = n.textDecorationStyle,
            x = n.textTransform,
            E = n.letterSpacing,
            C = n.opacity;
          e.children.forEach(function(n) {
            if (null !== n.value && void 0 !== n.value) {
              var i = Xt.getFont({
                  fontFamily: u,
                  fontWeight: h,
                  fontStyle: c,
                }),
                s = i ? i.data : u,
                l = (function(t, e) {
                  switch (e) {
                    case 'uppercase':
                      return t.toUpperCase();
                    case 'lowercase':
                      return t.toLowerCase();
                    case 'capitalize':
                      return t.replace(/(^|\s)\S/g, function(t) {
                        return t.toUpperCase();
                      });
                    default:
                      return t;
                  }
                })(n.value, x);
              r.push({
                string: l,
                attributes: {
                  font: s,
                  color: o,
                  opacity: C,
                  fontSize: d,
                  backgroundColor: a,
                  align: p,
                  link: e.src,
                  characterSpacing: E,
                  underlineStyle: w,
                  underline: 'underline' === b,
                  underlineColor: T || o,
                  lineHeight: v ? v * d : null,
                  yOffset: 'relative' === g ? -m || y || 0 : null,
                },
              });
            } else {
              var f;
              n && (f = r).push.apply(f, t(n));
            }
          });
          for (var k, S = De(We); !(k = S()).done; ) {
            var R = k.value;
            r = R(r);
          }
          return r;
        })(t),
      )
      .trim();
  },
  Fe = { outlineLines: !1 },
  Ne = b({ Rect: S }),
  Ge = (function(e) {
    function n(t, r) {
      var n;
      return (
        ((n = e.call(this, t, r) || this).start = 0),
        (n.end = 0),
        (n.computed = !1),
        (n.container = null),
        (n.attributedString = null),
        (n.layoutEngine = new de({
          hyphenationPenalty: r.hyphenationPenalty,
          hyphenationCallback: Xt.getHyphenationCallback(),
        })),
        n.layout.setMeasureFunc(n.measureText.bind(v(n))),
        n
      );
    }
    t(n, e);
    var i = n.prototype;
    return (
      (i.appendChild = function(t) {
        t &&
          ((t.parent = this),
          this.children.push(t),
          (this.computed = !1),
          (this.attributedString = null),
          this.markDirty());
      }),
      (i.removeChild = function(t) {
        var e = this.children.indexOf(t);
        -1 !== e &&
          ((t.parent = null),
          this.children.splice(e, 1),
          (this.computed = !1),
          (this.attributedString = null),
          this.markDirty());
      }),
      (i.lineIndexAtHeight = function(t) {
        for (var e = 0, r = 0; r < this.lines.length; r++) {
          var n = this.lines[r];
          if (e + n.height > t) return r;
          e += n.height;
        }
        return this.lines.length;
      }),
      (i.heightAtLineIndex = function(t) {
        for (var e = 0, r = 0; r < t; r++) {
          e += this.lines[r].height;
        }
        return e;
      }),
      (i.layoutText = function(t, e) {
        this.attributedString = ze(this);
        var r = e || this.page.size.height;
        if (!this.container || this.props.render) {
          var n = new R().rect(0, 0, t, r),
            i = new A(n),
            o = this.attributedString;
          this.layoutEngine.layout(o, [i]), (this.container = i);
        }
        var a = this.container.blocks.reduce(function(t, e) {
          return t + e.lines.length;
        }, 0);
        (this.end = this.props.maxLines || a + 1), (this.computed = !0);
      }),
      (i.measureText = function(t, e, r, n) {
        return e === d.MEASURE_MODE_EXACTLY
          ? (this.layoutText(t),
            { height: this.style.flexGrow ? NaN : this.linesHeight })
          : e === d.MEASURE_MODE_AT_MOST || n === d.MEASURE_MODE_AT_MOST
          ? (this.layoutText(t, r),
            { height: this.linesHeight, width: Math.min(t, this.linesWidth) })
          : {};
      }),
      (i.resolveStyles = function() {
        var t = e.prototype.resolveStyles.call(this);
        return (
          this.parent &&
            'Text' === this.parent.name &&
            'relative' === this.parent.style.position &&
            ((t.top = t.top || this.parent.style.top),
            (t.bottom = t.bottom || this.parent.style.bottom),
            (t.position = t.position || 'relative')),
          this.src &&
            ((t.color = t.color || 'blue'),
            (t.textDecoration = t.textDecoration || 'underline')),
          t
        );
      }),
      (i.wrapHeight = function(t) {
        var e = this.props,
          r = e.orphans,
          n = e.widows,
          i = this.lines.length,
          o = t - this.paddingTop,
          a = this.lineIndexAtHeight(o);
        return i < r
          ? t
          : a < r || i < r + n
          ? 0
          : i === r + n
          ? this.heightAtLineIndex(r)
          : i - a < n
          ? t - this.heightAtLineIndex(n - 1)
          : t;
      }),
      (i.onNodeSplit = function(t, e) {
        var r = this.wrapHeight(t),
          n = this.lineIndexAtHeight(r);
        (e.marginTop = 0),
          (e.paddingTop = 0),
          (e.start = n),
          (e.attributedString = this.attributedString),
          (this.height = r),
          (this.marginBottom = 0),
          (this.paddingBottom = 0),
          (this.end = n);
      }),
      (i.clone = function() {
        var t = e.prototype.clone.call(this);
        return (
          (t.layoutEngine = this.layoutEngine),
          this.container &&
            !this.props.render &&
            (t.container = this.container.copy()),
          t
        );
      }),
      (i.render = (function() {
        var t = a(
          o.mark(function t() {
            var e,
              n,
              i,
              a,
              s,
              u = this;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      this.root.instance.save(),
                        this.applyTransformations(),
                        this.drawBackgroundColor(),
                        this.drawBorders(),
                        this.computed ||
                          this.layoutText(
                            this.width - this.padding.left - this.padding.right,
                            this.height -
                              this.padding.top -
                              this.padding.bottom,
                          ),
                        (e = this.getAbsoluteLayout()),
                        (n = e.top),
                        (i = e.left),
                        (a = this.lines[0] ? this.lines[0].rect.y : 0),
                        this.lines.forEach(function(t) {
                          (t.rect.x += i + u.padding.left),
                            (t.rect.y += n + u.padding.top - a);
                        }),
                        (s = r({}, this.container, {
                          blocks: [{ lines: this.lines }],
                        })),
                        new Ne(this.root.instance, Fe).render(s),
                        this.props.debug && this.debug(),
                        this.root.instance.restore();
                    case 12:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(n, [
        {
          key: 'name',
          get: function() {
            return 'Text';
          },
        },
        {
          key: 'src',
          get: function() {
            return Jt(this.props.src || this.props.href);
          },
        },
        {
          key: 'lines',
          get: function() {
            return this.container
              ? this.container.blocks
                  .reduce(function(t, e) {
                    return [].concat(t, e.lines);
                  }, [])
                  .splice(this.start, this.end)
              : [];
          },
        },
        {
          key: 'linesHeight',
          get: function() {
            return this.container
              ? this.lines.reduce(function(t, e) {
                  return t + e.height;
                }, 0)
              : -1;
          },
        },
        {
          key: 'linesWidth',
          get: function() {
            return this.container
              ? Math.max.apply(
                  Math,
                  this.lines.map(function(t) {
                    return t.advanceWidth;
                  }),
                )
              : -1;
          },
        },
      ]),
      n
    );
  })(Rt);
Ge.defaultProps = { wrap: !0, widows: 2, orphans: 2 };
var je = (function(e) {
    function r() {
      return e.apply(this, arguments) || this;
    }
    return (
      t(r, e),
      (r.prototype.render = (function() {
        var t = a(
          o.mark(function t() {
            var e, r, n, i, a;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      return (
                        (e = this.getAbsoluteLayout()),
                        (r = e.top),
                        (n = e.left),
                        (i = e.width),
                        (a = e.height),
                        this.root.instance.link(n, r, i, a, this.src),
                        (t.next = 4),
                        this.renderChildren()
                      );
                    case 4:
                      this.props.debug && this.debug();
                    case 5:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(r, [
        {
          key: 'name',
          get: function() {
            return 'Link';
          },
        },
        {
          key: 'src',
          get: function() {
            return Jt(this.props.src || this.props.href);
          },
        },
      ]),
      r
    );
  })(Rt),
  Ue = (function(e) {
    function r() {
      return e.apply(this, arguments) || this;
    }
    t(r, e);
    var n = r.prototype;
    return (
      (n.appendChild = function(t) {
        if ('TextInstance' !== t.name)
          throw new Error('Note only accepts string children');
        t && ((t.parent = this), this.children.push(t));
      }),
      (n.removeChild = function(t) {
        var e = this.children.indexOf(t);
        -1 !== e && ((t.parent = null), this.children.splice(e, 1));
      }),
      (n.applyProps = function() {
        e.prototype.applyProps.call(this), (this.height = 0), (this.width = 0);
      }),
      (n.render = (function() {
        var t = a(
          o.mark(function t() {
            var e, r, n, i;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      (e = this.getAbsoluteLayout()),
                        (r = e.top),
                        (n = e.left),
                        (i = this.children[0] ? this.children[0].value : ''),
                        this.root.instance.note(n, r, 0, 0, i);
                    case 3:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(r, [
        {
          key: 'name',
          get: function() {
            return 'Note';
          },
        },
      ]),
      r
    );
  })(Rt);
Ue.defaultProps = {};
var He = function(t) {
    return !isNaN(parseFloat(t)) && isFinite(t);
  },
  Ve = function(t, e, r, n, i, o) {
    var a = t / e,
      s = r / n,
      u = G(i),
      h = G(o),
      c = u ? u.percent : 0.5,
      l = h ? h.percent : 0.5;
    if (a > s) {
      var d = e,
        f = d * s,
        p = He(o) ? o : 0;
      return {
        width: f,
        height: d,
        xOffset: He(i) ? i : (t - f) * c,
        yOffset: p,
      };
    }
    var g = t,
      m = g / s,
      y = He(i) ? i : 0;
    return {
      width: g,
      height: m,
      yOffset: He(o) ? o : (e - m) * l,
      xOffset: y,
    };
  },
  Xe = function(t, e, r, n, i, o) {
    var a = r,
      s = n,
      u = G(i),
      h = G(o),
      c = u ? u.percent : 0.5,
      l = h ? h.percent : 0.5;
    return {
      width: a,
      height: s,
      xOffset: He(i) ? i : (t - a) * c,
      yOffset: He(o) ? o : (e - s) * l,
    };
  },
  Ye = function(t, e, r, n, i, o, a) {
    switch ((void 0 === t && (t = 'fill'), t)) {
      case 'contain':
        return Ve(e, r, n, i, o, a);
      case 'cover':
        return (function(t, e, r, n, i, o) {
          var a = r / n,
            s = t / e,
            u = G(i),
            h = G(o),
            c = u ? u.percent : 0.5,
            l = h ? h.percent : 0.5;
          if (s > a) {
            var d = t,
              f = d / a,
              p = He(i) ? i : 0;
            return {
              width: d,
              height: f,
              yOffset: He(o) ? o : (e - f) * l,
              xOffset: p,
            };
          }
          var g = e * a;
          return {
            width: g,
            height: e,
            xOffset: He(i) ? i : (t - g) * c,
            yOffset: He(o) ? o : 0,
          };
        })(e, r, n, i, o, a);
      case 'none':
        return Xe(e, r, n, i, o, a);
      case 'scale-down':
        return (function(t, e, r, n, i, o) {
          var a = Ve(t, e, r, n, i, o),
            s = Xe(t, e, r, n, i, o);
          return a.width < s.width ? a : s;
        })(e, r, n, i, o, a);
      default:
        return (function(t, e, r, n) {
          return {
            width: t,
            height: e,
            xOffset: G(r) ? 0 : r || 0,
            yOffset: G(n) ? 0 : n || 0,
          };
        })(e, r, o, a);
    }
  },
  Je = (function(e) {
    function r(t, r) {
      var n;
      return (
        ((n = e.call(this, t, r) || this).image = null),
        n.layout.setMeasureFunc(n.measureImage.bind(v(n))),
        n
      );
    }
    t(r, e);
    var n = r.prototype;
    return (
      (n.shouldGrow = function() {
        return !!this.style.flexGrow;
      }),
      (n.measureImage = function(t, e, r, n) {
        var i = this.margin,
          o = this.page.padding,
          a = this.page.size.height - o.top - o.bottom - i.top - i.bottom - 10;
        if (!this.image) return { width: 0, height: 0 };
        if (e === d.MEASURE_MODE_EXACTLY && n === d.MEASURE_MODE_UNDEFINED) {
          var s = t / this.ratio;
          return { height: Math.min(a, s) };
        }
        if (
          n === d.MEASURE_MODE_EXACTLY &&
          (e === d.MEASURE_MODE_AT_MOST || e === d.MEASURE_MODE_UNDEFINED)
        )
          return { width: Math.min(r * this.ratio, t) };
        if (e === d.MEASURE_MODE_EXACTLY && n === d.MEASURE_MODE_AT_MOST) {
          var u = t / this.ratio;
          return { height: Math.min(r, a, u) };
        }
        return e === d.MEASURE_MODE_AT_MOST && n === d.MEASURE_MODE_AT_MOST
          ? this.ratio > 1
            ? { width: t, height: Math.min(t / this.ratio, r) }
            : { width: Math.min(r * this.ratio, t), height: r }
          : { height: r, width: t };
      }),
      (n.fetch = (function() {
        var t = a(
          o.mark(function t() {
            var e, r, n, i;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      if (
                        ((e = this.props),
                        (r = e.cache),
                        (n = e.safePath),
                        (i = e.allowDangerousPaths),
                        this.src)
                      ) {
                        t.next = 4;
                        break;
                      }
                      return (
                        z(
                          !1,
                          'Image should receive either a "src" or "source" prop',
                        ),
                        t.abrupt('return')
                      );
                    case 4:
                      return (
                        (t.prev = 4),
                        (t.next = 7),
                        Ae(this.src, {
                          cache: r,
                          safePath: n,
                          allowDangerousPaths: i,
                        })
                      );
                    case 7:
                      (this.image = t.sent), (t.next = 14);
                      break;
                    case 10:
                      (t.prev = 10),
                        (t.t0 = t.catch(4)),
                        (this.image = { width: 0, height: 0 }),
                        console.warn(t.t0.message);
                    case 14:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
              [[4, 10]],
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      (n.clone = function() {
        var t = e.prototype.clone.call(this);
        return (t.image = this.image), t;
      }),
      (n.onAppendDynamically = (function() {
        var t = a(
          o.mark(function t() {
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      return (t.next = 2), this.fetch();
                    case 2:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      (n.renderImage = function() {
        var t = this.padding,
          e = this.getAbsoluteLayout(),
          r = e.left,
          n = e.top,
          i = this.style,
          o = i.opacity,
          a = i.objectPositionX,
          s = i.objectPositionY;
        if ((this.root.instance.save(), this.clip(), this.image.data)) {
          var u = Ye(
              this.style.objectFit,
              this.width - t.left - t.right,
              this.height - t.top - t.bottom,
              this.image.width,
              this.image.height,
              a,
              s,
            ),
            h = u.width,
            c = u.height,
            l = u.xOffset,
            d = u.yOffset;
          0 !== h && 0 !== c
            ? this.root.instance
                .fillOpacity(o)
                .image(this.image.data, r + t.left + l, n + t.top + d, {
                  width: h,
                  height: c,
                })
            : z(
                !1,
                "Image with src '" +
                  this.props.src +
                  "' skipped due to invalid dimensions",
              );
        }
        this.root.instance.restore();
      }),
      (n.render = (function() {
        var t = a(
          o.mark(function t() {
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      this.root.instance.save(),
                        this.applyTransformations(),
                        this.drawBackgroundColor(),
                        this.renderImage(),
                        this.drawBorders(),
                        this.props.debug && this.debug(),
                        this.root.instance.restore();
                    case 7:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(r, [
        {
          key: 'name',
          get: function() {
            return 'Image';
          },
        },
        {
          key: 'ratio',
          get: function() {
            return this.image.data ? this.image.width / this.image.height : 1;
          },
        },
        {
          key: 'src',
          get: function() {
            var t = this.props.src || this.props.source;
            return 'string' == typeof t ? { uri: t } : t;
          },
        },
      ]),
      r
    );
  })(Rt);
function qe(t, e) {
  var r;
  if ('undefined' == typeof Symbol || null == t[Symbol.iterator]) {
    if (
      Array.isArray(t) ||
      (r = (function(t, e) {
        if (!t) return;
        if ('string' == typeof t) return Ke(t, e);
        var r = Object.prototype.toString.call(t).slice(8, -1);
        'Object' === r && t.constructor && (r = t.constructor.name);
        if ('Map' === r || 'Set' === r) return Array.from(t);
        if (
          'Arguments' === r ||
          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
        )
          return Ke(t, e);
      })(t)) ||
      (e && t && 'number' == typeof t.length)
    ) {
      r && (t = r);
      var n = 0;
      return function() {
        return n >= t.length ? { done: !0 } : { done: !1, value: t[n++] };
      };
    }
    throw new TypeError(
      'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
    );
  }
  return (r = t[Symbol.iterator]()).next.bind(r);
}
function Ke(t, e) {
  (null == e || e > t.length) && (e = t.length);
  for (var r = 0, n = new Array(e); r < e; r++) n[r] = t[r];
  return n;
}
Je.defaultProps = { wrap: !1, cache: !0, style: {} };
var $e = (function() {
  function t(t, e) {
    (this.root = t),
      (this.style = {}),
      (this.props = e),
      (this.children = []),
      (this.subpages = []);
  }
  var e = t.prototype;
  return (
    (e.appendChild = function(t) {
      (t.parent = this), this.children.push(t);
    }),
    (e.removeChild = function(t) {
      var e = this.children.indexOf(t);
      (t.parent = null), this.children.slice(e, 1);
    }),
    (e.addMetaData = function() {
      var t = this.props,
        e = t.title,
        r = t.author,
        n = t.subject,
        i = t.keywords,
        o = t.creator,
        a = t.producer;
      e && (this.root.instance.info.Title = e),
        r && (this.root.instance.info.Author = r),
        n && (this.root.instance.info.Subject = n),
        i && (this.root.instance.info.Keywords = i),
        (this.root.instance.info.Creator = o || 'react-pdf'),
        (this.root.instance.info.Producer = a || 'react-pdf');
    }),
    (e.loadFontsAndEmojis = (function() {
      var t = a(
        o.mark(function t() {
          var e,
            n,
            i,
            a = this;
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    for (
                      e = [],
                        n = this.children.map(function(t) {
                          return [t, {}];
                        }),
                        i = function() {
                          var t = n.shift(),
                            i = t[0],
                            o = t[1].parentStyle,
                            s = void 0 === o ? {} : o;
                          'string' == typeof i
                            ? e.push.apply(
                                e,
                                Oe(i).concat([Xt.load(s, a.root.instance, i)]),
                              )
                            : 'string' == typeof i.value
                            ? e.push.apply(
                                e,
                                Oe(i.value).concat([
                                  Xt.load(
                                    i.style || s,
                                    a.root.instance,
                                    i.value,
                                  ),
                                ]),
                              )
                            : i.children &&
                              i.children.forEach(function(t) {
                                n.push([t, { parentStyle: r({}, s, i.style) }]);
                              });
                        };
                      n.length > 0;

                    )
                      i();
                    return (t.next = 6), Promise.all(e);
                  case 6:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    (e.loadImages = (function() {
      var t = a(
        o.mark(function t() {
          var e, r, n;
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    for (e = [], r = this.children.slice(0); r.length > 0; )
                      'Image' === (n = r.shift()).name && e.push(n.fetch()),
                        n.children &&
                          n.children.forEach(function(t) {
                            r.push(t);
                          });
                    return (t.next = 5), Promise.all(e);
                  case 5:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    (e.loadAssets = (function() {
      var t = a(
        o.mark(function t() {
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    return (
                      (t.next = 2),
                      Promise.all([
                        this.loadFontsAndEmojis(),
                        this.loadImages(),
                      ])
                    );
                  case 2:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    (e.applyProps = function() {
      this.children.forEach(function(t) {
        return t.applyProps();
      });
    }),
    (e.update = function(t) {
      this.props = t;
    }),
    (e.getLayoutData = function() {
      return {
        type: this.name,
        children: this.subpages.map(function(t) {
          return t.getLayoutData();
        }),
      };
    }),
    (e.wrapPages = (function() {
      var t = a(
        o.mark(function t() {
          var e, r, n, i, a, s, u;
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    (e = 1), (r = []), (n = qe(this.children));
                  case 3:
                    if ((i = n()).done) {
                      t.next = 18;
                      break;
                    }
                    if (
                      ((a = i.value),
                      (s = a.size.height - (a.style.paddingBottom || 0)),
                      !a.wrap)
                    ) {
                      t.next = 14;
                      break;
                    }
                    return (t.next = 9), W(a, s, e);
                  case 9:
                    (u = t.sent),
                      (e += u.length),
                      r.push.apply(r, u),
                      (t.next = 16);
                    break;
                  case 14:
                    (a.height = a.size.height), r.push(a);
                  case 16:
                    t.next = 3;
                    break;
                  case 18:
                    return t.abrupt('return', r);
                  case 19:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    (e.renderPages = (function() {
      var t = a(
        o.mark(function t() {
          var e;
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    return (t.next = 2), this.wrapPages();
                  case 2:
                    (this.subpages = t.sent), (e = 0);
                  case 4:
                    if (!(e < this.subpages.length)) {
                      t.next = 11;
                      break;
                    }
                    return (
                      this.subpages[e].renderDynamicNodes(
                        { pageNumber: e + 1, totalPages: this.subpages.length },
                        function(t) {
                          return 'Text' === t.name;
                        },
                      ),
                      (t.next = 8),
                      this.subpages[e].render()
                    );
                  case 8:
                    e++, (t.next = 4);
                    break;
                  case 11:
                    return t.abrupt('return', this.subpages);
                  case 12:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    (e.render = (function() {
      var t = a(
        o.mark(function t() {
          return o.wrap(
            function(t) {
              for (;;)
                switch ((t.prev = t.next)) {
                  case 0:
                    return (
                      (t.prev = 0),
                      this.addMetaData(),
                      this.applyProps(),
                      (t.next = 5),
                      this.loadAssets()
                    );
                  case 5:
                    return (t.next = 7), this.renderPages();
                  case 7:
                    this.root.instance.end(), Xt.reset(), (t.next = 14);
                    break;
                  case 11:
                    throw ((t.prev = 11), (t.t0 = t.catch(0)), t.t0);
                  case 14:
                  case 'end':
                    return t.stop();
                }
            },
            t,
            this,
            [[0, 11]],
          );
        }),
      );
      return function() {
        return t.apply(this, arguments);
      };
    })()),
    h(t, [
      {
        key: 'name',
        get: function() {
          return 'Document';
        },
      },
    ]),
    t
  );
})();
$e.defaultProps = { author: null, keywords: null, subject: null, title: null };
var Ze = [
    'dash',
    'clip',
    'save',
    'path',
    'fill',
    'font',
    'text',
    'rect',
    'scale',
    'moveTo',
    'lineTo',
    'stroke',
    'rotate',
    'circle',
    'lineCap',
    'opacity',
    'ellipse',
    'polygon',
    'restore',
    'lineJoin',
    'fontSize',
    'fillColor',
    'lineWidth',
    'translate',
    'miterLimit',
    'strokeColor',
    'fillOpacity',
    'roundedRect',
    'strokeOpacity',
    'bezierCurveTo',
    'quadraticCurveTo',
    'linearGradient',
    'radialGradient',
  ],
  Qe = function(t) {
    var e = Ze.reduce(function(n, i) {
      var o;
      return r(
        {},
        n,
        (((o = {})[i] = function() {
          return t[i].apply(t, arguments), e;
        }),
        o),
      );
    }, {});
    return e;
  },
  tr = (function(e) {
    function r() {
      return e.apply(this, arguments) || this;
    }
    return (
      t(r, e),
      (r.prototype.render = (function() {
        var t = a(
          o.mark(function t() {
            var e, r, n, i, a, s, u;
            return o.wrap(
              function(t) {
                for (;;)
                  switch ((t.prev = t.next)) {
                    case 0:
                      (e = this.getAbsoluteLayout()),
                        (r = e.left),
                        (n = e.top),
                        (i = e.width),
                        (a = e.height),
                        (s = i - this.paddingLeft - this.paddingRight),
                        (u = a - this.paddingTop - this.paddingBottom),
                        z(
                          s && u,
                          'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',
                        ),
                        this.root.instance.save(),
                        this.applyTransformations(),
                        this.drawBackgroundColor(),
                        this.drawBorders(),
                        this.clip(),
                        this.root.instance.translate(
                          r + this.paddingLeft,
                          n + this.paddingTop,
                        ),
                        this.props.paint &&
                          this.props.paint(Qe(this.root.instance), s, u),
                        this.root.instance.restore(),
                        this.props.debug && this.debug();
                    case 13:
                    case 'end':
                      return t.stop();
                  }
              },
              t,
              this,
            );
          }),
        );
        return function() {
          return t.apply(this, arguments);
        };
      })()),
      h(r, [
        {
          key: 'name',
          get: function() {
            return 'Canvas';
          },
        },
      ]),
      r
    );
  })(Rt);
tr.defaultProps = { style: {}, wrap: !1 };
var er = {
  ROOT: F,
  PAGE: Ot,
  TEXT: Ge,
  LINK: je,
  VIEW: It,
  NOTE: Ue,
  IMAGE: Je,
  CANVAS: tr,
  DOCUMENT: $e,
  TEXT_INSTANCE: Mt,
};
function rr(t, e) {
  var r = t.type,
    n = t.props,
    i = void 0 === n ? {} : n;
  if (er[r]) return new er[r](e, i);
  throw new Error('Invalid element of type ' + r + ' passed to PDF renderer');
}
var nr = {},
  ir = u({
    supportsMutation: !0,
    appendInitialChild: function(t, e) {
      t.appendChild(e);
    },
    createInstance: function(t, e, r) {
      return rr(
        {
          type: (function(t, e) {
            return (
              'LINK' === t &&
              ('string' == typeof e.children ||
                'number' == typeof e.children ||
                Array.isArray(e.children) ||
                e.render)
            );
          })(t, e)
            ? 'TEXT'
            : t,
          props: e,
        },
        r,
      );
    },
    createTextInstance: function(t, e) {
      return rr({ type: 'TEXT_INSTANCE', props: t }, e);
    },
    finalizeInitialChildren: function(t, e, r) {
      return !1;
    },
    getPublicInstance: function(t) {
      return t;
    },
    prepareForCommit: function() {},
    prepareUpdate: function(t, e, r, n) {
      return !(function t(e, r) {
        var n = Object.keys(e),
          i = Object.keys(r);
        if (n.length !== i.length) return !1;
        for (var o = 0; o < n.length; o++) {
          var a = n[o];
          if ('render' !== a) {
            if ('children' !== a && e[a] !== r[a]) {
              if (
                'object' == typeof e[a] &&
                'object' == typeof r[a] &&
                t(e[a], r[a])
              )
                continue;
              return !1;
            }
            if (
              'children' === a &&
              ('string' == typeof e[a] || 'string' == typeof r[a])
            )
              return e[a] === r[a];
          } else if (!e[a] != !r[a]) return !1;
        }
        return !0;
      })(r, n);
    },
    resetAfterCommit: function() {},
    resetTextContent: function(t) {},
    getRootHostContext: function() {
      return nr;
    },
    getChildHostContext: function() {
      return nr;
    },
    shouldSetTextContent: function(t, e) {
      return !1;
    },
    now: Date.now,
    useSyncScheduling: !0,
    appendChild: function(t, e) {
      t.appendChild(e);
    },
    appendChildToContainer: function(t, e) {
      t.appendChild(e);
    },
    insertBefore: function(t, e, r) {
      t.appendChildBefore(e, r);
    },
    removeChild: function(t, e) {
      t.removeChild(e);
    },
    removeChildFromContainer: function(t, e) {
      t.removeChild(e);
    },
    commitTextUpdate: function(t, e, r) {
      t.update(r);
    },
    commitUpdate: function(t, e, r, n, i) {
      t.update(i);
    },
  }),
  or = '1.4.2',
  ar = 'VIEW',
  sr = 'TEXT',
  ur = 'LINK',
  hr = 'PAGE',
  cr = 'NOTE',
  lr = 'IMAGE',
  dr = 'CANVAS',
  fr = function(t) {
    var e = rr({ type: 'ROOT' }),
      n = ir.createContainer(e);
    function i(t) {
      if ((void 0 === t && (t = {}), e.document.props.onRender)) {
        var n = e.document.getLayoutData();
        e.document.props.onRender(r({}, t, { layoutData: n }));
      }
    }
    function u(t) {
      ir.updateContainer(t, n, null);
    }
    function h() {
      return (h = a(
        o.mark(function t() {
          var r;
          return o.wrap(function(t) {
            for (;;)
              switch ((t.prev = t.next)) {
                case 0:
                  return (t.next = 2), e.render();
                case 2:
                  return (
                    (r = e.instance.pipe(s())),
                    t.abrupt(
                      'return',
                      new Promise(function(t, e) {
                        r.on('finish', function() {
                          try {
                            var n = r.toBlob('application/pdf');
                            i({ blob: n }), t(n);
                          } catch (t) {
                            e(t);
                          }
                        }),
                          r.on('error', e);
                      }),
                    )
                  );
                case 4:
                case 'end':
                  return t.stop();
              }
          }, t);
        }),
      )).apply(this, arguments);
    }
    return (
      t && u(t),
      {
        isDirty: function() {
          return e.isDirty;
        },
        updateContainer: u,
        toBuffer: function() {
          return i(), e.render(), e.instance;
        },
        toBlob: function() {
          return h.apply(this, arguments);
        },
        toString: function() {
          var t = '';
          return (
            e.render(),
            new Promise(function(r, n) {
              try {
                e.instance.on('data', function(e) {
                  t += e;
                }),
                  e.instance.on('end', function() {
                    i({ string: t }), r(t);
                  });
              } catch (t) {
                n(t);
              }
            })
          );
        },
      }
    );
  },
  pr = function(t) {
    return t.reduce(function(t, e) {
      return r({}, t, e);
    }, {});
  },
  gr = function(t) {
    var r = t.children,
      i = e(t, ['children']);
    return n.createElement('DOCUMENT', i, r);
  },
  mr = (function(e) {
    function r(t) {
      var r;
      return (
        ((r = e.call(this, t) || this).state = {
          blob: null,
          url: null,
          loading: !0,
          error: null,
        }),
        (r.instance = fr()),
        r
      );
    }
    t(r, e);
    var n = r.prototype;
    return (
      (n.componentDidMount = function() {
        this.renderDocument(), this.onDocumentUpdate();
      }),
      (n.componentDidUpdate = function() {
        this.renderDocument(),
          this.instance.isDirty() &&
            !this.state.error &&
            this.onDocumentUpdate();
      }),
      (n.renderDocument = function() {
        this.instance.updateContainer(this.props.document);
      }),
      (n.onDocumentUpdate = function() {
        var t = this,
          e = this.state.url;
        this.instance
          .toBlob()
          .then(function(r) {
            t.setState(
              { blob: r, url: URL.createObjectURL(r), loading: !1 },
              function() {
                return URL.revokeObjectURL(e);
              },
            );
          })
          .catch(function(e) {
            throw (t.setState({ error: e }), console.error(e), e);
          });
      }),
      (n.render = function() {
        return this.props.children(this.state);
      }),
      r
    );
  })(n.PureComponent),
  yr = function(t) {
    var e = t.document,
      r = t.children;
    return e
      ? n.createElement(mr, { document: e }, r)
      : (z(!1, 'You should pass a valid document to BlobProvider'), null);
  },
  vr = function(t) {
    var i = t.className,
      o = t.style,
      a = t.children,
      s = t.innerRef,
      u = e(t, ['className', 'style', 'children', 'innerRef']);
    return n.createElement(mr, { document: a }, function(t) {
      var e = t.url;
      return n.createElement(
        'iframe',
        r(
          { className: i, ref: s, src: e, style: Array.isArray(o) ? pr(o) : o },
          u,
        ),
      );
    });
  },
  br = function(t) {
    var e = t.document,
      r = t.className,
      i = t.style,
      o = t.children,
      a = t.fileName,
      s = void 0 === a ? 'document.pdf' : a;
    if (!e)
      return z(!1, 'You should pass a valid document to PDFDownloadLink'), null;
    return n.createElement(mr, { document: e }, function(t) {
      return n.createElement(
        'a',
        {
          className: r,
          download: s,
          href: t.url,
          onClick:
            ((e = t.blob),
            function() {
              window.navigator.msSaveBlob && window.navigator.msSaveBlob(e, s);
            }),
          style: Array.isArray(i) ? pr(i) : i,
        },
        'function' == typeof o ? o(t) : o,
      );
      var e;
    });
  };
export default {
  pdf: fr,
  View: 'VIEW',
  Text: 'TEXT',
  Link: 'LINK',
  Page: 'PAGE',
  Font: Xt,
  Note: 'NOTE',
  Image: 'IMAGE',
  Canvas: 'CANVAS',
  version: '1.4.2',
  Document: gr,
  PDFViewer: vr,
  StyleSheet: at,
  PDFRenderer: ir,
  BlobProvider: yr,
  createInstance: rr,
  PDFDownloadLink: br,
};
export {
  yr as BlobProvider,
  dr as Canvas,
  gr as Document,
  Xt as Font,
  lr as Image,
  ur as Link,
  cr as Note,
  br as PDFDownloadLink,
  ir as PDFRenderer,
  vr as PDFViewer,
  hr as Page,
  at as StyleSheet,
  sr as Text,
  ar as View,
  rr as createInstance,
  fr as pdf,
  or as version,
};
//# sourceMappingURL=react-pdf.browser.es.min.js.map
