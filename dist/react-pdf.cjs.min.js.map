{"version":3,"file":"react-pdf.cjs.min.js","sources":["../src/elements/Root.js","../src/utils/upperFirst.js","../src/utils/matchPercent.js","../src/elements/Node.js","../src/stylesheet/yogaValue.js","../src/stylesheet/transformUnits.js","../src/stylesheet/borders.js","../src/stylesheet/boxModel.js","../src/stylesheet/transformFontWeight.js","../src/stylesheet/objectPosition.js","../src/stylesheet/transformOrigin.js","../src/stylesheet/transformStyles.js","../src/stylesheet/index.js","../src/mixins/debug.js","../src/mixins/borders.js","../src/mixins/clipping.js","../src/mixins/transform.js","../src/utils/warning.js","../src/stylesheet/inherit.js","../src/elements/Base.js","../src/mixins/ruler.js","../src/elements/TextInstance.js","../src/utils/pageSizes.js","../src/elements/Page.js","../src/elements/View.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/font/index.js","../src/utils/url.js","../src/layout/fontSubstitution/standardFont.js","../src/layout/fontSubstitution/index.js","../src/layout/wordHyphenation/index.js","../src/layout/linebreaker/linkedList.js","../src/layout/linebreaker/linebreak.js","../src/layout/linebreaker/bestFit.js","../src/layout/linebreaker/index.js","../src/layout/index.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/gif/server.js","../src/utils/gif/gif.js","../src/utils/cache.js","../src/utils/image.js","../src/utils/emoji.js","../src/utils/ignorableChars.js","../src/utils/attributedString.js","../src/elements/Text.js","../src/elements/Link.js","../src/elements/Note.js","../src/utils/objectFit.js","../src/elements/Image.js","../src/elements/Document.js","../src/utils/painter.js","../src/elements/Canvas.js","../src/elements/index.js","../src/utils/propsEqual.js","../src/renderer.js","../src/index.js","../src/node.js"],"sourcesContent":["import PDFDocument from '@react-pdf/pdfkit';\n\nclass Root {\n  constructor() {\n    this.isDirty = false;\n    this.document = null;\n    this.instance = null;\n  }\n\n  get name() {\n    return 'Root';\n  }\n\n  appendChild(child) {\n    this.document = child;\n  }\n\n  removeChild() {\n    this.document = null;\n  }\n\n  markDirty() {\n    this.isDirty = true;\n  }\n\n  async render() {\n    this.instance = new PDFDocument({ autoFirstPage: false });\n    await this.document.render();\n    this.isDirty = false;\n  }\n}\n\nexport default Root;\n","const upperFirst = value => value.charAt(0).toUpperCase() + value.slice(1);\n\nexport default upperFirst;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\nclass Node {\n  constructor() {\n    this.parent = null;\n    this.children = [];\n    this.computed = false;\n    this.layout = Yoga.Node.createDefault();\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.layout.insertChild(child.layout, this.layout.getChildCount());\n    }\n  }\n\n  appendChildBefore(child, beforeChild) {\n    const index = this.children.indexOf(beforeChild);\n\n    if (index !== -1 && child) {\n      child.parent = this;\n      this.children.splice(index, 0, child);\n      this.layout.insertChild(child.layout, index);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.layout.removeChild(child.layout);\n    }\n  }\n\n  removeAllChilds() {\n    const children = [...this.children];\n    for (let i = 0; i < children.length; i++) {\n      children[i].remove();\n    }\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  setDimension(attr, value) {\n    const fixedMethod = `set${upperFirst(attr)}`;\n    const percentMethod = `${fixedMethod}Percent`;\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout[percentMethod](percent.value);\n    } else {\n      this.layout[fixedMethod](value);\n    }\n  }\n\n  setPosition(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPositionPercent(edge, percent.value);\n    } else {\n      this.layout.setPosition(edge, value);\n    }\n  }\n\n  setPadding(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setPaddingPercent(edge, percent.value);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  setMargin(edge, value) {\n    const percent = matchPercent(value);\n\n    if (percent) {\n      this.layout.setMarginPercent(edge, percent.value);\n    } else {\n      this.layout.setMargin(edge, value);\n    }\n  }\n\n  setBorder(edge, value) {\n    if (matchPercent(value)) {\n      throw new Error('Node: You cannot set percentage border widths');\n    }\n    this.layout.setBorder(edge, value);\n  }\n\n  getAbsoluteLayout() {\n    const parent = this.parent;\n    const parentLayout =\n      parent && parent.getAbsoluteLayout\n        ? parent.getAbsoluteLayout()\n        : { left: 0, top: 0 };\n\n    return {\n      left: this.left + parentLayout.left,\n      top: this.top + parentLayout.top,\n      height: this.height,\n      width: this.width,\n    };\n  }\n\n  copyStyle(node) {\n    this.layout.copyStyle(node.layout);\n  }\n\n  calculateLayout() {\n    this.layout.calculateLayout();\n    this.computed = true;\n  }\n\n  isEmpty() {\n    return this.children.length === 0;\n  }\n\n  markDirty() {\n    return this.layout.markDirty();\n  }\n\n  onAppendDynamically() {}\n\n  get position() {\n    return this.layout.getPositionType() === Yoga.POSITION_TYPE_ABSOLUTE\n      ? 'absolute'\n      : 'relative';\n  }\n\n  get top() {\n    return this.layout.getComputedTop() || 0;\n  }\n\n  get left() {\n    return this.layout.getComputedLeft() || 0;\n  }\n\n  get right() {\n    return this.layout.getComputedRight() || 0;\n  }\n\n  get bottom() {\n    return this.layout.getComputedBottom() || 0;\n  }\n\n  get width() {\n    return this.layout.getComputedWidth();\n  }\n\n  get minWidth() {\n    return this.layout.getMinWidth().value;\n  }\n\n  get maxWidth() {\n    return this.layout.getMaxWidth().value;\n  }\n\n  get height() {\n    return this.layout.getComputedHeight();\n  }\n\n  get minHeight() {\n    return this.layout.getMinHeight().value;\n  }\n\n  get maxHeight() {\n    return this.layout.getMaxHeight().value;\n  }\n\n  get paddingTop() {\n    return this.layout.getComputedPadding(Yoga.EDGE_TOP) || 0;\n  }\n\n  get paddingRight() {\n    return this.layout.getComputedPadding(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get paddingBottom() {\n    return this.layout.getComputedPadding(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get paddingLeft() {\n    return this.layout.getComputedPadding(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get marginTop() {\n    return this.layout.getComputedMargin(Yoga.EDGE_TOP) || 0;\n  }\n\n  get marginRight() {\n    return this.layout.getComputedMargin(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get marginBottom() {\n    return this.layout.getComputedMargin(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get marginLeft() {\n    return this.layout.getComputedMargin(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get borderTopWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_TOP) || 0;\n  }\n\n  get borderRightWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_RIGHT) || 0;\n  }\n\n  get borderBottomWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_BOTTOM) || 0;\n  }\n\n  get borderLeftWidth() {\n    return this.layout.getComputedBorder(Yoga.EDGE_LEFT) || 0;\n  }\n\n  get padding() {\n    return {\n      top: this.paddingTop,\n      right: this.paddingRight,\n      bottom: this.paddingBottom,\n      left: this.paddingLeft,\n    };\n  }\n\n  get margin() {\n    return {\n      top: this.marginTop,\n      right: this.marginRight,\n      bottom: this.marginBottom,\n      left: this.marginLeft,\n    };\n  }\n\n  set position(value) {\n    this.layout.setPositionType(\n      value === 'absolute'\n        ? Yoga.POSITION_TYPE_ABSOLUTE\n        : Yoga.POSITION_TYPE_RELATIVE,\n    );\n  }\n\n  set top(value) {\n    this.setPosition(Yoga.EDGE_TOP, value);\n  }\n\n  set left(value) {\n    this.setPosition(Yoga.EDGE_LEFT, value);\n  }\n\n  set right(value) {\n    this.setPosition(Yoga.EDGE_RIGHT, value);\n  }\n\n  set bottom(value) {\n    this.setPosition(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set width(value) {\n    this.setDimension('width', value);\n  }\n\n  set minWidth(value) {\n    this.setDimension('minWidth', value);\n  }\n\n  set maxWidth(value) {\n    this.setDimension('maxWidth', value);\n  }\n\n  set height(value) {\n    this.setDimension('height', value);\n  }\n\n  set minHeight(value) {\n    this.setDimension('minHeight', value);\n  }\n\n  set maxHeight(value) {\n    this.setDimension('maxHeight', value);\n  }\n\n  set paddingTop(value) {\n    this.setPadding(Yoga.EDGE_TOP, value);\n  }\n\n  set paddingRight(value) {\n    this.setPadding(Yoga.EDGE_RIGHT, value);\n  }\n\n  set paddingBottom(value) {\n    this.setPadding(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set paddingLeft(value) {\n    this.setPadding(Yoga.EDGE_LEFT, value);\n  }\n\n  set marginTop(value) {\n    this.setMargin(Yoga.EDGE_TOP, value);\n  }\n\n  set marginRight(value) {\n    this.setMargin(Yoga.EDGE_RIGHT, value);\n  }\n\n  set marginBottom(value) {\n    this.setMargin(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set marginLeft(value) {\n    this.setMargin(Yoga.EDGE_LEFT, value);\n  }\n\n  set padding(value) {\n    this.paddingTop = value;\n    this.paddingRight = value;\n    this.paddingBottom = value;\n    this.paddingLeft = value;\n  }\n\n  set margin(value) {\n    this.marginTop = value;\n    this.marginRight = value;\n    this.marginBottom = value;\n    this.marginLeft = value;\n  }\n\n  set borderTopWidth(value) {\n    this.setBorder(Yoga.EDGE_TOP, value);\n  }\n\n  set borderRightWidth(value) {\n    this.setBorder(Yoga.EDGE_RIGHT, value);\n  }\n\n  set borderBottomWidth(value) {\n    this.setBorder(Yoga.EDGE_BOTTOM, value);\n  }\n\n  set borderLeftWidth(value) {\n    this.setBorder(Yoga.EDGE_LEFT, value);\n  }\n}\n\nexport default Node;\n","import Yoga from 'yoga-layout';\n\nconst yogaValue = (prop, value) => {\n  const isAlignType = prop =>\n    prop === 'alignItems' || prop === 'alignContent' || prop === 'alignSelf';\n\n  switch (value) {\n    case 'auto':\n      if (prop === 'alignSelf') {\n        return Yoga.ALIGN_AUTO;\n      }\n      break;\n    case 'flex':\n      return Yoga.DISPLAY_FLEX;\n    case 'none':\n      return Yoga.DISPLAY_NONE;\n    case 'row':\n      return Yoga.FLEX_DIRECTION_ROW;\n    case 'row-reverse':\n      return Yoga.FLEX_DIRECTION_ROW_REVERSE;\n    case 'column':\n      return Yoga.FLEX_DIRECTION_COLUMN;\n    case 'column-reverse':\n      return Yoga.FLEX_DIRECTION_COLUMN_REVERSE;\n    case 'stretch':\n      return Yoga.ALIGN_STRETCH;\n    case 'baseline':\n      return Yoga.ALIGN_BASELINE;\n    case 'space-around':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_AROUND;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_AROUND;\n      }\n      break;\n    case 'space-between':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_SPACE_BETWEEN;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_SPACE_BETWEEN;\n      }\n      break;\n    case 'around':\n      return Yoga.JUSTIFY_SPACE_AROUND;\n    case 'between':\n      return Yoga.JUSTIFY_SPACE_BETWEEN;\n    case 'wrap':\n      return Yoga.WRAP_WRAP;\n    case 'wrap-reverse':\n      return Yoga.WRAP_WRAP_REVERSE;\n    case 'nowrap':\n      return Yoga.WRAP_NO_WRAP;\n    case 'flex-start':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_START;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_START;\n      }\n      break;\n    case 'flex-end':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_FLEX_END;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_FLEX_END;\n      }\n      break;\n    case 'center':\n      if (prop === 'justifyContent') {\n        return Yoga.JUSTIFY_CENTER;\n      } else if (isAlignType(prop)) {\n        return Yoga.ALIGN_CENTER;\n      }\n      break;\n    default:\n      return value;\n  }\n};\n\n// These are not supported yet\n\n// ALIGN_AUTO: 0,\n// DIMENSION_WIDTH: 0,\n// DIMENSION_HEIGHT: 1,\n// DIRECTION_INHERIT: 0,\n// DIRECTION_LTR: 1,\n// DIRECTION_RTL: 2,\n// EDGE_LEFT: 0,\n// EDGE_TOP: 1,\n// EDGE_RIGHT: 2,\n// EDGE_BOTTOM: 3,\n// EDGE_START: 4,\n// EDGE_END: 5,\n// EDGE_HORIZONTAL: 6,\n// EDGE_VERTICAL: 7,\n// EDGE_ALL: 8,\n// MEASURE_MODE_UNDEFINED: 0,\n// MEASURE_MODE_EXACTLY: 1,\n// MEASURE_MODE_AT_MOST: 2,\n// NODE_TYPE_DEFAULT: 0,\n// NODE_TYPE_TEXT: 1,\n// OVERFLOW_VISIBLE: 0,\n// OVERFLOW_HIDDEN: 1,\n// OVERFLOW_SCROLL: 2,\n// POSITION_TYPE_RELATIVE: 0,\n// POSITION_TYPE_ABSOLUTE: 1,\n// PRINT_OPTIONS_LAYOUT: 1,\n// PRINT_OPTIONS_STYLE: 2,\n// PRINT_OPTIONS_CHILDREN: 4,\n// UNIT_UNDEFINED: 0,\n// UNIT_POINT: 1,\n// UNIT_PERCENT: 2,\n// UNIT_AUTO: 3,\n\nexport default yogaValue;\n","const parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt)?$/g.exec(value);\n\n  if (match) {\n    return { value: parseFloat(match[1], 10), unit: match[2] || 'pt' };\n  } else {\n    return { value, unit: undefined };\n  }\n};\n\nconst parseScalar = value => {\n  let result = {};\n  const scalar = parseValue(value);\n\n  switch (scalar.unit) {\n    case 'in':\n      result = scalar.value * 72;\n      break;\n    case 'mm':\n      result = scalar.value * (1 / 25.4) * 72;\n      break;\n    case 'cm':\n      result = scalar.value * (1 / 2.54) * 72;\n      break;\n    default:\n      result = scalar.value;\n  }\n\n  return result;\n};\n\nexport default parseScalar;\n","export const isBorderStyle = (key, value) =>\n  key.match(/^border/) && typeof value === 'string';\n\nconst matchBorderShorthand = value =>\n  value.match(/(\\d+(px|in|mm|cm|pt)?)\\s(\\S+)\\s(\\S+)/);\n\n// Transforms shorthand border values\nexport const processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst matchBoxModel = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand margin and padding values\nexport const processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nconst FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const isFontWeightStyle = key => key.match(/^fontWeight/);\n\nexport const processFontWeight = value => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n","export const isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst matchObjectPosition = value => value.match(/\\d+(px|in|mm|cm|pt|%)?/g);\n\n// Transforms shorthand objectPosition values\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n","export const isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst matchTransformOrigin = value =>\n  value.match(/(-?\\d+(px|in|mm|cm|pt|%)?)|top|right|bottom|left|center/g);\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nexport const processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n","import yogaValue from './yogaValue';\nimport parseScalar from './transformUnits';\nimport { isBorderStyle, processBorders } from './borders';\nimport { isBoxModelStyle, processBoxModel } from './boxModel';\nimport { isFontWeightStyle, processFontWeight } from './transformFontWeight';\nimport { isObjectPositionStyle, processObjectPosition } from './objectPosition';\nimport {\n  isTransformOriginStyle,\n  processTransformOrigin,\n} from './transformOrigin';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\n// Expand the shorthand properties to isolate every declaration from the others.\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    switch (key) {\n      case 'display':\n      case 'flex':\n      case 'flexDirection':\n      case 'flexWrap':\n      case 'flexFlow':\n      case 'flexGrow':\n      case 'flexShrink':\n      case 'flexBasis':\n      case 'justifyContent':\n      case 'alignSelf':\n      case 'alignItems':\n      case 'alignContent':\n      case 'order':\n        resolvedStyle[key] = yogaValue(key, value);\n        break;\n      case 'textAlignVertical':\n        resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n        break;\n      case 'margin':\n      case 'marginHorizontal':\n      case 'marginVertical':\n      case 'padding':\n      case 'paddingHorizontal':\n      case 'paddingVertical':\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n      case 'borderColor':\n      case 'borderRadius':\n      case 'borderStyle':\n      case 'borderWidth':\n      case 'objectPosition':\n      case 'transformOrigin':\n        {\n          const expandedProps = styleShorthands[key];\n          for (const propName in expandedProps) {\n            if (hasOwnProperty.call(expandedProps, propName)) {\n              resolvedStyle[propName] = value;\n            }\n          }\n        }\n        break;\n      default:\n        resolvedStyle[key] = value;\n        break;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nconst transformStyles = style => {\n  const expandedStyles = expandStyles(style);\n  const propsArray = Object.keys(expandedStyles);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = expandedStyles[key];\n\n    let resolved;\n    if (isBorderStyle(key, value)) {\n      resolved = processBorders(key, value);\n    } else if (isBoxModelStyle(key, value)) {\n      resolved = processBoxModel(key, value);\n    } else if (isObjectPositionStyle(key, value)) {\n      resolved = processObjectPosition(key, value);\n    } else if (isTransformOriginStyle(key, value)) {\n      resolved = processTransformOrigin(key, value);\n    } else if (isFontWeightStyle(key, value)) {\n      resolved = processFontWeight(value);\n    } else {\n      resolved = value;\n    }\n\n    resolvedStyle[key] = parseScalar(resolved);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import matchMedia from 'media-engine';\nimport transformStyles from './transformStyles';\n\nconst create = styles => styles;\n\nconst flatten = input => {\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  const result = input.reduce((acc, style) => {\n    if (style) {\n      const s = Array.isArray(style) ? flatten(style) : style;\n\n      Object.keys(s).forEach(key => {\n        if (s[key] !== null && s[key] !== undefined) {\n          acc[key] = s[key];\n        }\n      });\n    }\n\n    return acc;\n  }, {});\n\n  return result;\n};\n\nconst resolveMediaQueries = (input, container) => {\n  const result = Object.keys(input).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: input[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: input[key] };\n  }, {});\n\n  return result;\n};\n\nconst resolve = (styles, container) => {\n  if (!styles) return null;\n\n  styles = flatten(styles);\n  styles = resolveMediaQueries(styles, container);\n  styles = transformStyles(styles);\n\n  return styles;\n};\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  resolve,\n  flatten,\n  absoluteFillObject,\n};\n","const Debug = {\n  debug() {\n    const layout = this.getAbsoluteLayout();\n    const padding = this.padding;\n    const margin = this.margin;\n\n    this.root.instance.save();\n\n    this.debugContent(layout, margin, padding);\n    this.debugPadding(layout, margin, padding);\n    this.debugMargin(layout, margin);\n    this.debugText(layout, margin);\n    this.debugOrigin();\n\n    this.root.instance.restore();\n  },\n  debugOrigin() {\n    if (this.style.transform) {\n      const origin = this.origin;\n      this.root.instance\n        .circle(origin[0], origin[1], 3)\n        .fill('red')\n        .circle(origin[0], origin[1], 5)\n        .stroke('red');\n    }\n  },\n  debugText(layout, margin) {\n    const roundedWidth = Math.round(this.width + margin.left + margin.right);\n    const roundedHeight = Math.round(this.height + margin.top + margin.bottom);\n\n    this.root.instance\n      .fontSize(4)\n      .opacity(1)\n      .fillColor('black')\n      .text(\n        `${roundedWidth} x ${roundedHeight}`,\n        layout.left - margin.left,\n        Math.max(layout.top - margin.top - 4, 1),\n      );\n  },\n  debugContent(layout, margin, padding) {\n    this.root.instance\n      .fillColor('#a1c6e7')\n      .opacity(0.5)\n      .rect(\n        layout.left + padding.left,\n        layout.top + padding.top,\n        layout.width - padding.left - padding.right,\n        layout.height - padding.top - padding.bottom,\n      )\n      .fill();\n  },\n  debugPadding(layout, margin, padding) {\n    this.root.instance.fillColor('#c4deb9').opacity(0.5);\n\n    // Padding top\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top,\n        layout.width - padding.right - padding.left,\n        padding.top,\n      )\n      .fill();\n\n    // Padding left\n    this.root.instance\n      .rect(layout.left, layout.top, padding.left, layout.height)\n      .fill();\n\n    // Padding right\n    this.root.instance\n      .rect(\n        layout.left + layout.width - padding.right,\n        layout.top,\n        padding.right,\n        layout.height,\n      )\n      .fill();\n\n    // Padding bottom\n    this.root.instance\n      .rect(\n        layout.left + padding.left,\n        layout.top + layout.height - padding.bottom,\n        layout.width - padding.right - padding.left,\n        padding.bottom,\n      )\n      .fill();\n  },\n  debugMargin(layout, margin) {\n    this.root.instance.fillColor('#f8cca1').opacity(0.5);\n\n    // Margin top\n    this.root.instance\n      .rect(layout.left, layout.top - margin.top, layout.width, margin.top)\n      .fill();\n\n    // Margin left\n    this.root.instance\n      .rect(\n        layout.left - margin.left,\n        layout.top - margin.top,\n        margin.left,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin right\n    this.root.instance\n      .rect(\n        layout.left + layout.width,\n        layout.top - margin.top,\n        margin.right,\n        layout.height + margin.top + margin.bottom,\n      )\n      .fill();\n\n    // Margin bottom\n    this.root.instance\n      .rect(\n        layout.left,\n        layout.top + layout.height,\n        layout.width,\n        margin.bottom,\n      )\n      .fill();\n  },\n};\n\nexport default Debug;\n","// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nfunction drawBorders() {\n  const { instance } = this.root;\n  const layout = this.getAbsoluteLayout();\n\n  const {\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = this;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = this.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const { width, height } = layout;\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  instance.save();\n  instance.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    instance.save();\n    clipBorderTop(instance, layout, style, rtr, rtl);\n    fillBorderTop(instance, layout, style, rtr, rtl);\n    instance.restore();\n  }\n\n  if (borderRightWidth) {\n    instance.save();\n    clipBorderRight(instance, layout, style, rtr, rbr);\n    fillBorderRight(instance, layout, style, rtr, rbr);\n    instance.restore();\n  }\n\n  if (borderBottomWidth) {\n    instance.save();\n    clipBorderBottom(instance, layout, style, rbl, rbr);\n    fillBorderBottom(instance, layout, style, rbl, rbr);\n    instance.restore();\n  }\n\n  if (borderLeftWidth) {\n    instance.save();\n    clipBorderLeft(instance, layout, style, rbl, rtl);\n    fillBorderLeft(instance, layout, style, rbl, rtl);\n    instance.restore();\n  }\n\n  instance.restore();\n}\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nexport default { drawBorders };\n","// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst Clipping = {\n  clip() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n\n    const {\n      borderTopLeftRadius = 0,\n      borderTopRightRadius = 0,\n      borderBottomRightRadius = 0,\n      borderBottomLeftRadius = 0,\n    } = this.style;\n\n    // Border top\n    const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n    const ctr = rtr * (1.0 - KAPPA);\n\n    this.root.instance.moveTo(left + rtr, top);\n    this.root.instance.lineTo(left + width - rtr, top);\n    this.root.instance.bezierCurveTo(\n      left + width - ctr,\n      top,\n      left + width,\n      top + ctr,\n      left + width,\n      top + rtr,\n    );\n\n    // Border right\n    const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n    const cbr = rbr * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + width, top + height - rbr);\n    this.root.instance.bezierCurveTo(\n      left + width,\n      top + height - cbr,\n      left + width - cbr,\n      top + height,\n      left + width - rbr,\n      top + height,\n    );\n\n    // Border bottom\n    const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n    const cbl = rbl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left + rbl, top + height);\n    this.root.instance.bezierCurveTo(\n      left + cbl,\n      top + height,\n      left,\n      top + height - cbl,\n      left,\n      top + height - rbl,\n    );\n\n    // Border left\n    const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n    const ctl = rtl * (1.0 - KAPPA);\n\n    this.root.instance.lineTo(left, top + rtl);\n    this.root.instance.bezierCurveTo(\n      left,\n      top + ctl,\n      left + ctl,\n      top,\n      left + rtl,\n      top,\n    );\n    this.root.instance.closePath();\n    this.root.instance.clip();\n  },\n};\n\nexport default Clipping;\n","const getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (element, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    element.root.instance.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    element.root.instance.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    element.root.instance.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    element.root.instance.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    element.root.instance.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    element.root.instance.translate(\n      getTranslateX(transform),\n      getTranslateY(transform),\n      { origin },\n    );\n  } else if (/matrix/g.test(transform)) {\n    element.root.instance.transform(...getMatrix(transform));\n  }\n};\n\nconst Transformations = {\n  applyTransformations() {\n    let match;\n    const re = /[a-zA-Z]+\\([^)]+\\)/g;\n    const origin = this.origin;\n    const transform = (this.style && this.style.transform) || '';\n\n    while ((match = re.exec(transform)) != null) {\n      applySingleTransformation(this, match[0], origin);\n    }\n  },\n};\n\nexport default Transformations;\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","export const inheritedProperties = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n","import pick from 'lodash.pick';\nimport merge from 'lodash.merge';\nimport toPairsIn from 'lodash.topairsin';\nimport isFunction from 'lodash.isfunction';\n\nimport Node from './Node';\nimport StyleSheet from '../stylesheet';\nimport Debug from '../mixins/debug';\nimport Borders from '../mixins/borders';\nimport Clipping from '../mixins/clipping';\nimport Transform from '../mixins/transform';\nimport warning from '../utils/warning';\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\nimport { inheritedProperties } from '../stylesheet/inherit';\n\nclass Base extends Node {\n  constructor(root, props) {\n    super();\n\n    this.root = root;\n    this.style = {};\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      props,\n    );\n\n    warning(!this.props.styles, '\"styles\" prop passed instead of \"style\" prop');\n  }\n\n  get page() {\n    return this.parent.page;\n  }\n\n  get wrap() {\n    return this.props.wrap;\n  }\n\n  get break() {\n    return this.props.break;\n  }\n\n  get fixed() {\n    return this.props.fixed;\n  }\n\n  get minPresenceAhead() {\n    return this.props.minPresenceAhead;\n  }\n\n  get absolute() {\n    return this.props.style.position === 'absolute';\n  }\n\n  get origin() {\n    const { transformOriginX, transformOriginY } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const percentX = matchPercent(transformOriginX);\n    const percentY = matchPercent(transformOriginY);\n\n    const offsetX = percentX ? width * percentX.percent : transformOriginX;\n    const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n    return [left + offsetX, top + offsetY];\n  }\n\n  set break(value) {\n    this.props.break = value;\n  }\n\n  appendChild(child) {\n    super.appendChild(child);\n    this.root.markDirty();\n  }\n\n  appendChildBefore(child, beforeChild) {\n    super.appendChildBefore(child, beforeChild);\n    this.root.markDirty();\n  }\n\n  removeChild(child) {\n    super.removeChild(child);\n    this.root.markDirty();\n  }\n\n  update(newProps) {\n    this.props = merge(\n      {},\n      this.constructor.defaultProps,\n      Base.defaultProps,\n      newProps,\n    );\n    this.root.markDirty();\n  }\n\n  applyProps() {\n    this.style = this.resolveStyles();\n\n    toPairsIn(this.style).map(([attribute, value]) => {\n      this.applyStyle(attribute, value);\n    });\n\n    this.children.forEach(child => {\n      if (child.applyProps) child.applyProps();\n    });\n  }\n\n  resolveStyles() {\n    const { size, orientation } = this.page;\n\n    const ownStyles = StyleSheet.resolve(this.props.style, {\n      orientation,\n      width: size.width,\n      height: size.height,\n    });\n\n    const inheritedStyles = this.parent\n      ? pick(this.parent.style, inheritedProperties)\n      : {};\n\n    return { ...inheritedStyles, ...ownStyles };\n  }\n\n  applyStyle(attribute, value) {\n    if (value === undefined) return;\n\n    const setter = `set${upperFirst(attribute)}`;\n\n    switch (attribute) {\n      case 'marginTop':\n      case 'marginRight':\n      case 'marginBottom':\n      case 'marginLeft':\n      case 'paddingTop':\n      case 'paddingRight':\n      case 'paddingBottom':\n      case 'paddingLeft':\n      case 'borderTopWidth':\n      case 'borderRightWidth':\n      case 'borderBottomWidth':\n      case 'borderLeftWidth':\n      case 'position':\n      case 'top':\n      case 'right':\n      case 'bottom':\n      case 'left':\n      case 'width':\n      case 'height':\n      case 'minHeight':\n      case 'maxHeight':\n      case 'minWidth':\n      case 'maxWidth':\n        this[attribute] = value;\n        break;\n      default:\n        if (isFunction(this.layout[setter])) {\n          this.layout[setter](value);\n        }\n    }\n  }\n\n  getLayoutData() {\n    const layout = this.getAbsoluteLayout();\n\n    return {\n      type: this.name,\n      top: layout.top,\n      left: layout.left,\n      width: layout.width,\n      style: this.style,\n      height: layout.height,\n      children: this.children.map(c => {\n        return c.getLayoutData();\n      }),\n    };\n  }\n\n  drawBackgroundColor() {\n    const { backgroundColor, opacity = 1 } = this.style;\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    if (backgroundColor) {\n      this.root.instance.save();\n\n      this.clip();\n\n      this.root.instance\n        .fillOpacity(opacity)\n        .fillColor(backgroundColor)\n        .rect(left, top, width, height)\n        .fill()\n        .restore();\n    }\n  }\n\n  clone() {\n    const clone = new this.constructor(this.root, this.props);\n\n    clone.copyStyle(this);\n    clone.style = this.style;\n\n    return clone;\n  }\n\n  onNodeSplit(height, clone) {\n    this.calculateLayout();\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n\n    // If a height was given to the element, we need to substract the remaining wrapping height\n    // If not, we just let Yoga calculate the appropiate height when layout get's calculated.\n    if (clone.style.height) {\n      clone.height = this.height - height;\n    }\n\n    this.height = height;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n  }\n\n  async renderChildren() {\n    const absoluteChilds = this.children.filter(child => child.absolute);\n    const nonAbsoluteChilds = this.children.filter(child => !child.absolute);\n\n    for (let i = 0; i < nonAbsoluteChilds.length; i++) {\n      await nonAbsoluteChilds[i].render();\n    }\n\n    for (let i = 0; i < absoluteChilds.length; i++) {\n      await absoluteChilds[i].render();\n    }\n  }\n}\n\nBase.defaultProps = {\n  style: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    transformOriginX: '50%',\n    transformOriginY: '50%',\n  },\n  minPresenceAhead: 0,\n};\n\nObject.assign(Base.prototype, Debug);\nObject.assign(Base.prototype, Borders);\nObject.assign(Base.prototype, Clipping);\nObject.assign(Base.prototype, Transform);\n\nexport default Base;\n","import matchPercent from '../utils/matchPercent';\n\nconst RULER_WIDTH = 13;\nconst RULER_COLOR = 'white';\nconst RULER_FONT_SIZE = 5;\nconst DEFAULT_RULER_STEPS = 50;\nconst LINE_WIDTH = 0.5;\nconst LINE_COLOR = 'gray';\nconst GRID_COLOR = '#ababab';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst Ruler = {\n  getRulerWidth() {\n    return RULER_WIDTH;\n  },\n  hasHorizontalRuler() {\n    return this.props.ruler || this.props.horizontalRuler;\n  },\n  hasVerticalRuler() {\n    return this.props.ruler || this.props.verticalRuler;\n  },\n  getHorizontalSteps() {\n    const value =\n      this.props.horizontalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const width = this.width - (this.hasVerticalRuler() ? RULER_WIDTH : 0);\n        return width / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  getVerticalSteps() {\n    const value =\n      this.props.verticalRulerSteps ||\n      this.props.rulerSteps ||\n      DEFAULT_RULER_STEPS;\n\n    if (typeof value === 'string') {\n      const percentage = matchPercentage(value);\n      if (percentage) {\n        const height =\n          this.height - (this.hasHorizontalRuler() ? RULER_WIDTH : 0);\n        return height / percentage;\n      }\n      throw new Error('Page: Invalid horizontal steps value');\n    }\n\n    return value;\n  },\n  renderRuler() {\n    const hasHorizontalRuler = this.hasHorizontalRuler();\n    const hasVerticalRuler = this.hasVerticalRuler();\n\n    if (hasHorizontalRuler || hasVerticalRuler) {\n      this.root.instance\n        .save()\n        .lineWidth(LINE_WIDTH)\n        .fontSize(RULER_FONT_SIZE)\n        .opacity(1);\n\n      if (hasHorizontalRuler) this.drawHorizontalRuler();\n\n      if (hasVerticalRuler) this.drawVerticalRuler();\n\n      if (hasHorizontalRuler && hasVerticalRuler) {\n        this.root.instance\n          .rect(0, 0, RULER_WIDTH - LINE_WIDTH, RULER_WIDTH - LINE_WIDTH)\n          .fill(RULER_COLOR);\n      }\n\n      this.root.instance.restore();\n    }\n  },\n  drawHorizontalRuler() {\n    const offset = this.hasVerticalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(offset, 0, this.width, RULER_WIDTH)\n      .fill(RULER_COLOR)\n      .moveTo(this.hasVerticalRuler() ? RULER_WIDTH : 0, RULER_WIDTH)\n      .lineTo(this.width, RULER_WIDTH)\n      .stroke(LINE_COLOR);\n\n    const hRange = range(this.width, this.getHorizontalSteps());\n\n    hRange.map(step => {\n      this.root.instance\n        .moveTo(offset + step, 0)\n        .lineTo(offset + step, RULER_WIDTH)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, offset + step + 1, 1);\n    });\n\n    hRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(offset + step, RULER_WIDTH)\n          .lineTo(offset + step, this.height)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n  drawVerticalRuler() {\n    const offset = this.hasHorizontalRuler() ? RULER_WIDTH : 0;\n\n    this.root.instance\n      .rect(0, offset, RULER_WIDTH, this.height)\n      .fill(RULER_COLOR)\n      .moveTo(RULER_WIDTH, this.hasHorizontalRuler() ? RULER_WIDTH : 0)\n      .lineTo(RULER_WIDTH, this.height)\n      .stroke(LINE_COLOR);\n\n    const vRange = range(this.height, this.getVerticalSteps());\n\n    vRange.map(step => {\n      this.root.instance\n        .moveTo(0, offset + step)\n        .lineTo(RULER_WIDTH, offset + step)\n        .stroke(LINE_COLOR)\n        .fillColor('black')\n        .text(`${Math.round(step)}`, 1, offset + step + 1);\n    });\n\n    vRange.map(step => {\n      if (step !== 0) {\n        this.root.instance\n          .moveTo(RULER_WIDTH, offset + step)\n          .lineTo(this.width, offset + step)\n          .stroke(GRID_COLOR);\n      }\n    });\n  },\n};\n\nexport default Ruler;\n","class TextInstance {\n  constructor(root, value) {\n    this.root = root;\n    this.value = value;\n    this.parent = null;\n    this.props = {};\n  }\n\n  get name() {\n    return 'TextInstance';\n  }\n\n  getLayoutData() {\n    return this.value;\n  }\n\n  remove() {\n    this.parent.removeChild(this);\n  }\n\n  clone() {\n    return new this.constructor(this.root, this.value);\n  }\n\n  update(value) {\n    this.value = value;\n    this.parent.computed = false;\n    this.parent.container = null;\n    this.root.markDirty();\n  }\n}\n\nexport default TextInstance;\n","const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\n// Return page size in an object { width, height } given the passed size and orientation\n// Accepts page type, arraoy or object as parameter\nconst getPageSize = (size, orientation = 'portrait') => {\n  let result;\n\n  if (typeof size === 'string') {\n    result = PAGE_SIZES[size.toUpperCase()];\n  } else if (Array.isArray(size)) {\n    result = size;\n  } else if (typeof size === 'object' && size.width && size.height) {\n    result = [size.width, size.height];\n  } else {\n    throw new Error(`Invalid Page size: ${size}`);\n  }\n\n  return orientation === 'portrait'\n    ? { width: result[0], height: result[1] }\n    : { width: result[1], height: result[0] };\n};\n\nexport default getPageSize;\n","import { Fragment } from 'react';\nimport Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport Ruler from '../mixins/ruler';\nimport warning from '../utils/warning';\nimport { createInstance } from './index';\nimport TextInstance from './TextInstance';\nimport getPageSize from '../utils/pageSizes';\nimport matchPercent from '../utils/matchPercent';\n\nclass Page extends Base {\n  static defaultProps = {\n    size: 'A4',\n    wrap: true,\n    orientation: 'portrait',\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this._size = null;\n  }\n\n  get name() {\n    return 'Page';\n  }\n\n  get document() {\n    return this.parent;\n  }\n\n  get page() {\n    return this;\n  }\n\n  get orientation() {\n    return this.props.orientation;\n  }\n\n  get size() {\n    if (this._size) return this._size;\n\n    this._size = getPageSize(this.props.size, this.orientation);\n\n    // Adjust size for ruler\n    if (this.hasHorizontalRuler()) {\n      this._size.width += this.getRulerWidth();\n    }\n\n    if (this.hasVerticalRuler()) {\n      this._size.height += this.getRulerWidth();\n    }\n\n    return this._size;\n  }\n\n  resetMargins() {\n    if (\n      !!this.marginTop ||\n      !!this.marginBottom ||\n      !!this.marginLeft ||\n      !!this.marginRight\n    ) {\n      warning(\n        false,\n        'Margin values are not allowed on Page element. Use padding instead.',\n      );\n\n      this.marginTop = 0;\n      this.marginBottom = 0;\n      this.marginLeft = 0;\n      this.marginRight = 0;\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n\n    this.top = 0;\n    this.left = 0;\n    this.width = this.size.width;\n\n    this.resetMargins();\n\n    // Add some padding if ruler present, so we can see the whole page inside it\n    const rulerWidth = this.getRulerWidth();\n\n    if (this.hasHorizontalRuler()) {\n      this.paddingTop = this.paddingTop + rulerWidth;\n    }\n\n    if (this.hasVerticalRuler()) {\n      this.paddingLeft = this.paddingLeft + rulerWidth;\n    }\n  }\n\n  setPadding(edge, value) {\n    const dimension =\n      edge === Yoga.EDGE_TOP || edge === Yoga.EDGE_BOTTOM\n        ? this.size.height\n        : this.size.width;\n\n    const match = matchPercent(value);\n\n    if (match) {\n      this.layout.setPadding(edge, dimension * match.percent);\n    } else {\n      this.layout.setPadding(edge, value);\n    }\n  }\n\n  async addDynamicChild(parent, elements) {\n    if (!elements) return;\n    const children = Array.isArray(elements) ? elements : [elements];\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const { type, props } = child;\n\n      if (typeof child === 'string') {\n        const instance = new TextInstance(this.root, child);\n        parent.appendChild(instance);\n      } else if (type !== Fragment) {\n        const instance = createInstance(child, this.root);\n        await instance.onAppendDynamically();\n        parent.appendChild(instance);\n        instance.applyProps();\n        await this.addDynamicChild(instance, props.children);\n      } else {\n        await this.addDynamicChild(parent, props.children);\n      }\n    }\n  }\n\n  async renderDynamicNodes(props, cb) {\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n      const condition = cb ? cb(node) : true;\n\n      if (condition && node.props.render) {\n        node.removeAllChilds();\n        const elements = node.props.render(props);\n        await this.addDynamicChild(node, elements);\n        if (!node.fixed) node.props.render = null;\n        continue;\n      }\n\n      if (node.children) {\n        listToExplore.push(...node.children);\n      }\n    }\n  }\n\n  async nodeWillWrap(props) {\n    await this.renderDynamicNodes(props);\n    this.calculateLayout();\n  }\n\n  onNodeSplit(height, clone) {\n    clone.marginTop = 0;\n    this.marginBottom = 0;\n    this.calculateLayout();\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone._size = this.size;\n    return clone;\n  }\n\n  update(newProps) {\n    super.update(newProps);\n    this._size = null;\n  }\n\n  async render() {\n    const { instance } = this.root;\n\n    this.height = this.size.height;\n    this.calculateLayout();\n\n    instance.addPage({\n      size: [this.size.width, this.size.height],\n      margin: 0,\n    });\n\n    if (this.style.backgroundColor) {\n      instance\n        .fillColor(this.style.backgroundColor)\n        .rect(0, 0, this.size.width, this.size.height)\n        .fill();\n    }\n\n    await this.renderChildren();\n\n    if (this.props.debug) this.debug();\n\n    this.renderRuler();\n  }\n}\n\nObject.assign(Page.prototype, Ruler);\n\nexport default Page;\n","import Base from './Base';\n\nclass View extends Base {\n  static defaultProps = {\n    wrap: true,\n  };\n\n  get name() {\n    return 'View';\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n    this.root.instance.restore();\n  }\n}\n\nexport default View;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformFontWeight';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst throwInvalidUrl = src => {\n  throw new Error(\n    `Invalid font url: ${src}. If you use relative url please replace it with absolute one (ex. /font.ttf -> http://localhost:3000/font.ttf)`,\n  );\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      if (BROWSER) throwInvalidUrl(this.src); // Can't load a non-url font in browser\n\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor, doc) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  get ascent() {\n    return this.src.ascender;\n  }\n\n  get descent() {\n    return this.src.descender;\n  }\n\n  get lineGap() {\n    return this.src.lineGap;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import StandardFont from './standardFont';\n\nexport default () => ({ Run }) =>\n  class FontSubstitutionEngine {\n    constructor() {\n      this.fontCache = {};\n    }\n\n    get fallbackFont() {\n      return this.getOrCreateFont('Helvetica');\n    }\n\n    getOrCreateFont(name) {\n      if (this.fontCache[name]) return this.fontCache[name];\n\n      const font = new StandardFont(name);\n      this.fontCache[name] = font;\n\n      return font;\n    }\n\n    shouldFallbackToFont(codePoint, font) {\n      return (\n        !font.hasGlyphForCodePoint(codePoint) &&\n        this.fallbackFont.hasGlyphForCodePoint(codePoint)\n      );\n    }\n\n    getRuns(string, runs) {\n      const res = [];\n      let lastFont = null;\n      let lastIndex = 0;\n      let index = 0;\n\n      for (const run of runs) {\n        const defaultFont =\n          typeof run.attributes.font === 'string'\n            ? this.getOrCreateFont(run.attributes.font)\n            : run.attributes.font;\n\n        if (string.length === 0) {\n          res.push(new Run(0, 0, { font: defaultFont }));\n          break;\n        }\n\n        for (const char of string.slice(run.start, run.end)) {\n          const codePoint = char.codePointAt();\n          const font = this.shouldFallbackToFont(codePoint, defaultFont)\n            ? this.fallbackFont\n            : defaultFont;\n\n          // If the default font does not have a glyph and the fallback font does, we use it\n          if (font !== lastFont) {\n            if (lastFont) {\n              res.push(new Run(lastIndex, index, { font: lastFont }));\n            }\n\n            lastFont = font;\n            lastIndex = index;\n          }\n\n          index += char.length;\n        }\n      }\n\n      if (lastIndex < string.length) {\n        res.push(new Run(lastIndex, string.length, { font: lastFont }));\n      }\n\n      return res;\n    }\n  };\n","const createHyphenator = require('hyphen');\nconst pattern = require('hyphen/patterns/en-us');\n\nconst SOFT_HYPHEN_HEX = '\\u00ad';\nconst hyphen = createHyphenator(pattern);\n\nexport default ({ hyphenationCallback }) => () =>\n  class {\n    constructor() {\n      this.cache = {};\n    }\n\n    calculateParts(word) {\n      if (word.includes(SOFT_HYPHEN_HEX)) {\n        return word.split(SOFT_HYPHEN_HEX);\n      }\n\n      return hyphen(word).split(SOFT_HYPHEN_HEX);\n    }\n\n    hyphenateWord(word) {\n      if (this.cache[word]) return this.cache[word];\n\n      const parts = hyphenationCallback\n        ? hyphenationCallback(word)\n        : this.calculateParts(word);\n\n      this.cache[word] = parts;\n\n      return parts;\n    }\n  };\n","class Node {\n  constructor(data) {\n    this.prev = null;\n    this.next = null;\n    this.data = data;\n  }\n\n  toString() {\n    return this.data.toString();\n  }\n}\n\nclass LinkedList {\n  static Node = Node;\n\n  constructor() {\n    this.head = null;\n    this.tail = null;\n    this.listSize = 0;\n  }\n\n  isLinked(node) {\n    return !(\n      (node &&\n        node.prev === null &&\n        node.next === null &&\n        this.tail !== node &&\n        this.head !== node) ||\n      this.isEmpty()\n    );\n  }\n\n  size() {\n    return this.listSize;\n  }\n\n  isEmpty() {\n    return this.listSize === 0;\n  }\n\n  first() {\n    return this.head;\n  }\n\n  last() {\n    return this.last;\n  }\n\n  toString() {\n    return this.toArray().toString();\n  }\n\n  toArray() {\n    let node = this.head;\n    const result = [];\n\n    while (node !== null) {\n      result.push(node);\n      node = node.next;\n    }\n    return result;\n  }\n\n  forEach(fun) {\n    let node = this.head;\n\n    while (node !== null) {\n      fun(node);\n      node = node.next;\n    }\n  }\n\n  contains(n) {\n    let node = this.head;\n\n    if (!this.isLinked(n)) {\n      return false;\n    }\n    while (node !== null) {\n      if (node === n) {\n        return true;\n      }\n      node = node.next;\n    }\n    return false;\n  }\n\n  at(i) {\n    let node = this.head;\n    let index = 0;\n\n    if (i >= this.listLength || i < 0) {\n      return null;\n    }\n\n    while (node !== null) {\n      if (i === index) {\n        return node;\n      }\n      node = node.next;\n      index += 1;\n    }\n    return null;\n  }\n\n  insertAfter(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node;\n    newNode.next = node.next;\n    if (node.next === null) {\n      this.tail = newNode;\n    } else {\n      node.next.prev = newNode;\n    }\n    node.next = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  insertBefore(node, newNode) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    newNode.prev = node.prev;\n    newNode.next = node;\n    if (node.prev === null) {\n      this.head = newNode;\n    } else {\n      node.prev.next = newNode;\n    }\n    node.prev = newNode;\n    this.listSize += 1;\n    return this;\n  }\n\n  push(node) {\n    if (this.head === null) {\n      this.unshift(node);\n    } else {\n      this.insertAfter(this.tail, node);\n    }\n    return this;\n  }\n\n  unshift(node) {\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n      node.prev = null;\n      node.next = null;\n      this.listSize += 1;\n    } else {\n      this.insertBefore(this.head, node);\n    }\n    return this;\n  }\n\n  remove(node) {\n    if (!this.isLinked(node)) {\n      return this;\n    }\n    if (node.prev === null) {\n      this.head = node.next;\n    } else {\n      node.prev.next = node.next;\n    }\n    if (node.next === null) {\n      this.tail = node.prev;\n    } else {\n      node.next.prev = node.prev;\n    }\n    this.listSize -= 1;\n    return this;\n  }\n\n  pop() {\n    const node = this.tail;\n    this.tail.prev.next = null;\n    this.tail = this.tail.prev;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n\n  shift() {\n    const node = this.head;\n    this.head.next.prev = null;\n    this.head = this.head.next;\n    this.listSize -= 1;\n    node.prev = null;\n    node.next = null;\n    return node;\n  }\n}\n\nexport default LinkedList;\n","import LinkedList from './linkedList';\n\n/**\n * @preserve Knuth and Plass line breaking algorithm in JavaScript\n *\n * Licensed under the new BSD License.\n * Copyright 2009-2010, Bram Stein\n * All rights reserved.\n */\nconst linebreak = (nodes, lines, settings) => {\n  const options = {\n    demerits: {\n      line: (settings && settings.demerits && settings.demerits.line) || 10,\n      flagged:\n        (settings && settings.demerits && settings.demerits.flagged) || 100,\n      fitness:\n        (settings && settings.demerits && settings.demerits.fitness) || 3000,\n    },\n    tolerance: (settings && settings.tolerance) || 3,\n  };\n  const activeNodes = new LinkedList();\n  const sum = {\n    width: 0,\n    stretch: 0,\n    shrink: 0,\n  };\n  const lineLengths = lines;\n  const breaks = [];\n  let tmp = {\n    data: {\n      demerits: Infinity,\n    },\n  };\n\n  function breakpoint(\n    position,\n    demerits,\n    ratio,\n    line,\n    fitnessClass,\n    totals,\n    previous,\n  ) {\n    return {\n      position,\n      demerits,\n      ratio,\n      line,\n      fitnessClass,\n      totals: totals || {\n        width: 0,\n        stretch: 0,\n        shrink: 0,\n      },\n      previous,\n    };\n  }\n\n  function computeCost(start, end, active, currentLine) {\n    let width = sum.width - active.totals.width;\n    let stretch = 0;\n    let shrink = 0;\n    // If the current line index is within the list of linelengths, use it, otherwise use\n    // the last line length of the list.\n    const lineLength =\n      currentLine < lineLengths.length\n        ? lineLengths[currentLine - 1]\n        : lineLengths[lineLengths.length - 1];\n\n    if (nodes[end].type === 'penalty') {\n      width += nodes[end].width;\n    }\n\n    if (width < lineLength) {\n      // Calculate the stretch ratio\n      stretch = sum.stretch - active.totals.stretch;\n\n      if (stretch > 0) {\n        return (lineLength - width) / stretch;\n      }\n\n      return linebreak.infinity;\n    } else if (width > lineLength) {\n      // Calculate the shrink ratio\n      shrink = sum.shrink - active.totals.shrink;\n\n      if (shrink > 0) {\n        return (lineLength - width) / shrink;\n      }\n\n      return linebreak.infinity;\n    }\n\n    // perfect match\n    return 0;\n  }\n\n  // Add width, stretch and shrink values from the current\n  // break point up to the next box or forced penalty.\n  function computeSum(breakPointIndex) {\n    const result = {\n      width: sum.width,\n      stretch: sum.stretch,\n      shrink: sum.shrink,\n    };\n\n    for (let i = breakPointIndex; i < nodes.length; i += 1) {\n      if (nodes[i].type === 'glue') {\n        result.width += nodes[i].width;\n        result.stretch += nodes[i].stretch;\n        result.shrink += nodes[i].shrink;\n      } else if (\n        nodes[i].type === 'box' ||\n        (nodes[i].type === 'penalty' &&\n          nodes[i].penalty === -linebreak.infinity &&\n          i > breakPointIndex)\n      ) {\n        break;\n      }\n    }\n    return result;\n  }\n\n  // The main loop of the algorithm\n  function mainLoop(node, index, nodes) {\n    let active = activeNodes.first();\n    let next = null;\n    let ratio = 0;\n    let demerits = 0;\n    let candidates = [];\n    let badness;\n    let currentLine = 0;\n    let tmpSum;\n    let currentClass = 0;\n    let fitnessClass;\n    let candidate;\n    let newNode;\n\n    // The inner loop iterates through all the active nodes with line < currentLine and then\n    // breaks out to insert the new active node candidates before looking at the next active\n    // nodes for the next lines. The result of this is that the active node list is always\n    // sorted by line number.\n    while (active !== null) {\n      candidates = [\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n        {\n          demerits: Infinity,\n        },\n      ];\n\n      // Iterate through the linked list of active nodes to find new potential active nodes\n      // and deactivate current active nodes.\n      while (active !== null) {\n        next = active.next;\n        currentLine = active.data.line + 1;\n        ratio = computeCost(\n          active.data.position,\n          index,\n          active.data,\n          currentLine,\n        );\n\n        // Deactive nodes when the distance between the current active node and the\n        // current node becomes too large (i.e. it exceeds the stretch limit and the stretch\n        // ratio becomes negative) or when the current node is a forced break (i.e. the end\n        // of the paragraph when we want to remove all active nodes, but possibly have a final\n        // candidate active node---if the paragraph can be set using the given tolerance value.)\n        if (\n          ratio < -1 ||\n          (node.type === 'penalty' && node.penalty === -linebreak.infinity)\n        ) {\n          activeNodes.remove(active);\n        }\n\n        // If the ratio is within the valid range of -1 <= ratio <= tolerance calculate the\n        // total demerits and record a candidate active node.\n        if (ratio >= -1 && ratio <= options.tolerance) {\n          badness = 100 * Math.pow(Math.abs(ratio), 3);\n\n          // Positive penalty\n          if (node.type === 'penalty' && node.penalty >= 0) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) +\n              Math.pow(node.penalty, 2);\n            // Negative penalty but not a forced break\n          } else if (\n            node.type === 'penalty' &&\n            node.penalty !== -linebreak.infinity\n          ) {\n            demerits =\n              Math.pow(options.demerits.line + badness, 2) -\n              Math.pow(node.penalty, 2);\n            // All other cases\n          } else {\n            demerits = Math.pow(options.demerits.line + badness, 2);\n          }\n\n          if (\n            node.type === 'penalty' &&\n            nodes[active.data.position].type === 'penalty'\n          ) {\n            demerits +=\n              options.demerits.flagged *\n              node.flagged *\n              nodes[active.data.position].flagged;\n          }\n\n          // Calculate the fitness class for this candidate active node.\n          if (ratio < -0.5) {\n            currentClass = 0;\n          } else if (ratio <= 0.5) {\n            currentClass = 1;\n          } else if (ratio <= 1) {\n            currentClass = 2;\n          } else {\n            currentClass = 3;\n          }\n\n          // Add a fitness penalty to the demerits if the fitness classes of two adjacent lines\n          // differ too much.\n          if (Math.abs(currentClass - active.data.fitnessClass) > 1) {\n            demerits += options.demerits.fitness;\n          }\n\n          // Add the total demerits of the active node to get the total demerits of this candidate node.\n          demerits += active.data.demerits;\n\n          // Only store the best candidate for each fitness class\n          if (demerits < candidates[currentClass].demerits) {\n            candidates[currentClass] = {\n              active,\n              demerits,\n              ratio,\n            };\n          }\n        }\n\n        active = next;\n\n        // Stop iterating through active nodes to insert new candidate active nodes in the active list\n        // before moving on to the active nodes for the next line.\n        // TODO: The Knuth and Plass paper suggests a conditional for currentLine < j0. This means paragraphs\n        // with identical line lengths will not be sorted by line number. Find out if that is a desirable outcome.\n        // For now I left this out, as it only adds minimal overhead to the algorithm and keeping the active node\n        // list sorted has a higher priority.\n        if (active !== null && active.data.line >= currentLine) {\n          break;\n        }\n      }\n\n      tmpSum = computeSum(index);\n\n      for (\n        fitnessClass = 0;\n        fitnessClass < candidates.length;\n        fitnessClass += 1\n      ) {\n        candidate = candidates[fitnessClass];\n\n        if (candidate.demerits < Infinity) {\n          newNode = new LinkedList.Node(\n            breakpoint(\n              index,\n              candidate.demerits,\n              candidate.ratio,\n              candidate.active.data.line + 1,\n              fitnessClass,\n              tmpSum,\n              candidate.active,\n            ),\n          );\n          if (active !== null) {\n            activeNodes.insertBefore(active, newNode);\n          } else {\n            activeNodes.push(newNode);\n          }\n        }\n      }\n    }\n  }\n\n  // Add an active node for the start of the paragraph.\n  activeNodes.push(\n    new LinkedList.Node(breakpoint(0, 0, 0, 0, 0, undefined, null)),\n  );\n\n  nodes.forEach((node, index, nodes) => {\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      if (index > 0 && nodes[index - 1].type === 'box') {\n        mainLoop(node, index, nodes);\n      }\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    } else if (node.type === 'penalty' && node.penalty !== linebreak.infinity) {\n      mainLoop(node, index, nodes);\n    }\n  });\n\n  if (activeNodes.size() !== 0) {\n    // Find the best active node (the one with the least total demerits.)\n    activeNodes.forEach(node => {\n      if (node.data.demerits < tmp.data.demerits) {\n        tmp = node;\n      }\n    });\n\n    while (tmp !== null) {\n      breaks.push({\n        position: tmp.data.position,\n        ratio: tmp.data.ratio,\n      });\n      tmp = tmp.data.previous;\n    }\n    return breaks.reverse();\n  }\n  return [];\n};\n\nlinebreak.infinity = 10000;\n\nlinebreak.glue = (width, value, stretch, shrink) => ({\n  type: 'glue',\n  value,\n  width,\n  stretch,\n  shrink,\n});\n\nlinebreak.box = (width, value, hyphenated = false) => ({\n  type: 'box',\n  width,\n  value,\n  hyphenated,\n});\n\nlinebreak.penalty = (width, penalty, flagged) => ({\n  type: 'penalty',\n  width,\n  penalty,\n  flagged,\n});\n\nexport default linebreak;\n","const INFINITY = 10000;\n\nconst getNextBreakpoint = (subnodes, widths, lineNumber) => {\n  let position = null;\n  let minimumBadness = Infinity;\n\n  const sum = { width: 0, stretch: 0, shrink: 0 };\n  const lineLength = widths[Math.min(lineNumber, widths.length - 1)];\n\n  const calculateRatio = node => {\n    if (sum.width < lineLength) {\n      return sum.stretch - node.stretch > 0\n        ? (lineLength - sum.width) / sum.stretch\n        : INFINITY;\n    } else if (sum.width > lineLength) {\n      return sum.shrink - node.shrink > 0\n        ? (lineLength - sum.width) / sum.shrink\n        : INFINITY;\n    }\n\n    return 0;\n  };\n\n  for (let i = 0; i < subnodes.length; i++) {\n    const node = subnodes[i];\n\n    if (node.type === 'box') {\n      sum.width += node.width;\n    } else if (node.type === 'glue') {\n      sum.width += node.width;\n      sum.stretch += node.stretch;\n      sum.shrink += node.shrink;\n    }\n\n    if (sum.width - sum.shrink > lineLength) break;\n\n    if (node.type === 'penalty' || node.type === 'glue') {\n      const ratio = calculateRatio(node);\n      const penalty = node.type === 'penalty' ? node.penalty : 0;\n      const badness = 100 * Math.pow(Math.abs(ratio), 3) + penalty;\n\n      if (minimumBadness >= badness) {\n        position = i;\n        minimumBadness = badness;\n      }\n    }\n  }\n\n  return sum.width - sum.shrink > lineLength ? position : null;\n};\n\nconst applyBestFit = (nodes, widths) => {\n  let count = 0;\n  let lineNumber = 0;\n  let subnodes = nodes;\n  const breakpoints = [{ position: 0 }];\n\n  while (subnodes.length > 0) {\n    const breakpoint = getNextBreakpoint(subnodes, widths, lineNumber);\n\n    if (breakpoint) {\n      count += breakpoint;\n      breakpoints.push({ position: count });\n      subnodes = subnodes.slice(breakpoint + 1, subnodes.length);\n      count++;\n      lineNumber++;\n    } else {\n      subnodes = [];\n    }\n  }\n\n  return breakpoints;\n};\n\nexport default applyBestFit;\n","import linebreak from './linebreak';\nimport bestFit from './bestFit';\n\nconst HYPHEN = 0x002d;\nconst TOLERANCE_STEPS = 5;\nconst TOLERANCE_LIMIT = 50;\n\nconst opts = {\n  width: 3,\n  stretch: 6,\n  shrink: 9,\n};\n\nexport default ({ penalty } = {}) => () => {\n  return class KPLineBreaker {\n    constructor(tolerance) {\n      this.tolerance = tolerance || 4;\n    }\n\n    getNodes(glyphString, syllables, { align }) {\n      let start = 0;\n      const hyphenWidth = 5;\n      const hyphenPenalty = penalty || (align === 'justify' ? 100 : 600);\n\n      const result = syllables.reduce((acc, s, index) => {\n        const glyphStart = glyphString.glyphIndexForStringIndex(start);\n        const glyphEnd = glyphString.glyphIndexForStringIndex(start + s.length);\n        const syllable = glyphString.slice(glyphStart, glyphEnd);\n\n        if (syllable.string.trim() === '') {\n          const width = syllable.advanceWidth;\n          const stretch = (width * opts.width) / opts.stretch;\n          const shrink = (width * opts.width) / opts.shrink;\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.glue(width, value, stretch, shrink));\n        } else {\n          const hyphenated = syllables[index + 1] !== ' ';\n          const value = { value: syllable, start, end: start + syllable.end };\n          acc.push(linebreak.box(syllable.advanceWidth, value, hyphenated));\n\n          if (syllables[index + 1] && hyphenated) {\n            acc.push(linebreak.penalty(hyphenWidth, hyphenPenalty, 1));\n          }\n        }\n\n        start += s.length;\n\n        return acc;\n      }, []);\n\n      result.push(linebreak.glue(0, null, linebreak.infinity, 0));\n      result.push(linebreak.penalty(0, -linebreak.infinity, 1));\n\n      return result;\n    }\n\n    breakLines(glyphString, nodes, breaks) {\n      let start = 0;\n      let end = null;\n\n      const lines = breaks.reduce((acc, breakPoint) => {\n        const node = nodes[breakPoint.position];\n        const prevNode = nodes[breakPoint.position - 1];\n\n        // Last breakpoint corresponds to K&P mandatory final glue\n        if (breakPoint.position === nodes.length - 1) return acc;\n\n        let line;\n        if (node.type === 'penalty') {\n          end = glyphString.glyphIndexForStringIndex(prevNode.value.end);\n          line = glyphString.copy().slice(start, end);\n          line.insertGlyph(line.length, HYPHEN);\n        } else {\n          end = glyphString.glyphIndexForStringIndex(node.value.end);\n          line = glyphString.copy().slice(start, end);\n        }\n\n        start = end;\n        return [...acc, line];\n      }, []);\n\n      const lastLine = glyphString.slice(\n        start,\n        glyphString.glyphIndexForStringIndex(glyphString.string.length),\n      );\n      lines.push(lastLine);\n\n      return lines;\n    }\n\n    suggestLineBreak(glyphString, syllables, availableWidths, paragraphStyle) {\n      const nodes = this.getNodes(glyphString, syllables, paragraphStyle);\n      let tolerance = this.tolerance;\n      let breaks = linebreak(nodes, availableWidths, { tolerance });\n\n      // Try again with a higher tolerance if the line breaking failed.\n      while (breaks.length === 0 && tolerance < TOLERANCE_LIMIT) {\n        tolerance += TOLERANCE_STEPS;\n        breaks = linebreak(nodes, availableWidths, { tolerance });\n      }\n\n      if (\n        breaks.length === 0 ||\n        (breaks.length === 1 && breaks[0].position === 0)\n      ) {\n        breaks = bestFit(nodes, availableWidths);\n      }\n\n      return this.breakLines(glyphString, nodes, breaks.slice(1));\n    }\n  };\n};\n","import { LayoutEngine as BaseLayoutEngine } from '@react-pdf/textkit-core';\nimport scriptItemizer from '@react-pdf/script-itemizer';\nimport justificationEngine from '@textkit/justification-engine';\nimport textDecorationEngine from '@textkit/text-decoration-engine';\nimport fontSubstitutionEngine from './fontSubstitution';\nimport wordHyphenation from './wordHyphenation';\nimport lineBreaker from './linebreaker';\n\n// justificationEngine values\nconst shrinkWhitespaceFactor = { before: -0.5, after: -0.5 };\n\nexport class LayoutEngine extends BaseLayoutEngine {\n  constructor({ hyphenationCallback, hyphenationPenalty }) {\n    const engines = {\n      scriptItemizer: scriptItemizer(),\n      decorationEngine: textDecorationEngine(),\n      fontSubstitutionEngine: fontSubstitutionEngine(),\n      wordHyphenation: wordHyphenation({ hyphenationCallback }),\n      lineBreaker: lineBreaker({ penalty: hyphenationPenalty }),\n      justificationEngine: justificationEngine({ shrinkWhitespaceFactor }),\n    };\n\n    super(engines);\n  }\n}\n\nexport {\n  Run,\n  BBox,\n  Path,\n  Rect,\n  Point,\n  Block,\n  Range,\n  Polygon,\n  RunStyle,\n  GlyphRun,\n  Container,\n  Attachment,\n  GlyphString,\n  LineFragment,\n  ParagraphStyle,\n  DecorationLine,\n  FontDescriptor,\n  AttributedString,\n} from '@react-pdf/textkit-core';\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","import sharp from 'sharp';\nimport PNG from '../png';\n\nconst renderServerGIF = async data => {\n  const pngBuffer = await sharp(data).toBuffer();\n  return new PNG(pngBuffer);\n};\n\nexport default renderServerGIF;\n","/* global File */\n\nimport jpegasus from 'jpegasus';\nimport toArrayBuffer from 'to-arraybuffer';\nimport toBufferCb from 'blob-to-buffer';\nimport JPEG from '../jpeg';\nimport renderServerGIF from './server';\n\nconst toBuffer = blob =>\n  new Promise((resolve, reject) =>\n    toBufferCb(blob, (err, buffer) => (err ? reject(err) : resolve(buffer))),\n  );\n\nconst renderGIF = async data => {\n  if (!GIF.isValid(data)) {\n    throw new TypeError(\n      'Image passed to GIF decoder appears not to be in GIF format',\n    );\n  }\n\n  if (!BROWSER) {\n    return renderServerGIF(data);\n  }\n\n  const jpegBlob = await jpegasus.compress(\n    new File([toArrayBuffer(data)], 'image.gif', {\n      type: 'image/gif',\n    }),\n    {\n      quality: 0.8,\n    },\n  );\n  const jpegBuffer = await toBuffer(jpegBlob);\n  return new JPEG(jpegBuffer);\n};\n\n// Instantiate a “thenable” object — an object that behaves like a Promise\n// https://samdanielson.com/blog/2016/09/15/subclassing-promises-not.html\n// by implementing the Promise prototype’s public methods, and applying them to a real Promise\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise#Promise_prototype\nclass GIF {\n  constructor(data) {\n    this.imagePromise = renderGIF(data);\n  }\n\n  then(...args) {\n    return this.imagePromise.then.apply(this.imagePromise, args);\n  }\n\n  catch(...args) {\n    return this.imagePromise.catch.apply(this.imagePromise, args);\n  }\n\n  finally(...args) {\n    return this.imagePromise.finally.apply(this.imagePromise, args);\n  }\n}\n\nGIF.isValid = function(data) {\n  try {\n    return data[0] === 71 && data[1] === 73 && data[2] === 70;\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default GIF;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from './png';\nimport JPEG from './jpeg';\nimport GIF from './gif';\nimport createCache from './cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nexport const isDangerousLocalPath = (\n  filename,\n  { safePath = './public' } = {},\n) => {\n  if (BROWSER) {\n    throw new Error(\n      'Cannot check dangerous local path in client-side environemnt',\n    );\n  }\n  const absoluteSafePath = path.resolve(safePath);\n  const absoluteFilePath = path.resolve(filename);\n  return !absoluteFilePath.startsWith(absoluteSafePath);\n};\n\nconst fetchLocalFile = (src, { safePath, allowDangerousPaths = false } = {}) =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      if (\n        !allowDangerousPaths &&\n        isDangerousLocalPath(absolutePath, { safePath })\n      ) {\n        return reject(new Error(`Cannot fetch dangerous local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return (\n    lower === 'jpg' || lower === 'jpeg' || lower === 'png' || lower === 'gif'\n  );\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  } else if (GIF.isValid(buffer)) {\n    format = 'gif';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    case 'gif':\n      return new GIF(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = async ({ uri }) => {\n  const [, format, data] = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/.exec(uri);\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return getImage(Buffer.from(data, 'base64'), format);\n};\n\nconst resolveImageFromData = async src => {\n  if (src.data && src.format) {\n    return getImage(src.data, src.format);\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = async buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return getImage(buffer, format);\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  // based on https://github.com/sindresorhus/file-type/blob/master/index.js#L65\n  const isGif = body[0] === 71 && body[1] === 73 && body[2] === 70;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else if (isGif) {\n    extension = 'gif';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async (src, options) => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri, options)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nexport const resolveImage = (src, { cache = true, ...options } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src, options);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\nimport Font from '../font';\nimport { Attachment } from '../layout';\nimport { resolveImage } from '../utils/image';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, Attachment.CHARACTER),\n          attributes: {\n            ...fragment.attributes,\n            attachment: new Attachment(emojiSize, emojiSize, {\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            }),\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import { AttributedString } from '../layout';\nimport Font from '../font';\nimport { embedEmojis } from './emoji';\nimport { ignoreChars } from './ignorableChars';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\nconst capitalize = value => value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    default:\n      return text;\n  }\n};\n\nexport const getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    position,\n    top,\n    bottom,\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    opacity,\n  } = instance.style;\n\n  instance.children.forEach(child => {\n    if (child.value !== null && child.value !== undefined) {\n      const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n      const font = obj ? obj.data : fontFamily;\n      const string = transformText(child.value, textTransform);\n\n      fragments.push({\n        string,\n        attributes: {\n          font,\n          color,\n          opacity,\n          fontSize,\n          backgroundColor,\n          align: textAlign,\n          link: instance.src,\n          characterSpacing: letterSpacing,\n          underlineStyle: textDecorationStyle,\n          underline: textDecoration === 'underline',\n          underlineColor: textDecorationColor || color,\n          lineHeight: lineHeight ? lineHeight * fontSize : null,\n          yOffset: position === 'relative' ? -top || bottom || 0 : null,\n        },\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\nexport const getAttributedString = instance => {\n  return AttributedString.fromFragments(getFragments(instance)).trim();\n};\n","import Yoga from 'yoga-layout';\nimport createPDFRenderer from '@textkit/pdf-renderer';\n\nimport Base from './Base';\nimport Font from '../font';\nimport { getURL } from '../utils/url';\nimport { LayoutEngine, Rect, Path, Container } from '../layout';\nimport { getAttributedString } from '../utils/attributedString';\n\nconst renderOpts = { outlineLines: false };\nconst PDFRenderer = createPDFRenderer({ Rect });\n\nclass Text extends Base {\n  static defaultProps = {\n    wrap: true,\n    widows: 2,\n    orphans: 2,\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.start = 0;\n    this.end = 0;\n\n    this.computed = false;\n    this.container = null;\n    this.attributedString = null;\n    this.layoutEngine = new LayoutEngine({\n      hyphenationPenalty: props.hyphenationPenalty,\n      hyphenationCallback: Font.getHyphenationCallback(),\n    });\n\n    this.layout.setMeasureFunc(this.measureText.bind(this));\n  }\n\n  get name() {\n    return 'Text';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  get lines() {\n    if (!this.container) return [];\n\n    return this.container.blocks\n      .reduce((acc, block) => [...acc, ...block.lines], [])\n      .splice(this.start, this.end);\n  }\n\n  get linesHeight() {\n    if (!this.container) return -1;\n    return this.lines.reduce((acc, line) => acc + line.height, 0);\n  }\n\n  get linesWidth() {\n    if (!this.container) return -1;\n    return Math.max(...this.lines.map(line => line.advanceWidth));\n  }\n\n  appendChild(child) {\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n      this.computed = false;\n      this.attributedString = null;\n      this.markDirty();\n    }\n  }\n\n  lineIndexAtHeight(height) {\n    let counter = 0;\n\n    for (let i = 0; i < this.lines.length; i++) {\n      const line = this.lines[i];\n      if (counter + line.height > height) return i;\n      counter += line.height;\n    }\n\n    return this.lines.length;\n  }\n\n  heightAtLineIndex(index) {\n    let counter = 0;\n\n    for (let i = 0; i < index; i++) {\n      const line = this.lines[i];\n      counter += line.height;\n    }\n\n    return counter;\n  }\n\n  layoutText(width, height) {\n    this.attributedString = getAttributedString(this);\n\n    // If height null or NaN, we take some liberty on layout height\n    const containerHeight = height || this.page.size.height;\n\n    // Text layout is expensive. That's why we ensure to only do it once\n    // (except dynamic nodes. Those change content and needs to relayout every time)\n    if (!this.container || this.props.render) {\n      const path = new Path().rect(0, 0, width, containerHeight);\n      const container = new Container(path);\n      const attributedString = this.attributedString;\n\n      // Do the actual text layout\n      this.layoutEngine.layout(attributedString, [container]);\n      this.container = container;\n    }\n\n    // Get the total amount of rendered lines\n    const linesCount = this.container.blocks.reduce(\n      (acc, block) => acc + block.lines.length,\n      0,\n    );\n\n    this.end = this.props.maxLines || linesCount + 1;\n    this.computed = true;\n  }\n\n  measureText(width, widthMode, height, heightMode) {\n    if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n      this.layoutText(width);\n\n      return { height: this.style.flexGrow ? NaN : this.linesHeight };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      this.layoutText(width, height);\n\n      return {\n        height: this.linesHeight,\n        width: Math.min(width, this.linesWidth),\n      };\n    }\n\n    return {};\n  }\n\n  resolveStyles() {\n    const styles = super.resolveStyles();\n\n    // Inherit relative positioning for inline childs\n    if (\n      this.parent &&\n      this.parent.name === 'Text' &&\n      this.parent.style.position === 'relative'\n    ) {\n      styles.top = styles.top || this.parent.style.top;\n      styles.bottom = styles.bottom || this.parent.style.bottom;\n      styles.position = styles.position || 'relative';\n    }\n\n    // Apply default link styles\n    if (this.src) {\n      styles.color = styles.color || 'blue';\n      styles.textDecoration = styles.textDecoration || 'underline';\n    }\n\n    return styles;\n  }\n\n  wrapHeight(height) {\n    const { orphans, widows } = this.props;\n    const linesQuantity = this.lines.length;\n    const sliceHeight = height - this.paddingTop;\n    const slicedLine = this.lineIndexAtHeight(sliceHeight);\n\n    if (linesQuantity < orphans) {\n      return height;\n    } else if (slicedLine < orphans || linesQuantity < orphans + widows) {\n      return 0;\n    } else if (linesQuantity === orphans + widows) {\n      return this.heightAtLineIndex(orphans);\n    } else if (linesQuantity - slicedLine < widows) {\n      return height - this.heightAtLineIndex(widows - 1);\n    }\n\n    return height;\n  }\n\n  onNodeSplit(height, clone) {\n    const wrapHeight = this.wrapHeight(height);\n    const slicedLineIndex = this.lineIndexAtHeight(wrapHeight);\n\n    clone.marginTop = 0;\n    clone.paddingTop = 0;\n    clone.start = slicedLineIndex;\n    clone.attributedString = this.attributedString;\n\n    this.height = wrapHeight;\n    this.marginBottom = 0;\n    this.paddingBottom = 0;\n    this.end = slicedLineIndex;\n  }\n\n  clone() {\n    const text = super.clone();\n\n    text.layoutEngine = this.layoutEngine;\n\n    // Save calculated layout for non-dynamic clone elements\n    if (this.container && !this.props.render) {\n      text.container = this.container.copy();\n    }\n\n    return text;\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n\n    // Calculate text layout if needed\n    // This can happen if measureText was not called by Yoga\n    if (!this.computed) {\n      this.layoutText(\n        this.width - this.padding.left - this.padding.right,\n        this.height - this.padding.top - this.padding.bottom,\n      );\n    }\n\n    // We translate lines based on Yoga container\n    const { top, left } = this.getAbsoluteLayout();\n    const initialX = this.lines[0] ? this.lines[0].rect.y : 0;\n\n    this.lines.forEach(line => {\n      line.rect.x += left + this.padding.left;\n      line.rect.y += top + this.padding.top - initialX;\n    });\n\n    // Mock container only with appropiate lines\n    const container = { ...this.container, blocks: [{ lines: this.lines }] };\n\n    // Perform actual text rendering on document\n    new PDFRenderer(this.root.instance, renderOpts).render(container);\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Text;\n","import Base from './Base';\nimport { getURL } from '../utils/url';\n\nclass Link extends Base {\n  get name() {\n    return 'Link';\n  }\n\n  get src() {\n    return getURL(this.props.src || this.props.href);\n  }\n\n  async render() {\n    const { top, left, width, height } = this.getAbsoluteLayout();\n    this.root.instance.link(left, top, width, height, this.src);\n    await this.renderChildren();\n    if (this.props.debug) this.debug();\n  }\n}\n\nexport default Link;\n","import Base from './Base';\n\nclass Note extends Base {\n  static defaultProps = {};\n\n  get name() {\n    return 'Note';\n  }\n\n  appendChild(child) {\n    if (child.name !== 'TextInstance') {\n      throw new Error('Note only accepts string children');\n    }\n\n    if (child) {\n      child.parent = this;\n      this.children.push(child);\n    }\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n\n    if (index !== -1) {\n      child.parent = null;\n      this.children.splice(index, 1);\n    }\n  }\n\n  applyProps() {\n    super.applyProps();\n    this.height = 0;\n    this.width = 0;\n  }\n\n  async render() {\n    const { top, left } = this.getAbsoluteLayout();\n    const value = this.children[0] ? this.children[0].value : '';\n\n    this.root.instance.note(left, top, 0, 0, value);\n  }\n}\n\nexport default Note;\n","import matchPercent from './matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nexport const resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n","import Yoga from 'yoga-layout';\n\nimport Base from './Base';\nimport warning from '../utils/warning';\nimport { resolveImage } from '../utils/image';\nimport { resolveObjectFit } from '../utils/objectFit';\n\nconst SAFETY_HEIGHT = 10;\n\nclass Image extends Base {\n  static defaultProps = {\n    wrap: false,\n    cache: true,\n    style: {},\n  };\n\n  constructor(root, props) {\n    super(root, props);\n\n    this.image = null;\n    this.layout.setMeasureFunc(this.measureImage.bind(this));\n  }\n\n  get name() {\n    return 'Image';\n  }\n\n  shouldGrow() {\n    return !!this.style.flexGrow;\n  }\n\n  measureImage(width, widthMode, height, heightMode) {\n    const imageMargin = this.margin;\n    const pagePadding = this.page.padding;\n    const pageArea =\n      this.page.size.height -\n      pagePadding.top -\n      pagePadding.bottom -\n      imageMargin.top -\n      imageMargin.bottom -\n      SAFETY_HEIGHT;\n\n    // Skip measure if image data not present yet\n    if (!this.image) return { width: 0, height: 0 };\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_UNDEFINED\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(pageArea, scaledHeight) };\n    }\n\n    if (\n      heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n      (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n        widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n    ) {\n      return { width: Math.min(height * this.ratio, width) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      const scaledHeight = width / this.ratio;\n      return { height: Math.min(height, pageArea, scaledHeight) };\n    }\n\n    if (\n      widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n      heightMode === Yoga.MEASURE_MODE_AT_MOST\n    ) {\n      if (this.ratio > 1) {\n        return {\n          width: width,\n          height: Math.min(width / this.ratio, height),\n        };\n      } else {\n        return {\n          width: Math.min(height * this.ratio, width),\n          height: height,\n        };\n      }\n    }\n\n    return { height, width };\n  }\n\n  get ratio() {\n    return this.image.data ? this.image.width / this.image.height : 1;\n  }\n\n  get src() {\n    const src = this.props.src || this.props.source;\n    return typeof src === 'string' ? { uri: src } : src;\n  }\n\n  async fetch() {\n    const { cache, safePath, allowDangerousPaths } = this.props;\n\n    if (!this.src) {\n      warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n      return;\n    }\n\n    try {\n      this.image = await resolveImage(this.src, {\n        cache,\n        safePath,\n        allowDangerousPaths,\n      });\n    } catch (e) {\n      this.image = { width: 0, height: 0 };\n      console.warn(e.message);\n    }\n  }\n\n  clone() {\n    const clone = super.clone();\n    clone.image = this.image;\n    return clone;\n  }\n\n  async onAppendDynamically() {\n    await this.fetch();\n  }\n\n  renderImage() {\n    const padding = this.padding;\n    const { left, top } = this.getAbsoluteLayout();\n    const { opacity, objectPositionX, objectPositionY } = this.style;\n\n    this.root.instance.save();\n\n    // Clip path to keep image inside border radius\n    this.clip();\n\n    if (this.image.data) {\n      const { width, height, xOffset, yOffset } = resolveObjectFit(\n        this.style.objectFit,\n        this.width - padding.left - padding.right,\n        this.height - padding.top - padding.bottom,\n        this.image.width,\n        this.image.height,\n        objectPositionX,\n        objectPositionY,\n      );\n\n      if (width !== 0 && height !== 0) {\n        this.root.instance\n          .fillOpacity(opacity)\n          .image(\n            this.image.data,\n            left + padding.left + xOffset,\n            top + padding.top + yOffset,\n            { width, height },\n          );\n      } else {\n        warning(\n          false,\n          `Image with src '${\n            this.props.src\n          }' skipped due to invalid dimensions`,\n        );\n      }\n    }\n\n    this.root.instance.restore();\n  }\n\n  async render() {\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.renderImage();\n    this.drawBorders();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n\n    this.root.instance.restore();\n  }\n}\n\nexport default Image;\n","import wrapPages from 'page-wrapping';\n\nimport Font from '../font';\nimport { fetchEmojis } from '../utils/emoji';\n\nclass Document {\n  static defaultProps = {\n    author: null,\n    keywords: null,\n    subject: null,\n    title: null,\n  };\n\n  constructor(root, props) {\n    this.root = root;\n    this.style = {};\n    this.props = props;\n    this.children = [];\n    this.subpages = [];\n  }\n\n  get name() {\n    return 'Document';\n  }\n\n  appendChild(child) {\n    child.parent = this;\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const i = this.children.indexOf(child);\n    child.parent = null;\n    this.children.slice(i, 1);\n  }\n\n  addMetaData() {\n    const { title, author, subject, keywords, creator, producer } = this.props;\n\n    // The object keys need to start with a capital letter by the PDF spec\n    if (title) this.root.instance.info.Title = title;\n    if (author) this.root.instance.info.Author = author;\n    if (subject) this.root.instance.info.Subject = subject;\n    if (keywords) this.root.instance.info.Keywords = keywords;\n\n    this.root.instance.info.Creator = creator || 'react-pdf';\n    this.root.instance.info.Producer = producer || 'react-pdf';\n  }\n\n  async loadFonts() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.style && node.style.fontFamily) {\n        promises.push(Font.load(node.style, this.root.instance));\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadEmojis() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (typeof node === 'string') {\n        promises.push(...fetchEmojis(node));\n      } else if (typeof node.value === 'string') {\n        promises.push(...fetchEmojis(node.value));\n      } else if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadImages() {\n    const promises = [];\n    const listToExplore = this.children.slice(0);\n\n    while (listToExplore.length > 0) {\n      const node = listToExplore.shift();\n\n      if (node.name === 'Image') {\n        promises.push(node.fetch());\n      }\n\n      if (node.children) {\n        node.children.forEach(childNode => {\n          listToExplore.push(childNode);\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  }\n\n  async loadAssets() {\n    await Promise.all([this.loadFonts(), this.loadImages()]);\n  }\n\n  applyProps() {\n    this.children.forEach(child => child.applyProps());\n  }\n\n  update(newProps) {\n    this.props = newProps;\n  }\n\n  getLayoutData() {\n    return {\n      type: this.name,\n      children: this.subpages.map(c => c.getLayoutData()),\n    };\n  }\n\n  async wrapPages() {\n    let pageCount = 1;\n    const pages = [];\n\n    for (const page of this.children) {\n      const wrapArea = page.size.height - (page.style.paddingBottom || 0);\n      if (page.wrap) {\n        const subpages = await wrapPages(page, wrapArea, pageCount);\n\n        pageCount += subpages.length;\n\n        pages.push(...subpages);\n      } else {\n        page.height = page.size.height;\n        pages.push(page);\n      }\n    }\n\n    return pages;\n  }\n\n  async renderPages() {\n    this.subpages = await this.wrapPages();\n\n    for (let j = 0; j < this.subpages.length; j++) {\n      // Update dynamic text nodes with total pages info\n      this.subpages[j].renderDynamicNodes(\n        {\n          pageNumber: j + 1,\n          totalPages: this.subpages.length,\n        },\n        node => node.name === 'Text',\n      );\n      await this.subpages[j].render();\n    }\n\n    return this.subpages;\n  }\n\n  async render() {\n    try {\n      this.addMetaData();\n      this.applyProps();\n      await this.loadEmojis();\n      await this.loadAssets();\n      await this.renderPages();\n      this.root.instance.end();\n      Font.reset();\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default Document;\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(instance) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        instance[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import Base from './Base';\n\nimport painter from '../utils/painter';\nimport warning from '../utils/warning';\n\nclass Canvas extends Base {\n  static defaultProps = {\n    style: {},\n    wrap: false,\n  };\n\n  get name() {\n    return 'Canvas';\n  }\n\n  async render() {\n    const { left, top, width, height } = this.getAbsoluteLayout();\n\n    const availableWidth = width - this.paddingLeft - this.paddingRight;\n    const availableHeight = height - this.paddingTop - this.paddingBottom;\n\n    warning(\n      availableWidth && availableHeight,\n      'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n    );\n\n    this.root.instance.save();\n    this.applyTransformations();\n    this.drawBackgroundColor();\n    this.drawBorders();\n    this.clip();\n\n    this.root.instance.translate(\n      left + this.paddingLeft,\n      top + this.paddingTop,\n    );\n\n    if (this.props.paint) {\n      this.props.paint(\n        painter(this.root.instance),\n        availableWidth,\n        availableHeight,\n      );\n    }\n\n    this.root.instance.restore();\n\n    if (this.props.debug) {\n      this.debug();\n    }\n  }\n}\n\nexport default Canvas;\n","import Root from './Root';\nimport Page from './Page';\nimport View from './View';\nimport Text from './Text';\nimport Link from './Link';\nimport Note from './Note';\nimport Image from './Image';\nimport Document from './Document';\nimport Canvas from './Canvas';\nimport TextInstance from './TextInstance';\n\nconst constructors = {\n  ROOT: Root,\n  PAGE: Page,\n  TEXT: Text,\n  LINK: Link,\n  VIEW: View,\n  NOTE: Note,\n  IMAGE: Image,\n  CANVAS: Canvas,\n  DOCUMENT: Document,\n  TEXT_INSTANCE: TextInstance,\n};\n\nfunction createInstance(element, root) {\n  const { type, props = {} } = element;\n\n  if (constructors[type]) {\n    return new constructors[type](root, props);\n  }\n\n  throw new Error(`Invalid element of type ${type} passed to PDF renderer`);\n}\n\nexport { createInstance };\n","const propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\nimport { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\n// If the Link has a strign child or render prop, substitute the instance by a Text,\n// that will ultimately render the inline Link via the textkit PDF renderer.\nconst shouldReplaceLink = (type, props) =>\n  type === 'LINK' &&\n  (typeof props.children === 'string' ||\n    typeof props.children === 'number' ||\n    Array.isArray(props.children) ||\n    props.render);\n\nconst PDFRenderer = ReactFiberReconciler({\n  supportsMutation: true,\n  appendInitialChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  createInstance(type, props, internalInstanceHandle) {\n    const instanceType = shouldReplaceLink(type, props) ? 'TEXT' : type;\n    return createInstance(\n      { type: instanceType, props },\n      internalInstanceHandle,\n    );\n  },\n\n  createTextInstance(text, rootContainerInstance) {\n    return createInstance(\n      { type: 'TEXT_INSTANCE', props: text },\n      rootContainerInstance,\n    );\n  },\n\n  finalizeInitialChildren(element, type, props) {\n    return false;\n  },\n\n  getPublicInstance(instance) {\n    return instance;\n  },\n\n  prepareForCommit() {\n    // Noop\n  },\n\n  prepareUpdate(element, type, oldProps, newProps) {\n    return !propsEqual(oldProps, newProps);\n  },\n\n  resetAfterCommit() {\n    // Noop\n  },\n\n  resetTextContent(element) {\n    // Noop\n  },\n\n  getRootHostContext() {\n    return emptyObject;\n  },\n\n  getChildHostContext() {\n    return emptyObject;\n  },\n\n  shouldSetTextContent(type, props) {\n    return false;\n  },\n\n  now: Date.now,\n\n  useSyncScheduling: true,\n\n  appendChild(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  appendChildToContainer(parentInstance, child) {\n    parentInstance.appendChild(child);\n  },\n\n  insertBefore(parentInstance, child, beforeChild) {\n    parentInstance.appendChildBefore(child, beforeChild);\n  },\n\n  removeChild(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  removeChildFromContainer(parentInstance, child) {\n    parentInstance.removeChild(child);\n  },\n\n  commitTextUpdate(textInstance, oldText, newText) {\n    textInstance.update(newText);\n  },\n\n  commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n    instance.update(newProps);\n  },\n});\n\nexport default PDFRenderer;\n","import BlobStream from 'blob-stream';\nimport PDFRenderer from './renderer';\nimport StyleSheet from './stylesheet';\nimport { createInstance } from './elements';\nimport Font from './font';\nimport { version } from '../package.json';\n\nconst View = 'VIEW';\nconst Text = 'TEXT';\nconst Link = 'LINK';\nconst Page = 'PAGE';\nconst Note = 'NOTE';\nconst Image = 'IMAGE';\nconst Document = 'DOCUMENT';\nconst Canvas = 'CANVAS';\n\nconst pdf = input => {\n  const container = createInstance({ type: 'ROOT' });\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function callOnRender(params = {}) {\n    if (container.document.props.onRender) {\n      const layoutData = container.document.getLayoutData();\n      container.document.props.onRender({ ...params, layoutData });\n    }\n  }\n\n  function isDirty() {\n    return container.isDirty;\n  }\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    await container.render();\n\n    const stream = container.instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n\n          callOnRender({ blob });\n\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  function toBuffer() {\n    callOnRender();\n\n    container.render();\n\n    return container.instance;\n  }\n\n  function toString() {\n    let result = '';\n    container.render();\n\n    return new Promise((resolve, reject) => {\n      try {\n        container.instance.on('data', function(buffer) {\n          result += buffer;\n        });\n\n        container.instance.on('end', function() {\n          callOnRender({ string: result });\n          resolve(result);\n        });\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  return {\n    isDirty,\n    updateContainer,\n    toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  PDFRenderer,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  createInstance,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport const renderToStream = function(element) {\n  return pdf(element).toBuffer();\n};\n\nexport const renderToFile = function(element, filePath, callback) {\n  const output = renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  createInstance,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFRenderer,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  createInstance,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["Root","constructor","isDirty","document","instance","appendChild","child","removeChild","markDirty","PDFDocument","autoFirstPage","this","render","upperFirst","value","charAt","toUpperCase","slice","isPercent","exec","matchPercent","match","parseFloat","percent","absValue","Math","abs","absPercent","Node","parent","children","computed","layout","Yoga","createDefault","push","insertChild","getChildCount","appendChildBefore","beforeChild","index","indexOf","splice","removeAllChilds","i","length","remove","setDimension","attr","fixedMethod","percentMethod","setPosition","edge","setPositionPercent","setPadding","setPaddingPercent","setMargin","setMarginPercent","setBorder","Error","getAbsoluteLayout","parentLayout","left","top","height","width","copyStyle","node","calculateLayout","isEmpty","onAppendDynamically","getPositionType","POSITION_TYPE_ABSOLUTE","getComputedTop","getComputedLeft","getComputedRight","getComputedBottom","getComputedWidth","getMinWidth","getMaxWidth","getComputedHeight","getMinHeight","getMaxHeight","getComputedPadding","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedMargin","getComputedBorder","paddingTop","right","paddingRight","bottom","paddingBottom","paddingLeft","marginTop","marginRight","marginBottom","marginLeft","setPositionType","POSITION_TYPE_RELATIVE","yogaValue","prop","isAlignType","ALIGN_AUTO","DISPLAY_FLEX","DISPLAY_NONE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","ALIGN_STRETCH","ALIGN_BASELINE","JUSTIFY_SPACE_AROUND","ALIGN_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","ALIGN_SPACE_BETWEEN","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","JUSTIFY_FLEX_START","ALIGN_FLEX_START","JUSTIFY_FLEX_END","ALIGN_FLEX_END","JUSTIFY_CENTER","ALIGN_CENTER","parseValue","unit","undefined","parseScalar","result","scalar","isBorderStyle","key","matchBorderShorthand","processBorders","isBoxModelStyle","matchBoxModel","processBoxModel","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","isFontWeightStyle","processFontWeight","toLowerCase","isObjectPositionStyle","matchObjectPosition","processObjectPosition","isTransformOriginStyle","matchTransformOrigin","transformOffsetKeywords","processTransformOrigin","hasOwnProperty","Object","prototype","styleShorthands","margin","marginHorizontal","marginVertical","padding","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandStyles","style","propsArray","keys","resolvedStyle","verticalAlign","expandedProps","propName","call","transformStyles","expandedStyles","resolved","create","styles","flatten","input","Array","isArray","reduce","acc","s","forEach","resolveMediaQueries","container","test","matchMedia","resolve","absoluteFillObject","position","hairlineWidth","Debug","debug","root","save","debugContent","debugPadding","debugMargin","debugText","debugOrigin","restore","transform","origin","circle","fill","stroke","roundedWidth","round","roundedHeight","fontSize","opacity","fillColor","text","max","rect","KAPPA","sqrt","drawBorders","rtr","min","rtl","rbr","rbl","strokeOpacity","clipBorderTop","fillBorderTop","clipBorderRight","fillBorderRight","clipBorderBottom","fillBorderBottom","clipBorderLeft","fillBorderLeft","ctx","moveTo","lineTo","c0","bezierCurveTo","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","closePath","clip","trSlope","strokeColor","lineWidth","dash","space","undash","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","topLeftCoordX","bottomLeftXCoord","Clipping","ctr","cbr","cbl","ctl","getRotation","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","element","rotate","scale","translate","Transformations","applyTransformations","re","printWarning","format","args","argIndex","message","replace","console","error","x","__DEV__","process","env","NODE_ENV","warning","condition","inheritedProperties","Base","props","merge","defaultProps","page","wrap","break","fixed","minPresenceAhead","percentX","percentY","update","newProps","applyProps","resolveStyles","toPairsIn","map","attribute","applyStyle","size","orientation","ownStyles","StyleSheet","pick","setter","isFunction","getLayoutData","type","name","c","drawBackgroundColor","backgroundColor","fillOpacity","clone","onNodeSplit","absoluteChilds","filter","absolute","nonAbsoluteChilds","assign","Borders","Transform","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","range","steps","from","ceil","_","matchPercentage","Ruler","getRulerWidth","hasHorizontalRuler","ruler","horizontalRuler","hasVerticalRuler","verticalRuler","getHorizontalSteps","horizontalRulerSteps","rulerSteps","percentage","getVerticalSteps","verticalRulerSteps","renderRuler","drawHorizontalRuler","drawVerticalRuler","offset","hRange","step","vRange","TextInstance","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","getPageSize","Page","_size","resetMargins","rulerWidth","dimension","elements","Fragment","createInstance","addDynamicChild","cb","listToExplore","shift","renderDynamicNodes","super","addPage","renderChildren","View","fetchFont","async","src","options","response","fetch","buffer","arrayBuffer","Buffer","FontSource","fontFamily","fontStyle","fontWeight","data","loading","isUrl","headers","body","method","fontkit","Promise","reject","open","err","Font","family","sources","register","descriptor","styleSources","exactFit","find","res","leftOffset","rightOffset","lt","gt","emojiSource","registerEmojiSource","url","getEmojiSource","hyphenationCallback","registerHyphenationCallback","callback","getHyphenationCallback","fonts","font","getRegisteredFonts","getRegisteredFontFamilies","getFont","standardFonts","includes","load","doc","reset","clear","emoji","hyphenation","PROTOCOL_REGEXP","getURL","StandardFont","PDFFont","str","encoded","positions","encode","stringIndices","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","ascender","descender","lineGap","Run","fontCache","getOrCreateFont","shouldFallbackToFont","fallbackFont","getRuns","string","runs","lastFont","lastIndex","run","defaultFont","attributes","char","start","end","codePointAt","createHyphenator","require","pattern","SOFT_HYPHEN_HEX","hyphen","cache","calculateParts","word","split","hyphenateWord","parts","prev","next","toString","LinkedList","head","tail","listSize","isLinked","first","last","toArray","fun","contains","n","at","listLength","insertAfter","newNode","insertBefore","unshift","pop","linebreak","nodes","lines","settings","demerits","line","flagged","fitness","tolerance","activeNodes","sum","stretch","shrink","lineLengths","breaks","tmp","Infinity","breakpoint","ratio","fitnessClass","totals","previous","computeCost","active","currentLine","lineLength","infinity","computeSum","breakPointIndex","penalty","mainLoop","badness","tmpSum","candidate","candidates","currentClass","pow","reverse","glue","box","hyphenated","INFINITY","getNextBreakpoint","subnodes","widths","lineNumber","minimumBadness","calculateRatio","applyBestFit","count","breakpoints","HYPHEN","TOLERANCE_STEPS","TOLERANCE_LIMIT","opts","getNodes","glyphString","syllables","align","hyphenPenalty","glyphStart","glyphIndexForStringIndex","glyphEnd","syllable","trim","breakLines","breakPoint","prevNode","copy","insertGlyph","lastLine","suggestLineBreak","availableWidths","paragraphStyle","bestFit","shrinkWhitespaceFactor","before","after","LayoutEngine","BaseLayoutEngine","hyphenationPenalty","scriptItemizer","decorationEngine","textDecorationEngine","fontSubstitutionEngine","wordHyphenation","lineBreaker","justificationEngine","PNG","isValid","e","MARKERS","JPEG","readUInt16BE","marker","pos","isBuffer","renderServerGIF","pngBuffer","sharp","toBuffer","blob","toBufferCb","renderGIF","GIF","TypeError","imagePromise","then","apply","catch","finally","createCache","limit","get","set","IMAGE_CACHE","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","isDangerousLocalPath","filename","safePath","absoluteSafePath","startsWith","fetchLocalFile","allowDangerousPaths","fs","readFile","fetchRemoteFile","uri","isValidFormat","lower","guessFormat","isCompatibleBase64","getImage","extension","resolveBase64Image","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","isGif","resolveImageFromUrl","resolveImage","cacheKey","image","emojis","regex","emojiRegex","reflect","promise","v","makeFetchEmojiImage","_removeNoColor","getCodePoints","join","buildEmojiUrl","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragments","fragment","emojiSize","chunk","Attachment","CHARACTER","attachment","yOffset","floor","String","fromCharCode","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","PREPROCESSORS","capitalize","l","transformText","transformation","getFragments","color","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","obj","link","characterSpacing","underlineStyle","underline","underlineColor","preprocessor","getAttributedString","AttributedString","fromFragments","renderOpts","outlineLines","PDFRenderer","createPDFRenderer","Rect","Text","attributedString","layoutEngine","setMeasureFunc","measureText","bind","href","blocks","block","lineIndexAtHeight","counter","heightAtLineIndex","layoutText","containerHeight","Path","Container","linesCount","maxLines","widthMode","heightMode","MEASURE_MODE_EXACTLY","flexGrow","NaN","linesHeight","MEASURE_MODE_AT_MOST","linesWidth","wrapHeight","orphans","widows","linesQuantity","sliceHeight","slicedLine","slicedLineIndex","initialX","y","Link","Note","note","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","SAFETY_HEIGHT","Image","measureImage","shouldGrow","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","source","warn","renderImage","objectFit","Document","subpages","addMetaData","title","author","subject","keywords","creator","producer","info","Title","Author","Subject","Keywords","Creator","Producer","childNode","all","loadFonts","loadImages","pageCount","pages","wrapArea","wrapPages","j","pageNumber","totalPages","loadEmojis","loadAssets","renderPages","availableMethods","painter","p","Canvas","availableWidth","availableHeight","paint","constructors","ROOT","PAGE","TEXT","LINK","VIEW","NOTE","IMAGE","CANVAS","DOCUMENT","TEXT_INSTANCE","propsEqual","a","b","oldPropsKeys","newPropsKeys","emptyObject","shouldReplaceLink","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","internalInstanceHandle","createTextInstance","rootContainerInstance","finalizeInitialChildren","getPublicInstance","prepareForCommit","prepareUpdate","oldProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChildToContainer","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","pdf","mountNode","createContainer","callOnRender","params","onRender","layoutData","updateContainer","toBlob","stream","pipe","BlobStream","on","renderToStream","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version"],"mappings":"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"}