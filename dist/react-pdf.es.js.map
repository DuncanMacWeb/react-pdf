{"version":3,"file":"react-pdf.es.js","sources":["../src/utils/propsEqual.js","../src/renderer.js","../src/constants.js","../src/stylesheet/transformStyles.js","../src/font/font.js","../src/font/emoji.js","../src/font/standard.js","../src/font/hyphenation.js","../src/utils/warning.js","../src/font/index.js","../src/node/isImage.js","../src/utils/png.js","../src/utils/jpeg.js","../src/utils/cache.js","../src/image/resolveImage.js","../src/image/getSource.js","../src/image/fetchImage.js","../src/text/emoji.js","../src/layout/resolveAssets.js","../src/stylesheet/flatten.js","../src/stylesheet/expandStyles.js","../src/stylesheet/transformUnits.js","../src/stylesheet/resolveMediaQueries.js","../src/layout/resolveStyles.js","../src/layout/resolveZIndex.js","../src/node/hasVerticalRuler.js","../src/node/hasHorizontalRuler.js","../src/layout/resolveRulers.js","../src/utils/matchPercent.js","../src/node/getOrigin.js","../src/layout/resolveOrigins.js","../src/page/getOrientation.js","../src/page/isLandscape.js","../src/page/getSize.js","../src/utils/assocIfNil.js","../src/layout/resolvePageSizes.js","../src/utils/firstPass.js","../src/node/getMargin.js","../src/node/getPadding.js","../src/node/getPosition.js","../src/node/getDimension.js","../src/node/getBorderWidth.js","../src/utils/upperFirst.js","../src/node/setYogaValue.js","../src/node/setFlex.js","../src/node/setDisplay.js","../src/node/setOverflow.js","../src/node/setFlexWrap.js","../src/node/setFlexGrow.js","../src/node/setFlexBasis.js","../src/node/setAlign.js","../src/node/setAlignSelf.js","../src/node/setFlexShrink.js","../src/node/setAspectRatio.js","../src/node/setAlignContent.js","../src/node/setPositionType.js","../src/node/setFlexDirection.js","../src/node/setJustifyContent.js","../src/node/setMargin.js","../src/node/setPadding.js","../src/node/setBorderWidth.js","../src/node/setPosition.js","../src/node/setDimension.js","../src/node/isText.js","../src/node/isNote.js","../src/node/isPage.js","../src/node/isCanvas.js","../src/text/standardFont.js","../src/text/fontSubstitution.js","../src/utils/capitalize.js","../src/text/ignorableChars.js","../src/node/isTextInstance.js","../src/text/getAttributedString.js","../src/text/layoutText.js","../src/text/linesWidth.js","../src/text/linesHeight.js","../src/text/measureText.js","../src/image/getRatio.js","../src/page/isHeightAuto.js","../src/image/measureImage.js","../src/canvas/measureCanvas.js","../src/layout/resolveDimensions.js","../src/layout/resolveTextLayout.js","../src/layout/resolveInheritance.js","../src/node/removeMargins.js","../src/layout/resolvePageMargins.js","../src/node/getNodesHeight.js","../src/node/shouldBreak.js","../src/page/getContentArea.js","../src/layout/resolvePageBreaks.js","../src/node/split.js","../src/layout/resolvePageSplitting.js","../src/layout/resolvePageWrapping.js","../src/layout/resolveNoteChildren.js","../src/layout/resolvePagePaddings.js","../src/layout/resolvePercentRadius.js","../src/layout/resolvePercentHeight.js","../src/node/isLink.js","../src/layout/resolveLinkSubstitution.js","../src/layout/resolveAbsoluteCoordinates.js","../src/utils/asyncCompose.js","../src/layout/index.js","../src/pdf/save.js","../src/pdf/restore.js","../src/pdf/renderText.js","../src/pdf/renderPage.js","../src/utils/url.js","../src/link/getSource.js","../src/pdf/renderLink.js","../src/pdf/renderNote.js","../src/pdf/clipNode.js","../src/image/resolveObjectFit.js","../src/pdf/renderImage.js","../src/canvas/painter.js","../src/pdf/renderCanvas.js","../src/pdf/renderRulers.js","../src/pdf/addMetadata.js","../src/pdf/renderDebug.js","../src/pdf/renderBorders.js","../src/pdf/renderBackground.js","../src/pdf/applyTransformations.js","../src/pdf/render.js","../src/stylesheet/index.js","../src/index.js","../src/node.js"],"sourcesContent":["/**\n * Checks if two sets of props are equal (recursively)\n *\n * @param {Object} props A\n * @param {Object} props B\n * @returns {Boolean} props equals?\n *\n */\nconst propsEqual = (a, b) => {\n  const oldPropsKeys = Object.keys(a);\n  const newPropsKeys = Object.keys(b);\n\n  if (oldPropsKeys.length !== newPropsKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < oldPropsKeys.length; i++) {\n    const propName = oldPropsKeys[i];\n\n    if (propName === 'render') {\n      if (!a[propName] !== !b[propName]) {\n        return false;\n      }\n      continue;\n    }\n\n    if (propName !== 'children' && a[propName] !== b[propName]) {\n      if (\n        typeof a[propName] === 'object' &&\n        typeof b[propName] === 'object' &&\n        propsEqual(a[propName], b[propName])\n      ) {\n        continue;\n      }\n\n      return false;\n    }\n\n    if (\n      propName === 'children' &&\n      (typeof a[propName] === 'string' || typeof b[propName] === 'string')\n    ) {\n      return a[propName] === b[propName];\n    }\n  }\n\n  return true;\n};\n\nexport default propsEqual;\n","'use strict';\n\nimport ReactFiberReconciler from 'react-reconciler';\n// import { createInstance } from './elements';\n\nimport propsEqual from './utils/propsEqual';\n\nconst emptyObject = {};\n\nconst createRenderer = onChange => {\n  return ReactFiberReconciler({\n    supportsMutation: true,\n\n    appendInitialChild(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    createInstance(type, { style, children, ...props }) {\n      return {\n        type,\n        box: {},\n        style: style || {},\n        props: props || {},\n        children: [],\n      };\n    },\n\n    createTextInstance(text, rootContainerInstance) {\n      return { type: 'TEXT_INSTANCE', value: text };\n    },\n\n    finalizeInitialChildren(element, type, props) {\n      return false;\n    },\n\n    getPublicInstance(instance) {\n      return instance;\n    },\n\n    prepareForCommit() {\n      // Noop\n    },\n\n    prepareUpdate(element, type, oldProps, newProps) {\n      return !propsEqual(oldProps, newProps);\n    },\n\n    resetAfterCommit(a, b, c) {\n      // Noop\n    },\n\n    resetTextContent(element) {\n      // Noop\n    },\n\n    getRootHostContext() {\n      return emptyObject;\n    },\n\n    getChildHostContext() {\n      return emptyObject;\n    },\n\n    shouldSetTextContent(type, props) {\n      return false;\n    },\n\n    now: Date.now,\n\n    useSyncScheduling: true,\n\n    appendChild(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    appendChildToContainer(parentInstance, child) {\n      parentInstance.children.push(child);\n      onChange();\n    },\n\n    insertBefore(parentInstance, child, beforeChild) {\n      const index = parentInstance.children.indexOf(beforeChild);\n      if (index !== -1 && child)\n        parentInstance.children.splice(index, 0, child);\n      onChange();\n    },\n\n    removeChild(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n      onChange();\n    },\n\n    removeChildFromContainer(parentInstance, child) {\n      const index = parentInstance.children.indexOf(child);\n      if (index !== -1) parentInstance.children.splice(index, 1);\n      onChange();\n    },\n\n    commitTextUpdate(textInstance, oldText, newText) {\n      textInstance.value = newText;\n      onChange();\n    },\n\n    commitUpdate(instance, updatePayload, type, oldProps, newProps) {\n      const { style, ...props } = newProps;\n      instance.props = props;\n      instance.style = style;\n      onChange();\n    },\n  });\n};\n\nexport default createRenderer;\n","export const VIEW = 'VIEW';\nexport const TEXT = 'TEXT';\nexport const LINK = 'LINK';\nexport const PAGE = 'PAGE';\nexport const NOTE = 'NOTE';\nexport const IMAGE = 'IMAGE';\nexport const DOCUMENT = 'DOCUMENT';\nexport const CANVAS = 'CANVAS';\nexport const TEXT_INSTANCE = 'TEXT_INSTANCE';\n\nexport const DPI = 72; // 72pt per inch.\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Common_weight_name_mapping\nexport const FONT_WEIGHTS = {\n  thin: 100,\n  hairline: 100,\n  ultralight: 200,\n  extralight: 200,\n  light: 300,\n  normal: 400,\n  medium: 500,\n  semibold: 600,\n  demibold: 600,\n  bold: 700,\n  ultrabold: 800,\n  extrabold: 800,\n  heavy: 900,\n  black: 900,\n};\n\nexport const PAGE_SIZES = {\n  '4A0': [4767.87, 6740.79],\n  '2A0': [3370.39, 4767.87],\n  A0: [2383.94, 3370.39],\n  A1: [1683.78, 2383.94],\n  A2: [1190.55, 1683.78],\n  A3: [841.89, 1190.55],\n  A4: [595.28, 841.89],\n  A5: [419.53, 595.28],\n  A6: [297.64, 419.53],\n  A7: [209.76, 297.64],\n  A8: [147.4, 209.76],\n  A9: [104.88, 147.4],\n  A10: [73.7, 104.88],\n  B0: [2834.65, 4008.19],\n  B1: [2004.09, 2834.65],\n  B2: [1417.32, 2004.09],\n  B3: [1000.63, 1417.32],\n  B4: [708.66, 1000.63],\n  B5: [498.9, 708.66],\n  B6: [354.33, 498.9],\n  B7: [249.45, 354.33],\n  B8: [175.75, 249.45],\n  B9: [124.72, 175.75],\n  B10: [87.87, 124.72],\n  C0: [2599.37, 3676.54],\n  C1: [1836.85, 2599.37],\n  C2: [1298.27, 1836.85],\n  C3: [918.43, 1298.27],\n  C4: [649.13, 918.43],\n  C5: [459.21, 649.13],\n  C6: [323.15, 459.21],\n  C7: [229.61, 323.15],\n  C8: [161.57, 229.61],\n  C9: [113.39, 161.57],\n  C10: [79.37, 113.39],\n  RA0: [2437.8, 3458.27],\n  RA1: [1729.13, 2437.8],\n  RA2: [1218.9, 1729.13],\n  RA3: [864.57, 1218.9],\n  RA4: [609.45, 864.57],\n  SRA0: [2551.18, 3628.35],\n  SRA1: [1814.17, 2551.18],\n  SRA2: [1275.59, 1814.17],\n  SRA3: [907.09, 1275.59],\n  SRA4: [637.8, 907.09],\n  EXECUTIVE: [521.86, 756.0],\n  FOLIO: [612.0, 936.0],\n  LEGAL: [612.0, 1008.0],\n  LETTER: [612.0, 792.0],\n  TABLOID: [792.0, 1224.0],\n};\n\nexport const PORTRAIT = 'portrait';\nexport const LANDSCAPE = 'landscape';\n\nexport const INHERITED_PROPERTIES = [\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'opacity',\n  'textDecoration',\n  'lineHeight',\n  'textAlign',\n  'visibility',\n  'wordSpacing',\n];\n\nexport const RULER_WIDTH = 13;\nexport const RULER_COLOR = 'white';\nexport const RULER_FONT_SIZE = 6;\nexport const DEFAULT_RULER_STEPS = 50;\nexport const LINE_WIDTH = 0.5;\nexport const LINE_COLOR = 'gray';\nexport const GRID_COLOR = '#ababab';\n","import * as R from 'ramda';\n\nimport { FONT_WEIGHTS } from '../constants';\n\nconst BOX_MODEL_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh)?/g;\nconst OBJECT_POSITION_REGEX = /\\d+(px|in|mm|cm|pt|%|vw|vh)?/g;\nconst BORDER_SHORTHAND_REGEX = /(\\d+(px|in|mm|cm|pt|vw|vh)?)\\s(\\S+)\\s(\\S+)/;\nconst TRANSFORM_ORIGIN_REGEX = /(-?\\d+(px|in|mm|cm|pt|%|vw|vh)?)|top|right|bottom|left|center/g;\n\nconst matchBoxModel = R.match(BOX_MODEL_REGEX);\nconst matchObjectPosition = R.match(OBJECT_POSITION_REGEX);\nconst matchBorderShorthand = R.match(BORDER_SHORTHAND_REGEX);\nconst matchTransformOrigin = R.match(TRANSFORM_ORIGIN_REGEX);\n\nconst isFontWeightStyle = key => key.match(/^fontWeight/);\n\nconst isBorderStyle = (key, value) =>\n  key.match(/^border(Top|Right|Bottom|Left)(Color|Width|Style)/) &&\n  typeof value === 'string';\n\nconst isBoxModelStyle = (key, value) =>\n  key.match(/^(margin)|(padding)/) && typeof value === 'string';\n\nconst isObjectPositionStyle = (key, value) =>\n  key.match(/^objectPosition/) && typeof value === 'string';\n\nconst isTransformOriginStyle = (key, value) =>\n  key.match(/^transformOrigin/) && typeof value === 'string';\n\nconst processBorders = (key, value) => {\n  const match = matchBorderShorthand(value);\n\n  if (match) {\n    if (key.match(/.Color/)) {\n      return match[4];\n    } else if (key.match(/.Style/)) {\n      return match[3];\n    } else if (key.match(/.Width/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst processBoxModel = (key, value) => {\n  const match = matchBoxModel(value);\n\n  if (match) {\n    if (key.match(/.Top/)) {\n      return match[0];\n    } else if (key.match(/.Right/)) {\n      return match[1] || match[0];\n    } else if (key.match(/.Bottom/)) {\n      return match[2] || match[0];\n    } else if (key.match(/.Left/)) {\n      return match[3] || match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nexport const processFontWeight = (key, value) => {\n  if (!value) return FONT_WEIGHTS.normal;\n  if (typeof value === 'number') return value;\n  return FONT_WEIGHTS[value.toLowerCase()];\n};\n\nexport const processObjectPosition = (key, value) => {\n  const match = matchObjectPosition(value);\n\n  if (match) {\n    if (key.match(/.X/)) {\n      return match[0];\n    } else if (key.match(/.Y/)) {\n      return match[1];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n  }\n\n  return value;\n};\n\nconst transformOffsetKeywords = value => {\n  switch (value) {\n    case 'top':\n    case 'left':\n      return '0%';\n    case 'right':\n    case 'bottom':\n      return '100%';\n    case 'center':\n      return '50%';\n    default:\n      return value;\n  }\n};\n\n// Transforms shorthand transformOrigin values\nconst processTransformOrigin = (key, value) => {\n  const match = matchTransformOrigin(value);\n\n  if (match) {\n    let result;\n\n    if (key.match(/.X/)) {\n      result = match[0];\n    } else if (key.match(/.Y/)) {\n      result = match[1] || match[0];\n    } else {\n      throw new Error(`StyleSheet: Invalid '${value}' for '${key}'`);\n    }\n\n    return transformOffsetKeywords(result);\n  }\n\n  return value;\n};\n\nconst matchNumber = R.when(\n  R.is(String),\n  R.compose(\n    R.complement(R.isEmpty),\n    R.match(/^-?\\d*\\.?\\d*$/),\n  ),\n);\n\nconst castFloat = R.when(matchNumber, v => parseFloat(v, 10));\n\nconst transformStyles = style => {\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    resolvedStyle[key] = R.compose(\n      castFloat,\n      R.cond([\n        [isBorderStyle, processBorders],\n        [isBoxModelStyle, processBoxModel],\n        [isObjectPositionStyle, processObjectPosition],\n        [isTransformOriginStyle, processTransformOrigin],\n        [isFontWeightStyle, processFontWeight],\n        [R.T, R.always(value)],\n      ]),\n    )(key, value);\n  }\n\n  return resolvedStyle;\n};\n\nexport default transformStyles;\n","import isUrl from 'is-url';\nimport fontkit from '@react-pdf/fontkit';\nimport fetch from 'cross-fetch';\n\nimport { processFontWeight } from '../stylesheet/transformStyles';\n\nconst fetchFont = async (src, options) => {\n  const response = await fetch(src, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nclass FontSource {\n  constructor(src, fontFamily, fontStyle, fontWeight, options) {\n    this.src = src;\n    this.fontFamily = fontFamily;\n    this.fontStyle = fontStyle || 'normal';\n    this.fontWeight = processFontWeight(fontWeight) || 400;\n\n    this.data = null;\n    this.loading = false;\n    this.options = options;\n  }\n\n  async load() {\n    this.loading = true;\n\n    if (BROWSER || isUrl(this.src)) {\n      const { headers, body, method = 'GET' } = this.options;\n      const data = await fetchFont(this.src, { method, body, headers });\n      this.data = fontkit.create(data);\n    } else {\n      this.data = await new Promise((resolve, reject) =>\n        fontkit.open(this.src, (err, data) =>\n          err ? reject(err) : resolve(data),\n        ),\n      );\n    }\n\n    this.loading = false;\n  }\n}\n\nclass Font {\n  static create(family) {\n    return new Font(family);\n  }\n\n  constructor(family) {\n    this.family = family;\n    this.sources = [];\n  }\n\n  register({ src, fontWeight, fontStyle, ...options }) {\n    this.sources.push(\n      new FontSource(src, this.fontFamily, fontStyle, fontWeight, options),\n    );\n  }\n\n  resolve(descriptor) {\n    const { fontWeight = 400, fontStyle = 'normal' } = descriptor;\n    const styleSources = this.sources.filter(s => s.fontStyle === fontStyle);\n\n    // Weight resolution. https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    const exactFit = styleSources.find(s => s.fontWeight === fontWeight);\n\n    if (exactFit) return exactFit;\n\n    let res;\n\n    if (fontWeight >= 400 && fontWeight <= 500) {\n      const leftOffset = styleSources.filter(s => s.fontWeight <= fontWeight);\n      const rightOffset = styleSources.filter(s => s.fontWeight > 500);\n      const fit = styleSources.filter(\n        s => s.fontWeight >= fontWeight && s.fontWeight < 500,\n      );\n\n      res = fit[0] || leftOffset[leftOffset.length - 1] || rightOffset[0];\n    }\n\n    const lt = styleSources.filter(s => s.fontWeight < fontWeight);\n    const gt = styleSources.filter(s => s.fontWeight > fontWeight);\n\n    if (fontWeight < 400) {\n      res = lt[lt.length - 1] || gt[0];\n    }\n\n    if (fontWeight > 500) {\n      res = gt[0] || lt[lt.length - 1];\n    }\n\n    if (!res) {\n      throw new Error(\n        `Could not resolve font for ${\n          this.fontFamily\n        }, fontWeight ${fontWeight}`,\n      );\n    }\n\n    return res;\n  }\n}\n\nexport default Font;\n","let emojiSource;\n\nexport const registerEmojiSource = ({ url, format = 'png' }) => {\n  emojiSource = { url, format };\n};\n\nexport const getEmojiSource = () => emojiSource;\n\nexport default {\n  registerEmojiSource,\n  getEmojiSource,\n};\n","export default [\n  'Courier',\n  'Courier-Bold',\n  'Courier-Oblique',\n  'Helvetica',\n  'Helvetica-Bold',\n  'Helvetica-Oblique',\n  'Times-Roman',\n  'Times-Bold',\n  'Times-Italic',\n];\n","let hyphenationCallback;\n\nexport const registerHyphenationCallback = callback => {\n  hyphenationCallback = callback;\n};\n\nexport const getHyphenationCallback = () => hyphenationCallback;\n\nexport default {\n  registerHyphenationCallback,\n  getHyphenationCallback,\n};\n","function printWarning(format, ...args) {\n  let argIndex = 0;\n  const message = 'Warning: ' + format.replace(/%s/g, () => args[argIndex++]);\n\n  if (typeof console !== 'undefined') {\n    console.error(message);\n  }\n\n  try {\n    throw new Error(message);\n  } catch (x) {}\n}\n\nconst __DEV__ = process.env.NODE_ENV !== 'production';\n\nconst warning = __DEV__\n  ? (condition, format, ...args) => {\n      if (format === undefined) {\n        throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n            'message argument',\n        );\n      }\n      if (!condition) {\n        printWarning(format, ...args);\n      }\n    }\n  : () => {};\n\nexport default warning;\n","import font from './font';\nimport emoji from './emoji';\nimport standardFonts from './standard';\nimport hyphenation from './hyphenation';\nimport warning from '../utils/warning';\n\nlet fonts = {};\n\nconst register = (src, data) => {\n  if (typeof src === 'object') {\n    data = src;\n  } else {\n    warning(\n      false,\n      'Font.register will not longer accept the font source as first argument. Please move it into the data object. For more info refer to https://react-pdf.org/fonts',\n    );\n\n    data.src = src;\n  }\n\n  const { family } = data;\n\n  if (!fonts[family]) {\n    fonts[family] = font.create(family);\n  }\n\n  // Bulk loading\n  if (data.fonts) {\n    for (let i = 0; i < data.fonts.length; i++) {\n      fonts[family].register({ family, ...data.fonts[i] });\n    }\n  } else {\n    fonts[family].register(data);\n  }\n};\n\nconst getRegisteredFonts = () => fonts;\n\nconst getRegisteredFontFamilies = () => Object.keys(fonts);\n\nconst getFont = descriptor => {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return null;\n\n  if (!fonts[fontFamily]) {\n    throw new Error(\n      `Font family not registered: ${fontFamily}. Please register it calling Font.register() method.`,\n    );\n  }\n\n  return fonts[fontFamily].resolve(descriptor);\n};\n\nconst load = async function(descriptor) {\n  const { fontFamily } = descriptor;\n  const isStandard = standardFonts.includes(fontFamily);\n\n  if (isStandard) return;\n\n  const font = getFont(descriptor);\n\n  // We cache the font to avoid fetching it many times\n  if (!font.data && !font.loading) {\n    await font.load();\n  }\n};\n\nconst reset = function() {\n  for (const font in fonts) {\n    if (fonts.hasOwnProperty(font)) {\n      fonts[font].data = null;\n    }\n  }\n};\n\nconst clear = function() {\n  fonts = {};\n};\n\nexport default {\n  register,\n  getRegisteredFonts,\n  getRegisteredFontFamilies,\n  getFont,\n  load,\n  clear,\n  reset,\n  ...emoji,\n  ...hyphenation,\n};\n","import * as R from 'ramda';\n\nimport { IMAGE } from '../constants';\n\n/**\n * Checks if node is image\n *\n * @param {Object} node\n * @returns {Boolean} is node image?\n */\nconst isImage = R.propEq('type', IMAGE);\n\nexport default isImage;\n","import PNG from '@react-pdf/png-js';\n\nPNG.isValid = function(data) {\n  try {\n    return !!new PNG(data);\n  } catch (e) {\n    return false;\n  }\n};\n\nexport default PNG;\n","// Extracted from https://github.com/devongovett/pdfkit/blob/master/lib/image/jpeg.coffee\n\nconst MARKERS = [\n  0xffc0,\n  0xffc1,\n  0xffc2,\n  0xffc3,\n  0xffc5,\n  0xffc6,\n  0xffc7,\n  0xffc8,\n  0xffc9,\n  0xffca,\n  0xffcb,\n  0xffcc,\n  0xffcd,\n  0xffce,\n  0xffcf,\n];\n\nclass JPEG {\n  data = null;\n  width = null;\n  height = null;\n\n  constructor(data) {\n    this.data = data;\n\n    if (data.readUInt16BE(0) !== 0xffd8) {\n      throw new Error('SOI not found in JPEG');\n    }\n\n    let marker;\n    let pos = 2;\n\n    while (pos < data.length) {\n      marker = data.readUInt16BE(pos);\n      pos += 2;\n      if (MARKERS.includes(marker)) {\n        break;\n      }\n      pos += data.readUInt16BE(pos);\n    }\n\n    if (!MARKERS.includes(marker)) {\n      throw new Error('Invalid JPEG.');\n    }\n\n    pos += 3;\n    this.height = data.readUInt16BE(pos);\n\n    pos += 2;\n    this.width = data.readUInt16BE(pos);\n  }\n}\n\nJPEG.isValid = function(data) {\n  if (!data || !Buffer.isBuffer(data) || data.readUInt16BE(0) !== 0xffd8) {\n    return false;\n  }\n\n  let marker;\n  let pos = 2;\n\n  while (pos < data.length) {\n    marker = data.readUInt16BE(pos);\n    pos += 2;\n    if (MARKERS.includes(marker)) {\n      break;\n    }\n    pos += data.readUInt16BE(pos);\n  }\n\n  if (!MARKERS.includes(marker)) {\n    return false;\n  }\n\n  return true;\n};\n\nexport default JPEG;\n","const createCache = ({ limit = 100 } = {}) => {\n  let cache = {};\n  let keys = [];\n\n  return {\n    get: key => cache[key],\n    set: (key, value) => {\n      keys.push(key);\n      if (keys.length > limit) {\n        delete cache[keys.shift()];\n      }\n      cache[key] = value;\n    },\n    reset: () => {\n      cache = {};\n      keys = [];\n    },\n    length: () => keys.length,\n  };\n};\n\nexport default createCache;\n","import fs from 'fs';\nimport url from 'url';\nimport path from 'path';\nimport fetch from 'cross-fetch';\n\nimport PNG from '../utils/png';\nimport JPEG from '../utils/jpeg';\nimport createCache from '../utils/cache';\n\nexport const IMAGE_CACHE = createCache({ limit: 30 });\n\nexport const getAbsoluteLocalPath = src => {\n  if (BROWSER) {\n    throw new Error('Cannot check local paths in client-side environment');\n  }\n\n  const { protocol, auth, host, port, hostname, path: pathname } = url.parse(\n    src,\n  );\n  const absolutePath = path.resolve(pathname);\n  if ((protocol && protocol !== 'file:') || auth || host || port || hostname) {\n    return undefined;\n  }\n  return absolutePath;\n};\n\nconst fetchLocalFile = src =>\n  new Promise((resolve, reject) => {\n    try {\n      if (BROWSER) {\n        return reject(new Error('Cannot fetch local file in this environemnt'));\n      }\n      const absolutePath = getAbsoluteLocalPath(src);\n      if (!absolutePath) {\n        return reject(new Error(`Cannot fetch non-local path: ${src}`));\n      }\n      fs.readFile(absolutePath, (err, data) =>\n        err ? reject(err) : resolve(data),\n      );\n    } catch (err) {\n      reject(err);\n    }\n  });\n\nconst fetchRemoteFile = async (uri, options) => {\n  const response = await fetch(uri, options);\n\n  const buffer = await (response.buffer\n    ? response.buffer()\n    : response.arrayBuffer());\n\n  return buffer.constructor.name === 'Buffer' ? buffer : Buffer.from(buffer);\n};\n\nconst isValidFormat = format => {\n  const lower = format.toLowerCase();\n  return lower === 'jpg' || lower === 'jpeg' || lower === 'png';\n};\n\nconst guessFormat = buffer => {\n  let format;\n\n  if (JPEG.isValid(buffer)) {\n    format = 'jpg';\n  } else if (PNG.isValid(buffer)) {\n    format = 'png';\n  }\n\n  return format;\n};\n\nconst isCompatibleBase64 = ({ uri }) =>\n  /^data:image\\/[a-zA-Z]*;base64,[^\"]*/g.test(uri);\n\nfunction getImage(body, extension) {\n  switch (extension.toLowerCase()) {\n    case 'jpg':\n    case 'jpeg':\n      return new JPEG(body);\n    case 'png':\n      return new PNG(body);\n    default:\n      return null;\n  }\n}\n\nconst resolveBase64Image = ({ uri }) => {\n  const match = /^data:image\\/([a-zA-Z]*);base64,([^\"]*)/g.exec(uri);\n  const format = match[1];\n  const data = match[2];\n\n  if (!isValidFormat(format)) {\n    throw new Error(`Base64 image invalid format: ${format}`);\n  }\n\n  return new Promise(resolve => {\n    return resolve(getImage(Buffer.from(data, 'base64'), format));\n  });\n};\n\nconst resolveImageFromData = src => {\n  if (src.data && src.format) {\n    return new Promise(resolve => resolve(getImage(src.data, src.format)));\n  }\n\n  throw new Error(`Invalid data given for local file: ${JSON.stringify(src)}`);\n};\n\nconst resolveBufferImage = buffer => {\n  const format = guessFormat(buffer);\n\n  if (format) {\n    return new Promise(resolve => resolve(getImage(buffer, format)));\n  }\n};\n\nconst getImageFormat = body => {\n  const isPng =\n    body[0] === 137 &&\n    body[1] === 80 &&\n    body[2] === 78 &&\n    body[3] === 71 &&\n    body[4] === 13 &&\n    body[5] === 10 &&\n    body[6] === 26 &&\n    body[7] === 10;\n\n  const isJpg = body[0] === 255 && body[1] === 216 && body[2] === 255;\n\n  let extension = '';\n  if (isPng) {\n    extension = 'png';\n  } else if (isJpg) {\n    extension = 'jpg';\n  } else {\n    throw new Error('Not valid image extension');\n  }\n\n  return extension;\n};\n\nconst resolveImageFromUrl = async src => {\n  const { uri, body, headers, method = 'GET' } = src;\n\n  const data =\n    !BROWSER && getAbsoluteLocalPath(uri)\n      ? await fetchLocalFile(uri)\n      : await fetchRemoteFile(uri, { body, headers, method });\n\n  const extension = getImageFormat(data);\n\n  return getImage(data, extension);\n};\n\nconst resolveImage = (src, { cache = true } = {}) => {\n  const cacheKey = src.data ? src.data.toString() : src.uri;\n\n  if (cache && IMAGE_CACHE.get(cacheKey)) {\n    return IMAGE_CACHE.get(cacheKey);\n  }\n\n  let image;\n  if (isCompatibleBase64(src)) {\n    image = resolveBase64Image(src);\n  } else if (Buffer.isBuffer(src)) {\n    image = resolveBufferImage(src);\n  } else if (typeof src === 'object' && src.data) {\n    image = resolveImageFromData(src);\n  } else {\n    image = resolveImageFromUrl(src);\n  }\n\n  if (!image) {\n    throw new Error('Cannot resolve image');\n  }\n\n  if (cache) {\n    IMAGE_CACHE.set(cacheKey, image);\n  }\n\n  return image;\n};\n\nexport default resolveImage;\n","import * as R from 'ramda';\n\n/**\n * Get image source\n *\n * @param {Object} image node\n * @returns {String} image src\n */\nconst getSource = R.compose(\n  R.when(R.is(String), src => ({ uri: src })),\n  R.either(R.path(['props', 'src']), R.path(['props', 'source'])),\n);\n\nexport default getSource;\n","import resolveImage from './resolveImage';\nimport getSource from './getSource';\nimport warning from '../utils/warning';\n\nconst fetchImage = async node => {\n  const src = getSource(node);\n  const { cache } = node.props;\n\n  if (!src) {\n    warning(false, 'Image should receive either a \"src\" or \"source\" prop');\n    return;\n  }\n\n  try {\n    node.image = await resolveImage(src, { cache });\n  } catch (e) {\n    node.image = { width: 0, height: 0 };\n    console.warn(e.message);\n  }\n};\n\nexport default fetchImage;\n","/* eslint-disable no-cond-assign */\nimport emojiRegex from 'emoji-regex';\n\nimport Font from '../font';\nimport resolveImage from '../image/resolveImage';\n\n// Caches emoji images data\nconst emojis = {};\nconst regex = emojiRegex();\n\nconst reflect = promise => (...args) => promise(...args).then(v => v, e => e);\n\n// Returns a function to be able to mock resolveImage.\nconst makeFetchEmojiImage = () => reflect(resolveImage);\n\n/**\n * When an emoji as no color, it might still have 2 parts,\n * the canonical emoji and an empty string.\n * ex.\n *   (no color) Array.from('❤️') => [\"❤\", \"️\"]\n *   (w/ color) Array.from('👍🏿') => [\"👍\", \"🏿\"]\n *\n * The empty string needs to be removed otherwise the generated\n * url will be incorect.\n */\nconst _removeNoColor = x => x !== '️';\n\nconst getCodePoints = string =>\n  Array.from(string)\n    .filter(_removeNoColor)\n    .map(char => char.codePointAt(0).toString(16))\n    .join('-');\n\nconst buildEmojiUrl = emoji => {\n  const { url, format } = Font.getEmojiSource();\n  return `${url}${getCodePoints(emoji)}.${format}`;\n};\n\nexport const fetchEmojis = string => {\n  const emojiSource = Font.getEmojiSource();\n\n  if (!emojiSource || !emojiSource.url) return [];\n\n  const promises = [];\n\n  let match;\n  while ((match = regex.exec(string))) {\n    const emoji = match[0];\n\n    if (!emojis[emoji] || emojis[emoji].loading) {\n      const emojiUrl = buildEmojiUrl(emoji);\n\n      emojis[emoji] = { loading: true };\n      const fetchEmojiImage = makeFetchEmojiImage();\n      promises.push(\n        fetchEmojiImage({ uri: emojiUrl }).then(image => {\n          emojis[emoji].loading = false;\n          emojis[emoji].data = image.data;\n        }),\n      );\n    }\n  }\n\n  return promises;\n};\n\nexport const embedEmojis = fragments => {\n  const result = [];\n\n  for (let i = 0; i < fragments.length; i++) {\n    const fragment = fragments[i];\n\n    let match;\n    let lastIndex = 0;\n\n    while ((match = regex.exec(fragment.string))) {\n      const index = match.index;\n      const emoji = match[0];\n      const emojiSize = fragment.attributes.fontSize;\n      const chunk = fragment.string.slice(lastIndex, index + match[0].length);\n\n      // If emoji image was found, we create a new fragment with the\n      // correct attachment and object substitution character;\n      if (emojis[emoji] && emojis[emoji].data) {\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0xfffc)),\n          attributes: {\n            ...fragment.attributes,\n            attachment: {\n              width: emojiSize,\n              height: emojiSize,\n              yOffset: Math.floor(emojiSize * 0.1),\n              image: emojis[emoji].data,\n            },\n          },\n        });\n      } else {\n        // If no emoji data, we just replace the emoji with a nodef char\n        result.push({\n          string: chunk.replace(match, String.fromCharCode(0)),\n          attributes: fragment.attributes,\n        });\n      }\n\n      lastIndex = index + emoji.length;\n    }\n\n    if (lastIndex < fragment.string.length) {\n      result.push({\n        string: fragment.string.slice(lastIndex),\n        attributes: fragment.attributes,\n      });\n    }\n  }\n\n  return result;\n};\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport fetchImage from '../image/fetchImage';\nimport { fetchEmojis } from '../text/emoji';\n\n/**\n * Get all asset promises that need to be resolved\n *\n * @param {Object} root node\n * @returns {Array} asset promises\n */\nconst fetchAssets = node => {\n  const promises = [];\n  const listToExplore = node.children.slice(0);\n\n  while (listToExplore.length > 0) {\n    const node = listToExplore.shift();\n\n    if (isImage(node)) {\n      promises.push(fetchImage(node));\n    }\n\n    if (node.style && node.style.fontFamily) {\n      promises.push(Font.load(node.style));\n    }\n\n    if (typeof node === 'string') {\n      promises.push(...fetchEmojis(node));\n    }\n\n    if (typeof node.value === 'string') {\n      promises.push(...fetchEmojis(node.value));\n    }\n\n    if (node.children) {\n      node.children.forEach(childNode => {\n        listToExplore.push(childNode);\n      });\n    }\n  }\n\n  return promises;\n};\n\n/**\n * Fetch image, font and emoji assets in parallel.\n * Layout process will not be resumed until promise resolves.\n *\n * @param {Object} root node\n * @returns {Object} root node\n */\nconst resolveAssets = node =>\n  R.compose(\n    R.then(R.always(node)),\n    p => Promise.all(p),\n    fetchAssets,\n  )(node);\n\nexport default resolveAssets;\n","import * as R from 'ramda';\n\n/**\n * Remove nil values from array\n *\n * @param {Array} array\n * @returns {Array} array without nils\n */\nconst compact = R.filter(Boolean);\n\n/**\n * Checks if value is array\n *\n * @param {any} value\n * @returns {Boolean} is value an array\n */\nconst isArray = R.is(Array);\n\n/**\n * Checks if value is not an array\n *\n * @param {any} value\n * @returns {Boolean} isn't value an array\n */\nconst isNotArray = R.complement(isArray);\n\n/**\n * Casts value to array\n *\n * @param {any} value\n * @returns {Array} casted value\n */\nconst castArray = R.when(isNotArray, v => [v]);\n\n/**\n * Merges style objects array\n *\n * @param {Array} style objects array\n * @returns {Object} merged style object\n */\nconst mergeStyles = styles =>\n  styles.reduce((acc, style) => {\n    const s = isArray(style) ? flatten(style) : style;\n\n    Object.keys(s).forEach(key => {\n      if (s[key] !== null && s[key] !== undefined) {\n        acc[key] = s[key];\n      }\n    });\n\n    return acc;\n  }, {});\n\n/**\n * Flattens an array of style objects, into one aggregated style object.\n *\n * @param {Array} style objects array\n * @returns {Object} flatted style object\n */\nconst flatten = R.compose(\n  mergeStyles,\n  compact,\n  castArray,\n);\n\nexport default flatten;\n","import * as R from 'ramda';\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Expand rules\n */\nconst styleShorthands = {\n  margin: {\n    marginTop: true,\n    marginRight: true,\n    marginBottom: true,\n    marginLeft: true,\n  },\n  marginHorizontal: {\n    marginLeft: true,\n    marginRight: true,\n  },\n  marginVertical: {\n    marginTop: true,\n    marginBottom: true,\n  },\n  padding: {\n    paddingTop: true,\n    paddingRight: true,\n    paddingBottom: true,\n    paddingLeft: true,\n  },\n  paddingHorizontal: {\n    paddingLeft: true,\n    paddingRight: true,\n  },\n  paddingVertical: {\n    paddingTop: true,\n    paddingBottom: true,\n  },\n  border: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderTop: {\n    borderTopColor: true,\n    borderTopStyle: true,\n    borderTopWidth: true,\n  },\n  borderRight: {\n    borderRightColor: true,\n    borderRightStyle: true,\n    borderRightWidth: true,\n  },\n  borderBottom: {\n    borderBottomColor: true,\n    borderBottomStyle: true,\n    borderBottomWidth: true,\n  },\n  borderLeft: {\n    borderLeftColor: true,\n    borderLeftStyle: true,\n    borderLeftWidth: true,\n  },\n  borderColor: {\n    borderTopColor: true,\n    borderRightColor: true,\n    borderBottomColor: true,\n    borderLeftColor: true,\n  },\n  borderRadius: {\n    borderTopLeftRadius: true,\n    borderTopRightRadius: true,\n    borderBottomRightRadius: true,\n    borderBottomLeftRadius: true,\n  },\n  borderStyle: {\n    borderTopStyle: true,\n    borderRightStyle: true,\n    borderBottomStyle: true,\n    borderLeftStyle: true,\n  },\n  borderWidth: {\n    borderTopWidth: true,\n    borderRightWidth: true,\n    borderBottomWidth: true,\n    borderLeftWidth: true,\n  },\n  objectPosition: {\n    objectPositionX: true,\n    objectPositionY: true,\n  },\n  transformOrigin: {\n    transformOriginX: true,\n    transformOriginY: true,\n  },\n};\n\nconst expandedKeys = R.keys(styleShorthands);\n\n/**\n * Expand the shorthand properties to isolate every declaration from the others.\n *\n * @param { Object } style object\n * @returns { Object } expanded style object\n */\nconst expandStyles = style => {\n  if (!style) return style;\n\n  const propsArray = Object.keys(style);\n  const resolvedStyle = {};\n\n  for (let i = 0; i < propsArray.length; i++) {\n    const key = propsArray[i];\n    const value = style[key];\n\n    if (R.includes(key, expandedKeys)) {\n      const expandedProps = styleShorthands[key];\n      for (const propName in expandedProps) {\n        if (hasOwnProperty.call(expandedProps, propName)) {\n          resolvedStyle[propName] = value;\n        }\n      }\n    } else {\n      resolvedStyle[key] = value;\n    }\n  }\n\n  return resolvedStyle;\n};\n\nexport default expandStyles;\n","import * as R from 'ramda';\n\nimport { DPI } from '../constants';\n\n/**\n * Parses scalar value in value and unit pairs\n *\n * @param {String} scalar value\n * @returns {Object} parsed value\n */\nconst parseValue = value => {\n  const match = /^(-?\\d*\\.?\\d+)(in|mm|cm|pt|vh|vw)?$/g.exec(value);\n  return match\n    ? { value: parseFloat(match[1], 10), unit: match[2] || 'pt' }\n    : { value, unit: undefined };\n};\n\n/**\n * Transform given scalar value\n *\n * @param {Object} container\n * @param {String} styles value\n * @returns {Object} transformed value\n */\nconst transformUnit = R.curryN(2, (container, value) => {\n  const scalar = parseValue(value);\n  switch (scalar.unit) {\n    case 'in':\n      return scalar.value * DPI;\n    case 'mm':\n      return scalar.value * (1 / 25.4) * DPI;\n    case 'cm':\n      return scalar.value * (1 / 2.54) * DPI;\n    case 'vh':\n      return scalar.value * (container.height / 100);\n    case 'vw':\n      return scalar.value * (container.width / 100);\n    default:\n      return scalar.value;\n  }\n});\n\n/**\n * Transform units on given styles object.\n * Container is given to calculate vh and vw\n *\n * @param {Object} container\n * @param {Object} styles object\n * @returns {Object} transformed styles\n */\nconst transformUnits = (container, styles) =>\n  R.map(transformUnit(container), styles);\n\nexport default R.curryN(2, transformUnits);\n","import * as R from 'ramda';\nimport matchMedia from 'media-engine';\n\n/**\n * Resolves media queries in styles object\n *\n * @param {Object} container\n * @param {Object} styles object\n */\nconst resolveMediaQueries = (container, styles) => {\n  return Object.keys(styles).reduce((acc, key) => {\n    if (/@media/.test(key)) {\n      return {\n        ...acc,\n        ...matchMedia({ [key]: styles[key] }, container),\n      };\n    }\n\n    return { ...acc, [key]: styles[key] };\n  }, {});\n};\n\nexport default R.curryN(2, resolveMediaQueries);\n","import * as R from 'ramda';\n\nimport flattenStyles from '../stylesheet/flatten';\nimport expandStyles from '../stylesheet/expandStyles';\nimport transformUnits from '../stylesheet/transformUnits';\nimport transformStyles from '../stylesheet/transformStyles';\nimport resolveMediaQueries from '../stylesheet/resolveMediaQueries';\n\n/**\n * Resolves styles\n *\n * @param {Object} container\n * @param {Object} style object\n * @returns {Object} resolved style object\n */\nconst resolveStyles = container =>\n  R.compose(\n    transformUnits(container),\n    transformStyles,\n    expandStyles,\n    resolveMediaQueries(container),\n    flattenStyles,\n  );\n\n/**\n * Resolves node styles\n *\n * @param {Object} container\n * @param {Object} document node\n * @returns {Object} node (and subnodes) with resolved styles\n */\nconst resolveNodeStyles = page => node => {\n  const container = R.propOr({}, 'box', page);\n\n  return R.evolve({\n    style: resolveStyles(container),\n    children: R.map(resolveNodeStyles(page)),\n  })(node);\n};\n\n/**\n * Resolves page styles\n *\n * @param {Object} document page\n * @returns {Object} document page with resolved styles\n */\nconst resolvePageStyles = page => {\n  const pageBox = R.propOr({}, 'box', page);\n\n  return R.evolve({\n    children: R.map(resolveNodeStyles(page)),\n    style: R.compose(\n      transformUnits(pageBox),\n      transformStyles,\n      expandStyles,\n      flattenStyles,\n    ),\n  })(page);\n};\n\n/**\n * Resolves root styles\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved styles\n */\nexport default R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageStyles),\n    }),\n  ),\n});\n","import * as R from 'ramda';\n\n/**\n * Sort children by zIndex value\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolveZIndex = node =>\n  R.evolve({\n    children: R.compose(\n      R.map(resolveZIndex),\n      R.sortBy(R.path(['style', 'zIndex'])),\n    ),\n  })(node);\n\nexport default resolveZIndex;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render vertical ruler\n *\n * @param {Object} page\n * @returns {boolean} has vertical ruler\n */\nconst hasVerticalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'verticalRuler']),\n);\n\nexport default hasVerticalRuler;\n","import * as R from 'ramda';\n\n/**\n * Checks if page should render horizontal ruler\n *\n * @param {Object} page\n * @returns {boolean} has horizontal ruler\n */\nconst hasHorizontalRuler = R.either(\n  R.hasPath(['props', 'ruler']),\n  R.hasPath(['props', 'horizontalRuler']),\n);\n\nexport default hasHorizontalRuler;\n","import * as R from 'ramda';\n\nimport { RULER_WIDTH } from '../constants';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\n\n/**\n * Adjust page size given ruler props\n *\n * @param {Object} page\n * @returns {boolean} page with size altered by ruler props\n */\nconst adjustPageSize = R.compose(\n  R.when(\n    hasVerticalRuler,\n    R.evolve({\n      box: { height: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { top: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n  R.when(\n    hasHorizontalRuler,\n    R.evolve({\n      box: { width: R.add(RULER_WIDTH) },\n      children: R.map(\n        R.evolve({\n          box: { left: R.add(RULER_WIDTH) },\n        }),\n      ),\n    }),\n  ),\n);\n\n/**\n * Adjust pages size given ruler props\n *\n * @param {Object} root\n * @returns {boolean} root with pages size altered by ruler props\n */\nconst resolveRulers = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(adjustPageSize),\n    }),\n  ),\n});\n\nexport default resolveRulers;\n","const isPercent = value => /((-)?\\d+\\.?\\d*)%/g.exec(value);\n\n/**\n * Get percentage value of input\n *\n * @param {String} value\n * @returns {Object} percent value (if matches)\n */\nconst matchPercent = value => {\n  const match = isPercent(value);\n\n  if (match) {\n    const value = parseFloat(match[1], 10);\n    const percent = value / 100;\n\n    return {\n      value,\n      percent,\n      absValue: Math.abs(value),\n      absPercent: Math.abs(percent),\n    };\n  }\n\n  return null;\n};\n\nexport default matchPercent;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\nconst getTransformStyle = s => R.pathOr('50%', ['style', s]);\n\n/**\n * Get node origin\n *\n * @param {Object} node\n * @returns {Object} node origin\n */\nconst getOrigin = node => {\n  if (!node.box) return {};\n\n  const { left, top, width, height } = node.box;\n  const transformOriginX = getTransformStyle('transformOriginX')(node);\n  const transformOriginY = getTransformStyle('transformOriginY')(node);\n\n  const percentX = matchPercent(transformOriginX);\n  const percentY = matchPercent(transformOriginY);\n\n  const offsetX = percentX ? width * percentX.percent : transformOriginX;\n  const offsetY = percentY ? height * percentY.percent : transformOriginY;\n\n  return { left: left + offsetX, top: top + offsetY };\n};\n\nexport default getOrigin;\n","import * as R from 'ramda';\n\nimport getOrigin from '../node/getOrigin';\n\n/**\n * Resolve node origin\n *\n * @param {Object} node\n * @returns {Object} node with origin attribute\n */\nconst resolveNodeOrigin = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveNodeOrigin) }),\n    R.converge(R.assoc('origin'), [getOrigin, R.identity]),\n  )(node);\n\n/**\n * Resolve document origins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root\n */\nconst resolveOrigin = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolveNodeOrigin),\n    }),\n  ),\n});\n\nexport default resolveOrigin;\n","import * as R from 'ramda';\n\nimport { PORTRAIT, LANDSCAPE } from '../constants';\n\nconst VALID_ORIENTATIONS = [PORTRAIT, LANDSCAPE];\n\n/**\n * Get page orientation. Defaults to landscape\n *\n * @param { Object } page object\n * @returns { String } page orientation\n */\nconst getOrientation = R.compose(\n  R.ifElse(\n    R.includes(R.__, VALID_ORIENTATIONS),\n    R.identity,\n    R.always(PORTRAIT),\n  ),\n  R.pathOr(PORTRAIT, ['props', 'orientation']),\n);\n\nexport default getOrientation;\n","import * as R from 'ramda';\n\nimport getOrientation from './getOrientation';\n\nimport { LANDSCAPE } from '../constants';\n\nconst isLandscape = R.compose(\n  R.equals(LANDSCAPE),\n  getOrientation,\n);\n\nexport default isLandscape;\n","import * as R from 'ramda';\n\nimport isLandscape from './isLandscape';\nimport { PAGE_SIZES } from '../constants';\n\n/**\n * Transforms array into size object\n *\n * @param {Array} array\n * @returns {Object} size object with width and height\n */\nconst toSizeObject = R.applySpec({\n  width: R.prop(0),\n  height: R.prop(1),\n});\n\n/**\n * Flip size object\n *\n * @param {Object} size object\n * @returns {Object} flipped size object\n */\nconst flipSizeObject = R.applySpec({\n  width: R.prop('height'),\n  height: R.prop('width'),\n});\n\n/**\n * Returns size object from a given string\n *\n * @param {String} page size string\n * @returns {Object} size object with width and height\n */\nconst getStringSize = R.compose(\n  toSizeObject,\n  R.prop(R.__, PAGE_SIZES),\n  R.toUpper,\n);\n\n/**\n * Returns size object from a single number\n *\n * @param {Number} page size number\n * @returns {Object} size object with width and height\n */\nconst getNumberSize = R.compose(\n  toSizeObject,\n  v => [v],\n);\n\n/**\n * Throws invalid size error\n *\n * @param {String} invalid page size input\n */\nconst throwInvalidError = size => {\n  throw new Error(`Invalid Page size: ${JSON.stringify(size)}`);\n};\n\n/**\n * Return page size in an object { width, height }\n *\n * @param {Object} page instance\n * @returns {Object} size object with width and height\n */\nconst getSize = page => {\n  const size = R.compose(\n    R.cond([\n      [R.is(String), getStringSize],\n      [R.is(Array), toSizeObject],\n      [R.is(Number), getNumberSize],\n      [R.is(Object), R.identity],\n      [R.T, throwInvalidError],\n    ]),\n    R.pathOr('A4', ['props', 'size']),\n  )(page);\n\n  return isLandscape(page) ? flipSizeObject(size) : size;\n};\n\nexport default getSize;\n","import * as R from 'ramda';\n\n/**\n * Add empt box prop if not present in node\n *\n * @param {Object} node\n * @returns {Object} node with box prop\n */\nconst assocIfNil = (key, value, target) =>\n  R.when(\n    R.compose(\n      R.isNil,\n      R.prop(key),\n    ),\n    R.assoc(key, value),\n  )(target);\n\nexport default R.curryN(3, assocIfNil);\n","import * as R from 'ramda';\n\nimport getPageSize from '../page/getSize';\nimport assocIfNil from '../utils/assocIfNil';\n\n/**\n * Resolves page size\n *\n * @param {Object} page\n * @returns {Object} page with resolved size in style attribute\n */\nexport const resolvePageSize = key => page => {\n  const size = getPageSize(page);\n  return R.evolve({ [key]: R.merge(R.__, size) })(page);\n};\n\n/**\n * Resolves page sizes\n *\n * @param {Object} document root\n * @returns {Object} document root with resolved page sizes\n */\nconst resolvePageSizes = key => R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(\n        R.compose(\n          resolvePageSize(key),\n          assocIfNil(key, {}),\n        ),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageSizes;\n","import * as R from 'ramda';\n\nconst isNotNil = R.complement(R.isNil);\n\n/**\n * Takes a list of predicates and returns the first predicate result that returns true for a given list of arguments\n *\n * @param  {...any} predicates\n * @param  {any} value\n */\nconst firstPass = (...fns) => value => {\n  let res;\n\n  for (const fn of fns) {\n    res = fn(value);\n    if (isNotNil(res)) return res;\n  }\n\n  return res;\n};\n\nexport default firstPass;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedMargin = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedMargin(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} margins\n */\nconst getMargin = R.applySpec({\n  marginTop: firstPass(\n    getComputedMargin(Yoga.EDGE_TOP),\n    R.path(['box', 'marginTop']),\n    R.path(['style', 'marginTop']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginRight: firstPass(\n    getComputedMargin(Yoga.EDGE_RIGHT),\n    R.path(['box', 'marginRight']),\n    R.path(['style', 'marginRight']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginBottom: firstPass(\n    getComputedMargin(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'marginBottom']),\n    R.path(['style', 'marginBottom']),\n    R.path(['style', 'marginVertical']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n  marginLeft: firstPass(\n    getComputedMargin(Yoga.EDGE_LEFT),\n    R.path(['box', 'marginLeft']),\n    R.path(['style', 'marginLeft']),\n    R.path(['style', 'marginHorizontal']),\n    R.path(['style', 'margin']),\n    R.always(0),\n  ),\n});\n\nexport default getMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport firstPass from '../utils/firstPass';\n\nconst getComputedPadding = edge => node => {\n  const yogaNode = node._yogaNode;\n  return yogaNode ? yogaNode.getComputedPadding(edge) : null;\n};\n\n/**\n * Get Yoga computed magins. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} paddings\n */\nconst getPadding = R.applySpec({\n  paddingTop: firstPass(\n    getComputedPadding(Yoga.EDGE_TOP),\n    R.path(['box', 'paddingTop']),\n    R.path(['style', 'paddingTop']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingRight: firstPass(\n    getComputedPadding(Yoga.EDGE_RIGHT),\n    R.path(['box', 'paddingRight']),\n    R.path(['style', 'paddingRight']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingBottom: firstPass(\n    getComputedPadding(Yoga.EDGE_BOTTOM),\n    R.path(['box', 'paddingBottom']),\n    R.path(['style', 'paddingBottom']),\n    R.path(['style', 'paddingVertical']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n  paddingLeft: firstPass(\n    getComputedPadding(Yoga.EDGE_LEFT),\n    R.path(['box', 'paddingLeft']),\n    R.path(['style', 'paddingLeft']),\n    R.path(['style', 'paddingHorizontal']),\n    R.path(['style', 'padding']),\n    R.always(0),\n  ),\n});\n\nexport default getPadding;\n","import * as R from 'ramda';\n\nconst getTop = yogaNode => (yogaNode ? yogaNode.getComputedTop() : 0);\nconst getRight = yogaNode => (yogaNode ? yogaNode.getComputedRight() : 0);\nconst getBottom = yogaNode => (yogaNode ? yogaNode.getComputedBottom() : 0);\nconst getLeft = yogaNode => (yogaNode ? yogaNode.getComputedLeft() : 0);\n\n/**\n * Get Yoga computed position. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} position\n */\nconst getPosition = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    top: getTop,\n    right: getRight,\n    bottom: getBottom,\n    left: getLeft,\n  })(yogaNode);\n};\n\nexport default getPosition;\n","const DEFAULT_DIMENSION = {\n  width: 0,\n  height: 0,\n};\n\n/**\n * Get Yoga computed dimensions. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} dimensions\n */\nconst getDimension = node => {\n  const yogaNode = node._yogaNode;\n\n  if (!yogaNode) return DEFAULT_DIMENSION;\n\n  return {\n    width: yogaNode.getComputedWidth(),\n    height: yogaNode.getComputedHeight(),\n  };\n};\n\nexport default getDimension;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst getComputedBorder = edge => yogaNode =>\n  yogaNode ? yogaNode.getComputedBorder(edge) : 0;\n\n/**\n * Get Yoga computed border width. Zero otherwise\n *\n * @param {Object} node\n * @return {Object} border widths\n */\nconst getBorderWidth = node => {\n  const yogaNode = node._yogaNode;\n\n  return R.applySpec({\n    borderTopWidth: getComputedBorder(Yoga.EDGE_TOP),\n    borderRightWidth: getComputedBorder(Yoga.EDGE_RIGHT),\n    borderBottomWidth: getComputedBorder(Yoga.EDGE_BOTTOM),\n    borderLeftWidth: getComputedBorder(Yoga.EDGE_LEFT),\n  })(yogaNode);\n};\n\nexport default getBorderWidth;\n","import * as R from 'ramda';\n\n/**\n * Capitalize first letter of string\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst upperFirst = R.ifElse(\n  R.isNil,\n  R.identity,\n  R.compose(\n    R.join(''),\n    R.juxt([\n      R.compose(\n        R.toUpper,\n        R.head,\n      ),\n      R.tail,\n    ]),\n  ),\n);\n\nexport default upperFirst;\n","import * as R from 'ramda';\n\nimport upperFirst from '../utils/upperFirst';\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Set generic yoga attribute to node's Yoga instance, handing `auto`, edges and percentage cases\n *\n * @param {String} property\n * @param {Number} edge\n * @param {any} value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setYogaValue = (attr, edge) => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const hasEdge = R.complement(R.isNil)(edge);\n      const fixedMethod = `set${upperFirst(attr)}`;\n      const autoMethod = `${fixedMethod}Auto`;\n      const percentMethod = `${fixedMethod}Percent`;\n      const percent = matchPercent(value);\n\n      if (percent && !yogaNode[percentMethod]) {\n        throw new Error(`You can't pass percentage values to ${attr} property`);\n      }\n\n      if (percent) {\n        hasEdge\n          ? yogaNode[percentMethod](edge, percent.value)\n          : yogaNode[percentMethod](percent.value);\n      } else if (value === 'auto') {\n        hasEdge ? yogaNode[autoMethod](edge) : yogaNode[autoMethod]();\n      } else {\n        hasEdge\n          ? yogaNode[fixedMethod](edge, value)\n          : yogaNode[fixedMethod](value);\n      }\n    }\n  });\n\nexport default setYogaValue;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex attribute to node's Yoga instance\n *\n * @param {Number} flex value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlex = setYogaValue('flex');\n\nexport default setFlex;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set display attribute to node's Yoga instance\n *\n * @param {String} display\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setDisplay = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      yogaNode.setDisplay(\n        value === 'none' ? Yoga.DISPLAY_NONE : Yoga.DISPLAY_FLEX,\n      );\n    }\n  });\n\nexport default setDisplay;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set overflow attribute to node's Yoga instance\n *\n * @param {String} overflow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setOverflow = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('hidden'), R.always(Yoga.OVERFLOW_HIDDEN)],\n        [R.equals('scroll'), R.always(Yoga.OVERFLOW_SCROLL)],\n        [R.T, R.always(Yoga.OVERFLOW_VISIBLE)],\n      ])(value);\n\n      yogaNode.setOverflow(yogaValue);\n    }\n  });\n\nexport default setOverflow;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set flex wrap attribute to node's Yoga instance\n *\n * @param {String} flex wrap value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexWrap = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('wrap'), R.always(Yoga.WRAP_WRAP)],\n        [R.equals('wrap-reverse'), R.always(Yoga.WRAP_WRAP_REVERSE)],\n        [R.T, R.always(Yoga.WRAP_NO_WRAP)],\n      ])(value);\n\n      yogaNode.setFlexWrap(yogaValue);\n    }\n  });\n\nexport default setFlexWrap;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex grow attribute to node's Yoga instance\n *\n * @param {Number} flex grow value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexGrow = R.compose(\n  setYogaValue('flexGrow'),\n  R.defaultTo(0),\n);\n\nexport default setFlexGrow;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set flex basis attribute to node's Yoga instance\n *\n * @param {Number} flex basis value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexBasis = setYogaValue('flexBasis');\n\nexport default setFlexBasis;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport upperFirst from '../utils/upperFirst';\n\n/**\n * Set generic align attribute to node's Yoga instance\n *\n * @param {String} specific align property\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlign = attr => value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('flex-start'), R.always(Yoga.ALIGN_FLEX_START)],\n        [R.equals('center'), R.always(Yoga.ALIGN_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.ALIGN_FLEX_END)],\n        [R.equals('stretch'), R.always(Yoga.ALIGN_STRETCH)],\n        [R.equals('baseline'), R.always(Yoga.ALIGN_BASELINE)],\n        [R.equals('space-between'), R.always(Yoga.ALIGN_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.ALIGN_SPACE_AROUND)],\n        [R.T, R.always(Yoga.ALIGN_AUTO)],\n      ])(value);\n\n      yogaNode[`setAlign${upperFirst(attr)}`](yogaValue);\n    }\n  });\n\nexport default setAlign;\n","import setAlign from './setAlign';\n\n/**\n * Set align self attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignSelf = setAlign('self');\n\nexport default setAlignSelf;\n","import * as R from 'ramda';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set flex shrink attribute to node's Yoga instance\n *\n * @param {Number} flex shrink value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexShrink = R.compose(\n  setYogaValue('flexShrink'),\n  R.defaultTo(1),\n);\n\nexport default setFlexShrink;\n","import * as R from 'ramda';\n\n/**\n * Set aspect ratio attribute to node's Yoga instance\n *\n * @param {Number} ratio\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAspectRatio = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setAspectRatio(value);\n    }\n  });\n\nexport default setAspectRatio;\n","import setAlign from './setAlign';\n\n/**\n * Set align content attribute to node's Yoga instance\n *\n * @param {String} align value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setAlignContent = setAlign('content');\n\nexport default setAlignContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set position type attribute to node's Yoga instance\n *\n * @param {String} position type\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setPositionType = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      yogaNode.setPositionType(\n        value === 'absolute'\n          ? Yoga.POSITION_TYPE_ABSOLUTE\n          : Yoga.POSITION_TYPE_RELATIVE,\n      );\n    }\n  });\n\nexport default setPositionType;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nconst isRow = R.equals('row');\nconst isRowReverse = R.equals('row-reverse');\nconst isColumnReverse = R.equals('column-reverse');\n\n/**\n * Set flex direction attribute to node's Yoga instance\n *\n * @param {String} flex direction value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setFlexDirection = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (yogaNode) {\n      const yogaValue = R.cond([\n        [isRow, R.always(Yoga.FLEX_DIRECTION_ROW)],\n        [isRowReverse, R.always(Yoga.FLEX_DIRECTION_ROW_REVERSE)],\n        [isColumnReverse, R.always(Yoga.FLEX_DIRECTION_COLUMN_REVERSE)],\n        [R.T, R.always(Yoga.FLEX_DIRECTION_COLUMN)],\n      ])(value);\n\n      yogaNode.setFlexDirection(yogaValue);\n    }\n  });\n\nexport default setFlexDirection;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\n/**\n * Set justify content attribute to node's Yoga instance\n *\n * @param {String} justify content value\n * @param {Object} node instance\n * @return {Object} node instance\n */\nconst setJustifyContent = value =>\n  R.tap(node => {\n    const yogaNode = node._yogaNode;\n\n    if (!R.isNil(value) && yogaNode) {\n      const yogaValue = R.cond([\n        [R.equals('center'), R.always(Yoga.JUSTIFY_CENTER)],\n        [R.equals('flex-end'), R.always(Yoga.JUSTIFY_FLEX_END)],\n        [R.equals('space-between'), R.always(Yoga.JUSTIFY_SPACE_BETWEEN)],\n        [R.equals('space-around'), R.always(Yoga.JUSTIFY_SPACE_AROUND)],\n        [R.equals('space-evenly'), R.always(Yoga.JUSTIFY_SPACE_EVENLY)],\n        [R.T, R.always(Yoga.JUSTIFY_FLEX_START)],\n      ])(value);\n\n      yogaNode.setJustifyContent(yogaValue);\n    }\n  });\n\nexport default setJustifyContent;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set margin top attribute to node's Yoga instance\n *\n * @param {Number} margin top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginTop = setYogaValue('margin', Yoga.EDGE_TOP);\n\n/**\n * Set margin right attribute to node's Yoga instance\n *\n * @param {Number} margin right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginRight = setYogaValue('margin', Yoga.EDGE_RIGHT);\n\n/**\n * Set margin bottom attribute to node's Yoga instance\n *\n * @param {Number} margin bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginBottom = setYogaValue('margin', Yoga.EDGE_BOTTOM);\n\n/**\n * Set margin left attribute to node's Yoga instance\n *\n * @param {Number} margin left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMarginLeft = setYogaValue('margin', Yoga.EDGE_LEFT);\n\n/**\n * Set all margins at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMargin = margin =>\n  R.tap(node => {\n    setMarginTop(margin)(node);\n    setMarginRight(margin)(node);\n    setMarginBottom(margin)(node);\n    setMarginLeft(margin)(node);\n  });\n\nexport default setMargin;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set padding top attribute to node's Yoga instance\n *\n * @param {Number} padding top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingTop = setYogaValue('padding', Yoga.EDGE_TOP);\n\n/**\n * Set padding right attribute to node's Yoga instance\n *\n * @param {Number} padding right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingRight = setYogaValue('padding', Yoga.EDGE_RIGHT);\n\n/**\n * Set padding bottom attribute to node's Yoga instance\n *\n * @param {Number} padding bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingBottom = setYogaValue('padding', Yoga.EDGE_BOTTOM);\n\n/**\n * Set padding left attribute to node's Yoga instance\n *\n * @param {Number} padding left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPaddingLeft = setYogaValue('padding', Yoga.EDGE_LEFT);\n\n/**\n * Set all paddings at once\n *\n * @param {Number} margin\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPadding = padding =>\n  R.tap(node => {\n    setPaddingTop(padding)(node);\n    setPaddingRight(padding)(node);\n    setPaddingBottom(padding)(node);\n    setPaddingLeft(padding)(node);\n  });\n\nexport default setPadding;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set border top attribute to node's Yoga instance\n *\n * @param {Number} border top width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderTop = setYogaValue('border', Yoga.EDGE_TOP);\n\n/**\n * Set border right attribute to node's Yoga instance\n *\n * @param {Number} border right width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderRight = setYogaValue('border', Yoga.EDGE_RIGHT);\n\n/**\n * Set border bottom attribute to node's Yoga instance\n *\n * @param {Number} border bottom width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderBottom = setYogaValue('border', Yoga.EDGE_BOTTOM);\n\n/**\n * Set border left attribute to node's Yoga instance\n *\n * @param {Number} border left width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorderLeft = setYogaValue('border', Yoga.EDGE_LEFT);\n\n/**\n * Set all border widths at once\n *\n * @param {Number} border width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setBorder = width =>\n  R.tap(node => {\n    setBorderTop(width)(node);\n    setBorderRight(width)(node);\n    setBorderBottom(width)(node);\n    setBorderLeft(width)(node);\n  });\n\nexport default setBorder;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport setYogaValue from './setYogaValue';\n\n/**\n * Set position top attribute to node's Yoga instance\n *\n * @param {Number} position top\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionTop = setYogaValue('position', Yoga.EDGE_TOP);\n\n/**\n * Set position right attribute to node's Yoga instance\n *\n * @param {Number} position right\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionRight = setYogaValue('position', Yoga.EDGE_RIGHT);\n\n/**\n * Set position bottom attribute to node's Yoga instance\n *\n * @param {Number} position bottom\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionBottom = setYogaValue('position', Yoga.EDGE_BOTTOM);\n\n/**\n * Set position left attribute to node's Yoga instance\n *\n * @param {Number} position left\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPositionLeft = setYogaValue('position', Yoga.EDGE_LEFT);\n\n/**\n * Set all positions at once\n *\n * @param {Number} position\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setPosition = position =>\n  R.tap(node => {\n    setPositionTop(position)(node);\n    setPositionRight(position)(node);\n    setPositionBottom(position)(node);\n    setPositionLeft(position)(node);\n  });\n\nexport default setPosition;\n","import setYogaValue from './setYogaValue';\n\n/**\n * Set width to node's Yoga instance\n *\n * @param {Number} width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setWidth = setYogaValue('width');\n\n/**\n * Set min width to node's Yoga instance\n *\n * @param {Number} min width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinWidth = setYogaValue('minWidth');\n\n/**\n * Set max width to node's Yoga instance\n *\n * @param {Number} max width\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxWidth = setYogaValue('maxWidth');\n\n/**\n * Set height to node's Yoga instance\n *\n * @param {Number} height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setHeight = setYogaValue('height');\n\n/**\n * Set min height to node's Yoga instance\n *\n * @param {Number} min height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMinHeight = setYogaValue('minHeight');\n\n/**\n * Set max height to node's Yoga instance\n *\n * @param {Number} max height\n * @param {Object} node instance\n * @return {Object} node instance\n */\nexport const setMaxHeight = setYogaValue('maxHeight');\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\n\n/**\n * Checks if node is text\n *\n * @param {Object} node\n * @returns {Boolean} is node text?\n */\nconst isText = R.propEq('type', TEXT);\n\nexport default isText;\n","import * as R from 'ramda';\n\nimport { NOTE } from '../constants';\n\n/**\n * Checks if node is note\n *\n * @param {Object} node\n * @returns {Boolean} is node note?\n */\nconst isNote = R.propEq('type', NOTE);\n\nexport default isNote;\n","import * as R from 'ramda';\n\nimport { PAGE } from '../constants';\n\n/**\n * Checks if node is page\n *\n * @param {Object} node\n * @returns {Boolean} is node page?\n */\nconst isPage = R.propEq('type', PAGE);\n\nexport default isPage;\n","import * as R from 'ramda';\n\nimport { CANVAS } from '../constants';\n\n/**\n * Checks if node is canvas\n *\n * @param {Object} node\n * @returns {Boolean} is node canvas?\n */\nconst isCanvas = R.propEq('type', CANVAS);\n\nexport default isCanvas;\n","import { PDFFont } from '@react-pdf/pdfkit';\n\nclass StandardFont {\n  constructor(src) {\n    this.name = src;\n    this.src = PDFFont.open(null, src);\n  }\n\n  layout(str) {\n    const [encoded, positions] = this.src.encode(str);\n\n    return {\n      positions,\n      stringIndices: positions.map((_, i) => i),\n      glyphs: encoded.map((g, i) => {\n        const glyph = this.getGlyph(parseInt(g, 16));\n        glyph.advanceWidth = positions[i].advanceWidth;\n        return glyph;\n      }),\n    };\n  }\n\n  glyphForCodePoint(codePoint) {\n    const glyph = this.getGlyph(codePoint);\n    glyph.advanceWidth = 400;\n    return glyph;\n  }\n\n  getGlyph(id) {\n    return {\n      id,\n      _font: this.src,\n      codePoints: [id],\n      isLigature: false,\n      name: this.src.font.characterToGlyph(id),\n    };\n  }\n\n  hasGlyphForCodePoint(codePoint) {\n    return this.src.font.characterToGlyph(codePoint) !== '.notdef';\n  }\n\n  // Based on empirical observation\n  get ascent() {\n    return 900;\n  }\n\n  // Based on empirical observation\n  get descent() {\n    switch (this.name) {\n      case 'Times-Roman':\n      case 'Times-Bold':\n      case 'Times-Italic':\n        return -220;\n      case 'Courier':\n      case 'Courier-Bold':\n      case 'Courier-Oblique':\n        return -230;\n      default:\n        return -200;\n    }\n  }\n\n  get lineGap() {\n    return 0;\n  }\n\n  get unitsPerEm() {\n    return 1000;\n  }\n}\n\nexport default StandardFont;\n","import * as R from 'ramda';\n\nimport StandardFont from './standardFont';\n\nconst fontCache = {};\n\nconst IGNORED_CODE_POINTS = [173];\n\nconst getFontSize = R.pathOr(12, ['attributes', 'fontSize']);\n\nconst getOrCreateFont = name => {\n  if (fontCache[name]) return fontCache[name];\n\n  const font = new StandardFont(name);\n  fontCache[name] = font;\n\n  return font;\n};\n\nconst getFallbackFont = () => getOrCreateFont('Helvetica');\n\nconst shouldFallbackToFont = (codePoint, font) =>\n  !IGNORED_CODE_POINTS.includes(codePoint) &&\n  !font.hasGlyphForCodePoint(codePoint) &&\n  getFallbackFont().hasGlyphForCodePoint(codePoint);\n\nconst fontSubstitution = () => ({ string, runs }) => {\n  let lastFont = null;\n  let lastIndex = 0;\n  let index = 0;\n\n  const res = [];\n\n  for (const run of runs) {\n    const fontSize = getFontSize(run);\n    const defaultFont =\n      typeof run.attributes.font === 'string'\n        ? getOrCreateFont(run.attributes.font)\n        : run.attributes.font;\n\n    if (string.length === 0) {\n      res.push({ start: 0, end: 0, attributes: { font: defaultFont } });\n      break;\n    }\n\n    for (const char of string.slice(run.start, run.end)) {\n      const codePoint = char.codePointAt();\n      const shouldFallback = shouldFallbackToFont(codePoint, defaultFont);\n      const font = shouldFallback ? getFallbackFont() : defaultFont;\n\n      // If the default font does not have a glyph and the fallback font does, we use it\n      if (font !== lastFont) {\n        if (lastFont) {\n          res.push({\n            start: lastIndex,\n            end: index,\n            attributes: {\n              font: lastFont,\n              scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n            },\n          });\n        }\n\n        lastFont = font;\n        lastIndex = index;\n      }\n\n      index += char.length;\n    }\n  }\n\n  if (lastIndex < string.length) {\n    const fontSize = getFontSize(R.last(runs));\n\n    res.push({\n      start: lastIndex,\n      end: string.length,\n      attributes: {\n        font: lastFont,\n        scale: lastFont ? fontSize / lastFont.unitsPerEm : 0,\n      },\n    });\n  }\n\n  return { string, runs: res };\n};\n\nexport default fontSubstitution;\n","/**\n * Capitalize first letter of each word\n *\n * @param {String} string\n * @returns {String} capitalized string\n */\nconst capitalize = value => {\n  if (!value) return value;\n  return value.replace(/(^|\\s)\\S/g, l => l.toUpperCase());\n};\n\nexport default capitalize;\n","const IGNORABLE_CODEPOINTS = [\n  8232, // LINE_SEPARATOR\n  8233, // PARAGRAPH_SEPARATOR\n];\n\nconst buildSubsetForFont = font =>\n  IGNORABLE_CODEPOINTS.reduce((acc, codePoint) => {\n    if (font.hasGlyphForCodePoint && font.hasGlyphForCodePoint(codePoint)) {\n      return acc;\n    }\n    return [...acc, String.fromCharCode(codePoint)];\n  }, []);\n\nexport const ignoreChars = fragments =>\n  fragments.map(fragment => {\n    const charSubset = buildSubsetForFont(fragment.attributes.font);\n    const subsetRegex = new RegExp(charSubset.join('|'));\n\n    return {\n      string: fragment.string.replace(subsetRegex, ''),\n      attributes: fragment.attributes,\n    };\n  });\n","import * as R from 'ramda';\n\nimport { TEXT_INSTANCE } from '../constants';\n\n/**\n * Checks if node is text intance\n *\n * @param {Object} node\n * @returns {Boolean} is node text intance?\n */\nconst isTextInstance = R.propEq('type', TEXT_INSTANCE);\n\nexport default isTextInstance;\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\nimport Font from '../font';\nimport isImage from '../node/isImage';\nimport { embedEmojis } from './emoji';\nimport capitalize from '../utils/capitalize';\nimport upperFirst from '../utils/upperFirst';\nimport { ignoreChars } from './ignorableChars';\nimport isTextInstance from '../node/isTextInstance';\n\nconst PREPROCESSORS = [ignoreChars, embedEmojis];\n\n/**\n * Apply transformation to text string\n *\n * @param {String} text\n * @param {String} transformation type\n * @returns {String} transformed text\n */\nconst transformText = (text, transformation) => {\n  switch (transformation) {\n    case 'uppercase':\n      return text.toUpperCase();\n    case 'lowercase':\n      return text.toLowerCase();\n    case 'capitalize':\n      return capitalize(text);\n    case 'upperfirst':\n      return upperFirst(text);\n    default:\n      return text;\n  }\n};\n\n/**\n * Get textkit framgents of given node object\n *\n * @param {Object} instance node\n * @returns {Array} text fragments\n */\nconst getFragments = instance => {\n  if (!instance) return [{ string: '' }];\n\n  let fragments = [];\n  const {\n    color = 'black',\n    backgroundColor,\n    fontFamily = 'Helvetica',\n    fontWeight,\n    fontStyle,\n    fontSize = 18,\n    textAlign = 'left',\n    lineHeight,\n    textDecoration,\n    textDecorationColor,\n    textDecorationStyle,\n    textTransform,\n    letterSpacing,\n    textIndent,\n    opacity,\n  } = instance.style;\n\n  const obj = Font.getFont({ fontFamily, fontWeight, fontStyle });\n  const font = obj ? obj.data : fontFamily;\n\n  const attributes = {\n    font,\n    color,\n    opacity,\n    fontSize,\n    backgroundColor,\n    align: textAlign,\n    indent: textIndent,\n    link: instance.src,\n    characterSpacing: letterSpacing,\n    underlineStyle: textDecorationStyle,\n    underline: textDecoration === 'underline',\n    underlineColor: textDecorationColor || color,\n    strike: textDecoration === 'line-through',\n    strikeStyle: textDecorationStyle,\n    strikeColor: textDecorationColor || color,\n    lineHeight: lineHeight ? lineHeight * fontSize : null,\n  };\n\n  instance.children.forEach(child => {\n    if (isImage(child)) {\n      fragments.push({\n        string: String.fromCharCode(0xfffc),\n        attributes: {\n          ...attributes,\n          attachment: {\n            width: child.style.width || fontSize,\n            height: child.style.height || fontSize,\n            image: child.image.data,\n          },\n        },\n      });\n    } else if (isTextInstance(child)) {\n      fragments.push({\n        string: transformText(child.value, textTransform),\n        attributes,\n      });\n    } else {\n      if (child) {\n        fragments.push(...getFragments(child));\n      }\n    }\n  });\n\n  for (const preprocessor of PREPROCESSORS) {\n    fragments = preprocessor(fragments);\n  }\n\n  return fragments;\n};\n\n/**\n * Get textkit attributed string from text node\n *\n * @param {Object} instance node\n * @returns {Object} attributed string\n */\nconst getAttributedString = instance =>\n  AttributedString.fromFragments(getFragments(instance));\n\nexport default getAttributedString;\n","import * as R from 'ramda';\nimport layoutEngine from '@react-pdf/textkit/layout';\nimport linebreaker from '@react-pdf/textkit/engines/linebreaker';\nimport justification from '@react-pdf/textkit/engines/justification';\nimport textDecoration from '@react-pdf/textkit/engines/textDecoration';\nimport scriptItemizer from '@react-pdf/textkit/engines/scriptItemizer';\nimport wordHyphenation from '@react-pdf/textkit/engines/wordHyphenation';\n\nimport Font from '../font';\nimport fontSubstitution from './fontSubstitution';\nimport getAttributedString from './getAttributedString';\n\nconst engines = {\n  linebreaker,\n  justification,\n  textDecoration,\n  scriptItemizer,\n  wordHyphenation,\n  fontSubstitution,\n};\n\nconst engine = layoutEngine(engines);\n\n/**\n * Get layout container for specific text node\n *\n * @param {Object} node\n * @param {Number} width\n * @param {Number} height\n * @returns {Object} layout container\n */\nconst getContainer = (node, width, height) => {\n  const maxLines = R.path(['style', 'maxLines'], node);\n  const textOverflow = R.path(['style', 'textOverflow'], node);\n\n  return {\n    x: 0,\n    y: 0,\n    width,\n    maxLines,\n    height: height || Infinity,\n    truncateMode: textOverflow,\n  };\n};\n\n/**\n * Get text layout options for specific text node\n *\n * @param {Object} node instance\n * @returns {Object} layout options\n */\nconst getLayoutOptions = node => ({\n  hyphenationPenalty: node.props.hyphenationPenalty,\n  hyphenationCallback: Font.getHyphenationCallback(),\n  shrinkWhitespaceFactor: { before: -0.5, after: -0.5 },\n});\n\n/**\n * Get text lines for given node\n *\n * @param {Object} node\n * @param {Number} container width\n * @param {Number} container height\n * @returns {Array} layout lines\n */\nconst layoutText = R.compose(\n  R.reduce(R.concat, []),\n  R.converge(engine, [getAttributedString, getContainer, getLayoutOptions]),\n);\n\n// TODO: Do it memoizable?\nexport default layoutText;\n","import AttributedString from '@react-pdf/textkit/attributedString';\n\n/**\n * Get lines width (if any)\n *\n * @param {Object} node\n * @returns {Number} lines width\n */\nconst linesWidth = node => {\n  if (!node.lines) return -1;\n  return Math.max(\n    ...node.lines.map(line => AttributedString.advanceWidth(line)),\n  );\n};\n\nexport default linesWidth;\n","/**\n * Get lines height (if any)\n *\n * @param {Object} node\n * @returns {Number} lines height\n */\nconst linesHeight = node => {\n  if (!node.lines) return -1;\n  return node.lines.reduce((acc, line) => acc + line.box.height, 0);\n};\n\nexport default linesHeight;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport layoutText from './layoutText';\nimport linesWidth from './linesWidth';\nimport linesHeight from './linesHeight';\n\n/**\n * Yoga text measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} text width and height\n */\nconst measureText = (page, node, width, widthMode, height, heightMode) => {\n  if (widthMode === Yoga.MEASURE_MODE_EXACTLY) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return { height: linesHeight(node) };\n  }\n\n  if (widthMode === Yoga.MEASURE_MODE_AT_MOST) {\n    if (!node.lines) node.lines = layoutText(node, width, height);\n\n    return {\n      height: linesHeight(node),\n      width: Math.min(width, linesWidth(node)),\n    };\n  }\n\n  return {};\n};\n\nexport default R.curryN(6, measureText);\n","import * as R from 'ramda';\n\n/**\n * Get image ratio\n *\n * @param {Object} image node\n * @returns {Number} image ratio\n */\nconst getRatio = R.ifElse(\n  R.hasPath(['image', 'data']),\n  node => node.image.width / node.image.height,\n  R.always(1),\n);\n\nexport default getRatio;\n","import * as R from 'ramda';\n\n/**\n * Checks if page has auto height\n *\n * @param {Object} page\n * @returns {Boolean} is page height auto\n */\nconst isHeightAuto = R.pathSatisfies(R.isNil, ['box', 'height']);\n\nexport default isHeightAuto;\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getRatio from '../image/getRatio';\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\n/**\n * Yoga image measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} image width and height\n */\nconst measureImage = (page, node, width, widthMode, height, heightMode) => {\n  const imageRatio = getRatio(node);\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  // Skip measure if image data not present yet\n  if (!node.image) return { width: 0, height: 0 };\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_UNDEFINED\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(pageArea, scaledHeight) };\n  }\n\n  if (\n    heightMode === Yoga.MEASURE_MODE_EXACTLY &&\n    (widthMode === Yoga.MEASURE_MODE_AT_MOST ||\n      widthMode === Yoga.MEASURE_MODE_UNDEFINED)\n  ) {\n    return { width: Math.min(height * imageRatio, width) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_EXACTLY &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    const scaledHeight = width / imageRatio;\n    return { height: Math.min(height, pageArea, scaledHeight) };\n  }\n\n  if (\n    widthMode === Yoga.MEASURE_MODE_AT_MOST &&\n    heightMode === Yoga.MEASURE_MODE_AT_MOST\n  ) {\n    if (imageRatio > 1) {\n      return {\n        width: width,\n        height: Math.min(width / imageRatio, height),\n      };\n    } else {\n      return {\n        width: Math.min(height * imageRatio, width),\n        height: height,\n      };\n    }\n  }\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureImage);\n","import * as R from 'ramda';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport isHeightAuto from '../page/isHeightAuto';\n\nconst SAFETY_HEIGHT = 10;\n\nconst getMax = R.reduce(R.max, -Infinity);\n\n/**\n * Helper object to predict canvas size\n * TODO: Implement remaining functions (as close as possible);\n */\nconst measureCtx = () => {\n  const ctx = {};\n  const points = [];\n\n  const nil = () => ctx;\n  const addPoint = (x, y) => points.push([x, y]);\n  const moveTo = R.compose(\n    nil,\n    addPoint,\n  );\n\n  const rect = (x, y, w, h) => {\n    addPoint(x, y);\n    addPoint(x + w, y);\n    addPoint(x, y + h);\n    addPoint(x + w, y + h);\n    return ctx;\n  };\n\n  const ellipse = (x, y, rx, ry) => {\n    ry = ry || rx;\n\n    addPoint(x - rx, y - ry);\n    addPoint(x + rx, y - ry);\n    addPoint(x + rx, y + ry);\n    addPoint(x - rx, y + ry);\n\n    return ctx;\n  };\n\n  const polygon = (...pts) => {\n    points.push(...pts);\n    return nil();\n  };\n\n  // Change dimensions\n  ctx.rect = rect;\n  ctx.moveTo = moveTo;\n  ctx.lineTo = moveTo;\n  ctx.circle = ellipse;\n  ctx.polygon = polygon;\n  ctx.ellipse = ellipse;\n  ctx.roundedRect = rect;\n\n  // To be implemented\n  ctx.text = nil;\n  ctx.path = nil;\n  ctx.lineWidth = nil;\n  ctx.bezierCurveTo = nil;\n  ctx.quadraticCurveTo = nil;\n\n  ctx.scale = nil;\n  ctx.rotate = nil;\n  ctx.translate = nil;\n\n  // These don't really change dimensions\n  ctx.dash = nil;\n  ctx.clip = nil;\n  ctx.save = nil;\n  ctx.fill = nil;\n  ctx.font = nil;\n  ctx.stroke = nil;\n  ctx.lineCap = nil;\n  ctx.opacity = nil;\n  ctx.restore = nil;\n  ctx.lineJoin = nil;\n  ctx.fontSize = nil;\n  ctx.fillColor = nil;\n  ctx.miterLimit = nil;\n  ctx.strokeColor = nil;\n  ctx.fillOpacity = nil;\n  ctx.strokeOpacity = nil;\n  ctx.linearGradient = nil;\n  ctx.radialGradient = nil;\n\n  ctx.getWidth = () =>\n    R.compose(\n      getMax,\n      R.pluck(0),\n    )(points);\n\n  ctx.getHeight = () =>\n    R.compose(\n      getMax,\n      R.pluck(1),\n    )(points);\n\n  return ctx;\n};\n\n/**\n * Yoga canbas measure function\n *\n * @param {Object} page\n * @param {Object} node\n * @param {Number} width\n * @param {Number} widthMode\n * @param {Number} height\n * @param {Number} heightMode\n * @returns {Object} canvas width and height\n */\nconst measureCanvas = (page, node) => {\n  const imageMargin = getMargin(node);\n  const pagePadding = getPadding(page);\n  const pageArea = isHeightAuto(page)\n    ? Infinity\n    : page.box.height -\n      pagePadding.paddingTop -\n      pagePadding.paddingBottom -\n      imageMargin.marginTop -\n      imageMargin.marginBottom -\n      SAFETY_HEIGHT;\n\n  const ctx = measureCtx();\n\n  node.props.paint(ctx);\n\n  const width = ctx.getWidth();\n  const height = Math.min(pageArea, ctx.getHeight());\n\n  return { height, width };\n};\n\nexport default R.curryN(6, measureCanvas);\n","import * as R from 'ramda';\nimport Yoga from 'yoga-layout';\n\nimport getMargin from '../node/getMargin';\nimport getPadding from '../node/getPadding';\nimport getPosition from '../node/getPosition';\nimport getDimension from '../node/getDimension';\nimport getBorderWidth from '../node/getBorderWidth';\nimport setFlex from '../node/setFlex';\nimport setDisplay from '../node/setDisplay';\nimport setOverflow from '../node/setOverflow';\nimport setFlexWrap from '../node/setFlexWrap';\nimport setFlexGrow from '../node/setFlexGrow';\nimport setFlexBasis from '../node/setFlexBasis';\nimport setAlignSelf from '../node/setAlignSelf';\nimport setFlexShrink from '../node/setFlexShrink';\nimport setAspectRatio from '../node/setAspectRatio';\nimport setAlignContent from '../node/setAlignContent';\nimport setPositionType from '../node/setPositionType';\nimport setFlexDirection from '../node/setFlexDirection';\nimport setJustifyContent from '../node/setJustifyContent';\nimport {\n  setMarginTop,\n  setMarginRight,\n  setMarginBottom,\n  setMarginLeft,\n} from '../node/setMargin';\nimport {\n  setPaddingTop,\n  setPaddingRight,\n  setPaddingBottom,\n  setPaddingLeft,\n} from '../node/setPadding';\nimport {\n  setBorderTop,\n  setBorderRight,\n  setBorderBottom,\n  setBorderLeft,\n} from '../node/setBorderWidth';\nimport {\n  setPositionTop,\n  setPositionRight,\n  setPositionBottom,\n  setPositionLeft,\n} from '../node/setPosition';\nimport {\n  setWidth,\n  setHeight,\n  setMinWidth,\n  setMaxWidth,\n  setMinHeight,\n  setMaxHeight,\n} from '../node/setDimension';\nimport isText from '../node/isText';\nimport isNote from '../node/isNote';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isCanvas from '../node/isCanvas';\nimport measureText from '../text/measureText';\nimport measureImage from '../image/measureImage';\nimport measureCanvas from '../canvas/measureCanvas';\nimport isTextInstance from '../node/isTextInstance';\n\nconst YOGA_NODE = '_yogaNode';\nconst YOGA_CONFIG = Yoga.Config.create();\n\nYOGA_CONFIG.setPointScaleFactor(0);\n\nconst setNodeHeight = node =>\n  R.ifElse(\n    isPage,\n    setHeight(node.box.height),\n    setHeight(node.box.height || node.style.height),\n  );\n\n/**\n * Set styles valeus into yoga node before layout calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst setYogaValues = R.tap(node => {\n  R.compose(\n    setNodeHeight(node),\n    setWidth(node.style.width),\n    setMinWidth(node.style.minWidth),\n    setMaxWidth(node.style.maxWidth),\n    setMinHeight(node.style.minHeight),\n    setMaxHeight(node.style.maxHeight),\n    setMarginTop(node.style.marginTop),\n    setMarginRight(node.style.marginRight),\n    setMarginBottom(node.style.marginBottom),\n    setMarginLeft(node.style.marginLeft),\n    setPaddingTop(node.style.paddingTop),\n    setPaddingRight(node.style.paddingRight),\n    setPaddingBottom(node.style.paddingBottom),\n    setPaddingLeft(node.style.paddingLeft),\n    setPositionType(node.style.position),\n    setPositionTop(node.style.top),\n    setPositionRight(node.style.right),\n    setPositionBottom(node.style.bottom),\n    setPositionLeft(node.style.left),\n    setBorderTop(node.style.borderTopWidth),\n    setBorderRight(node.style.borderRightWidth),\n    setBorderBottom(node.style.borderBottomWidth),\n    setBorderLeft(node.style.borderLeftWidth),\n    setDisplay(node.style.display),\n    setFlexDirection(node.style.flexDirection),\n    setAlignSelf(node.style.alignSelf),\n    setAlignContent(node.style.alignContent),\n    setJustifyContent(node.style.justifyContent),\n    setFlexWrap(node.style.flexWrap),\n    setOverflow(node.style.overflow),\n    setAspectRatio(node.style.aspectRatio),\n    setFlex(node.style.flex),\n    setFlexBasis(node.style.flexBasis),\n    setFlexGrow(node.style.flexGrow),\n    setFlexShrink(node.style.flexShrink),\n  )(node);\n});\n\n/**\n * Inserts child into parent' yoga node\n *\n * @param {Object} parent\n * @param {Object} node\n * @param {Object} node\n */\nconst insertYogaNodes = parent =>\n  R.tap(child => parent.insertChild(child[YOGA_NODE], parent.getChildCount()));\n\nconst setMeasureFunc = page => node => {\n  const yogaNode = node[YOGA_NODE];\n\n  if (isText(node)) {\n    yogaNode.setMeasureFunc(measureText(page, node));\n  }\n\n  if (isImage(node)) {\n    yogaNode.setMeasureFunc(measureImage(page, node));\n  }\n\n  if (isCanvas(node)) {\n    yogaNode.setMeasureFunc(measureCanvas(page, node));\n  }\n\n  return node;\n};\n\nconst isNotText = R.complement(isText);\nconst isNotNote = R.complement(isNote);\nconst isLayoutElement = R.both(isNotText, isNotNote);\nconst isNotTextInstance = R.complement(isTextInstance);\n\n/**\n * Creates and add yoga node to document tree\n * Handles measure function for text and image nodes\n *\n * @param {Object} node\n * @returns {Object} node with appended yoga node\n */\nconst createYogaNodes = page => node => {\n  const yogaNode = Yoga.Node.createWithConfig(YOGA_CONFIG);\n\n  return R.compose(\n    setMeasureFunc(page),\n    R.when(\n      isLayoutElement,\n      R.evolve({\n        children: R.map(\n          R.compose(\n            insertYogaNodes(yogaNode),\n            createYogaNodes(page),\n          ),\n        ),\n      }),\n    ),\n    setYogaValues,\n    R.assoc(YOGA_NODE, yogaNode),\n  )(node);\n};\n\n/**\n * Performs yoga calculation\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst calculateLayout = R.tap(page => page[YOGA_NODE].calculateLayout());\n\n/**\n * Saves Yoga layout result into 'box' attribute of node\n *\n * @param {Object} node\n * @returns {Object} node with box data\n */\nconst persistDimensions = node => {\n  return R.evolve({\n    children: R.map(R.when(isNotTextInstance, persistDimensions)),\n    box: R.always(\n      R.mergeAll([\n        getPadding(node),\n        getMargin(node),\n        getBorderWidth(node),\n        getPosition(node),\n        getDimension(node),\n      ]),\n    ),\n  })(node);\n};\n\n/**\n * Removes and destroys yoga node frm document tree\n *\n * @param {Object} node\n * @returns {Object} node without yoga node\n */\nconst destroyYogaNodes = node => {\n  return R.compose(\n    R.dissoc(YOGA_NODE),\n    R.tap(n => Yoga.Node.destroy(n[YOGA_NODE])),\n    R.evolve({ children: R.map(R.when(isLayoutElement, destroyYogaNodes)) }),\n  )(node);\n};\n\n/**\n * Calculates page object layout using Yoga.\n * Takes node values from 'box' and 'style' attributes, and persist them back into 'box'\n * Destroy yoga values at the end.\n *\n * @param {Object} page object\n * @returns {Object} page object with correct 'box' layout attributes\n */\nexport const resolvePageDimensions = page =>\n  R.ifElse(\n    R.isNil,\n    R.always(null),\n    R.compose(\n      destroyYogaNodes,\n      persistDimensions,\n      calculateLayout,\n      createYogaNodes(page),\n    ),\n  )(page);\n\n/**\n * Calculates root object layout using Yoga.\n *\n * @param {Object} root object\n * @returns {Object} root object with correct 'box' layout attributes\n */\nconst resolveDimensions = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageDimensions),\n    }),\n  ),\n});\n\nexport default resolveDimensions;\n","import * as R from 'ramda';\n\nimport isText from '../node/isText';\nimport layoutText from '../text/layoutText';\n\nconst shouldLayoutText = node => isText(node) && !node.lines;\n\n/**\n * Performs text layout on text node if wasn't calculated before.\n * Text layout is usually performed on Yoga's layout process (via setMeasureFunc),\n * but we need to layout those nodes with fixed width and height.\n *\n * @param {Object} node\n * @returns {Object} layouted node\n */\nconst resolveTextLayout = node =>\n  R.compose(\n    R.evolve({ children: R.map(resolveTextLayout) }),\n    R.when(\n      shouldLayoutText,\n      R.compose(\n        R.converge(R.assoc('lines'), [\n          R.converge(layoutText, [\n            R.identity,\n            R.path(['box', 'width']),\n            R.path(['box', 'height']),\n          ]),\n          R.identity,\n        ]),\n      ),\n    ),\n  )(node);\n\nexport default resolveTextLayout;\n","import * as R from 'ramda';\n\nimport { INHERITED_PROPERTIES } from '../constants';\n\n/**\n * Get styles sub group of inherited properties\n *\n * @param {Object} style object\n * @returns {Object} style object only with inherited properties\n */\nconst getInheritStyles = R.compose(\n  R.pick(INHERITED_PROPERTIES),\n  R.propOr({}, 'style'),\n);\n\n/**\n * Merges styles with node\n *\n * @param {Object} style object\n * @param {Object} node\n * @returns {Object} node with styles merged\n */\nconst mergeStyles = styles =>\n  R.evolve({\n    style: R.merge(styles),\n  });\n\n/**\n * Inherit style values from the root to the leafs\n *\n * @param {Object} document root\n * @returns {Object} document root with inheritance\n *\n */\nconst resolveInheritance = node => {\n  const inheritStyles = getInheritStyles(node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveInheritance,\n        mergeStyles(inheritStyles),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveInheritance;\n","import * as R from 'ramda';\n\nimport setMargin from './setMargin';\n\n/**\n * Removes margins on node\n *\n * @param {Object} node\n * @returns {Object} node without margins\n */\nconst removeMargins = R.compose(\n  setMargin(0),\n  R.dissocPath(['style', 'margin']),\n  R.dissocPath(['style', 'marginTop']),\n  R.dissocPath(['style', 'marginRight']),\n  R.dissocPath(['style', 'marginBottom']),\n  R.dissocPath(['style', 'marginLeft']),\n  R.dissocPath(['style', 'marginHorizontal']),\n  R.dissocPath(['style', 'marginVertical']),\n);\n\nexport default removeMargins;\n","import * as R from 'ramda';\n\nimport removeMargins from '../node/removeMargins';\n\n/**\n * Remove page margins\n *\n * @param {Object} document root\n * @returns {Object} documrnt root without margins on pages\n */\nconst resolvePageMargins = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(removeMargins),\n    }),\n  ),\n});\n\nexport default resolvePageMargins;\n","import * as R from 'ramda';\n\n/**\n * Get many nodes height\n *\n * @param {Array} nodes\n * @return {number} nodes height\n */\nconst getNodesHeight = nodes => {\n  let max = 0;\n  let min = Infinity;\n\n  if (R.isEmpty(nodes)) return 0;\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    min = Math.min(min, node.box.top);\n    max = Math.max(max, node.box.top + node.box.height);\n  }\n\n  return max - min;\n};\n\nexport default getNodesHeight;\n","import * as R from 'ramda';\n\nimport isNote from './isNote';\nimport isImage from './isImage';\nimport isCanvas from './isCanvas';\nimport getNodesHeight from './getNodesHeight';\n\nconst getWrap = R.ifElse(\n  R.anyPass([isNote, isImage, isCanvas]),\n  R.always(false),\n  R.pathOr(true, ['props', 'wrap']),\n);\n\nconst getBreak = R.pathOr(false, ['props', 'break']);\n\nconst getMinPresenceAhead = R.path(['props', 'minPresenceAhead']);\n\nconst defaultPresenceAhead = element => height =>\n  Math.min(element.box.height, height);\n\nconst getPresenceAhead = (elements, height) => {\n  let result = 0;\n\n  for (let i = 0; i < elements.length; i++) {\n    const element = elements[i];\n\n    if (!element.box) continue;\n\n    const isElementInside = height > element.box.top;\n    const presenceAhead =\n      element.props.presenceAhead || defaultPresenceAhead(element);\n\n    if (element && isElementInside) {\n      result += presenceAhead(height - element.box.top);\n    }\n  }\n\n  return result;\n};\n\nconst shouldBreak = (child, futureElements, height) => {\n  const minPresenceAhead = getMinPresenceAhead(child);\n  const presenceAhead = getPresenceAhead(futureElements, height);\n  const futureHeight = getNodesHeight(futureElements);\n  const shouldSplit = height < child.box.top + child.box.height;\n  const shouldWrap = getWrap(child);\n\n  return (\n    getBreak(child) ||\n    (!shouldWrap && shouldSplit) ||\n    (minPresenceAhead < futureHeight && presenceAhead < minPresenceAhead)\n  );\n};\n\nexport default shouldBreak;\n","import * as R from 'ramda';\n\nconst getPaddingBottom = R.pathOr(0, ['style', 'paddingBottom']);\n\nconst getContentArea = page => {\n  const paddingBottom = getPaddingBottom(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingBottom;\n};\n\nexport default getContentArea;\n","import * as R from 'ramda';\n\nimport shouldNodeBreak from '../node/shouldBreak';\nimport getContentArea from '../page/getContentArea';\nimport { resolvePageDimensions } from './resolveDimensions';\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst setChildren = R.assoc('children');\n\nconst setHeight = R.assocPath(['box', 'height']);\n\nconst setBreak = R.assocPath(['props', 'break']);\n\nconst breakChildren = (height, node) => {\n  const children = getChildren(node);\n\n  let offset = null;\n  let nextElements = [];\n  const currentElements = [];\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n    const childTop = getTop(child);\n    const childHeight = getHeight(child);\n    const futureElements = children.slice(i + 1);\n    const shouldBreak = shouldNodeBreak(child, futureElements, height);\n\n    if (shouldBreak) {\n      offset = childTop;\n      nextElements = R.compose(\n        R.prepend(setBreak(false, child)),\n        R.slice(i + 1, Infinity),\n      )(children);\n      break;\n    }\n\n    const [currentChildren, nextChildren, childsOffset] = breakChildren(\n      height,\n      child,\n    );\n\n    if (R.isNil(childsOffset)) {\n      currentElements.push(setChildren(currentChildren, child));\n      continue;\n    }\n\n    offset = childTop + childsOffset;\n\n    currentElements.push(\n      R.compose(\n        setChildren(currentChildren),\n        setHeight(Math.ceil(offset / height) * height - childTop),\n      )(child),\n    );\n\n    nextElements = R.compose(\n      R.prepend(\n        R.compose(\n          setChildren(nextChildren),\n          setHeight(child.box.height - childHeight),\n        )(child),\n      ),\n      R.slice(i + 1, Infinity),\n    )(children);\n\n    break;\n  }\n\n  return [currentElements, nextElements, offset];\n};\n\nconst breakNode = height => node => {\n  const [currentChildren, nextChildren, offset] = breakChildren(height, node);\n\n  if (R.isNil(offset)) return [node];\n\n  const currentNode = R.compose(\n    setChildren(currentChildren),\n    setHeight(Math.ceil(offset / height) * height),\n  )(node);\n\n  const nextNode = R.compose(\n    setChildren(nextChildren),\n    setHeight(node.box.height - offset),\n  )(node);\n\n  return [currentNode, nextNode];\n};\n\nconst breakPage = page => {\n  const pages = [];\n  const height = getContentArea(page);\n\n  let subpages = breakNode(height)(page);\n  let current = subpages[0];\n  let nextPage = subpages[1];\n\n  pages.push(current);\n\n  while (nextPage) {\n    subpages = R.compose(\n      breakNode(height),\n      resolvePageDimensions,\n      setHeight(null),\n    )(nextPage);\n\n    current = subpages[0];\n    nextPage = subpages[1];\n\n    pages.push(current);\n  }\n\n  return pages;\n};\n\nconst resolvePageBreaks = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.compose(\n        R.flatten,\n        R.map(breakPage),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageBreaks;\n","import * as R from 'ramda';\n\nconst getTop = R.pathOr(0, ['box', 'top']);\n\nconst getHeight = R.path(['box', 'height']);\n\nconst getChildren = R.propOr([], 'children');\n\nconst isElementOutside = R.useWith(R.lte, [R.identity, getTop]);\n\nconst splitNodes = (height, nodes) => {\n  const currentChildren = [];\n  const nextChildren = [];\n\n  for (let i = 0; i < nodes.length; i++) {\n    const child = nodes[i];\n    const [currentChild, nextChild] = splitNode(height, child);\n\n    if (currentChild) currentChildren.push(currentChild);\n    if (nextChild) nextChildren.push(nextChild);\n  }\n\n  return [currentChildren, nextChildren];\n};\n\nconst splitChildren = (height, node) => {\n  const children = getChildren(node);\n  const availableHeight = height - getTop(node);\n  return splitNodes(availableHeight, children);\n};\n\nconst splitNode = R.curryN(2, (height, node) => {\n  if (!node) return [null, null];\n\n  const nodeTop = getTop(node);\n  const nodeHeight = getHeight(node);\n  const isOutside = isElementOutside(height, node);\n  const shouldSplit = height < nodeTop + nodeHeight;\n\n  if (isOutside) {\n    const next = R.evolve({ box: { top: R.subtract(R.__, height) } })(node);\n    return [null, next, false];\n  }\n\n  if (shouldSplit) {\n    const [currentChilds, nextChildren] = splitChildren(height, node);\n\n    const current = R.evolve({\n      children: R.always(currentChilds),\n      style: {\n        borderBottomLeftRadius: R.always(0),\n        borderBottomRightRadius: R.always(0),\n      },\n      box: {\n        height: R.when(R.always(shouldSplit), R.always(height - nodeTop)),\n      },\n    })(node);\n\n    const next = R.evolve({\n      children: R.always(nextChildren),\n      style: {\n        borderTopLeftRadius: R.always(0),\n        borderTopRightRadius: R.always(0),\n      },\n      box: {\n        top: R.always(0),\n        height: R.subtract(R.__, height - nodeTop),\n      },\n    })(node);\n\n    return [current, next];\n  }\n\n  return [node, null, false];\n});\n\nexport default splitNode;\n","import * as R from 'ramda';\n\nimport splitNode from '../node/split';\n\nconst getPaddingBottom = R.pathOr(0, ['style', 'paddingBottom']);\n\nconst getWrappingArea = page => {\n  const paddingBottom = getPaddingBottom(page);\n  const height = R.path(['style', 'height'], page);\n  return height - paddingBottom;\n};\n\nconst splitPage = page => {\n  if (!page) return [];\n\n  const height = getWrappingArea(page);\n  let splittedPage = splitNode(height, page);\n  const pages = [splittedPage[0]];\n  let nextPage = splittedPage[1];\n\n  while (nextPage !== null) {\n    splittedPage = splitNode(height, nextPage);\n    pages.push(splittedPage[0]);\n    nextPage = splittedPage[1];\n  }\n\n  return pages;\n};\n\nconst resolvePageSplitting = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.compose(\n        R.flatten,\n        R.map(splitPage),\n      ),\n    }),\n  ),\n});\n\nexport default resolvePageSplitting;\n","import * as R from 'ramda';\n\nimport { resolvePageSize } from './resolvePageSizes';\nimport resolvePageBreaks from './resolvePageBreaks';\nimport resolvePageSplitting from './resolvePageSplitting';\n\nconst restorePageSize = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePageSize('box')),\n    }),\n  ),\n});\n\nconst resolvePageWrapping = R.compose(\n  restorePageSize,\n  resolvePageSplitting,\n  resolvePageBreaks,\n);\n\nexport default resolvePageWrapping;\n","import * as R from 'ramda';\n\nimport isNote from '../node/isNote';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Get node underlying text value\n *\n * @param {Object} node\n * @returns {String} node text content\n */\nconst getNodeText = node =>\n  R.cond([\n    [R.is(String), R.identity],\n    [isTextInstance, R.prop('value')],\n    [\n      R.T,\n      R.compose(\n        getNodesText,\n        R.propOr([], 'children'),\n      ),\n    ],\n  ])(node);\n\n/**\n * Get underlying text value of several nodes\n *\n * @param {Array} nodes\n * @returns {String} nodes text content\n */\nconst getNodesText = R.compose(\n  R.join(''),\n  R.map(getNodeText),\n);\n\n/**\n * Transforms string to text instance\n *\n * @param {String} value\n * @returns {Array} text intance\n */\nconst wrapTextInstance = value => [{ type: 'TEXT_INSTANCE', value }];\n\n/**\n * Cast Note children as a text instance\n *\n * @param {Object} node\n * @returns {Object} node with resolved note children\n */\nconst resolveNoteChildren = node =>\n  R.ifElse(\n    isNote,\n    R.evolve({\n      children: R.compose(\n        wrapTextInstance,\n        getNodesText,\n      ),\n    }),\n    R.evolve({ children: R.map(resolveNoteChildren) }),\n  )(node);\n\nexport default resolveNoteChildren;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/*\n * Translates page percentage horizontal paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageHorizontalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.width : value;\n};\n\n/**\n * Translates page percentage vertical paddings in fixed ones\n *\n * @param {Object} page container\n * @param {String} padding value\n * @returns {Object} translated padding value\n */\nconst resolvePageVerticalPadding = container => value => {\n  const match = matchPercent(value);\n  return match ? match.percent * container.height : value;\n};\n\n/**\n * Translates page percentage paddings in fixed ones\n *\n * @param {Object} page\n * @returns {Object} page with fixed paddings\n */\nconst resolvePagePaddings = page =>\n  R.evolve({\n    style: R.evolve({\n      paddingLeft: resolvePageHorizontalPadding(page.box),\n      paddingRight: resolvePageHorizontalPadding(page.box),\n      paddingTop: resolvePageVerticalPadding(page.box),\n      paddingBottom: resolvePageVerticalPadding(page.box),\n    }),\n  })(page);\n\n/**\n * Translates all pages percentage paddings in fixed ones\n *\n * @param {Object} document root\n * @returns {Object} document root with translated page paddings\n */\nexport default R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePagePaddings),\n    }),\n  ),\n});\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n *\n * @param {Object} container width and height\n * @param {String | Number} value border radius value\n * @returns {Number} fixed border radius value\n */\nconst resolveRadius = container => value => {\n  const match = matchPercent(value);\n  return match\n    ? match.percent * Math.min(container.width, container.height)\n    : value;\n};\n\n/**\n * Transforms percent border radius into fixed values\n *\n * @param {Object} node\n * @returns {Object} node\n */\nconst resolvePercentRadius = node =>\n  R.evolve({\n    children: R.map(resolvePercentRadius),\n    style: R.evolve({\n      borderTopLeftRadius: resolveRadius(node.box),\n      borderTopRightRadius: resolveRadius(node.box),\n      borderBottomRightRadius: resolveRadius(node.box),\n      borderBottomLeftRadius: resolveRadius(node.box),\n    }),\n  })(node);\n\nexport default resolvePercentRadius;\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\n\n/**\n * Transform percent height into fixed\n *\n * @param {String | number} height\n * @return {number} height\n */\nconst transformHeight = pageArea => height => {\n  const match = matchPercent(height);\n  return match ? match.percent * pageArea : height;\n};\n\n/**\n * Get page area (height minus paddings)\n *\n * @param {Object} page\n * @return {number} page area\n */\nconst getPageArea = page => {\n  const pageHeight = R.path(['style', 'height'], page);\n  const pagePaddingTop = R.pathOr(0, ['style', 'paddingTop'], page);\n  const pagePaddingBottom = R.pathOr(0, ['style', 'paddingBottom'], page);\n  return pageHeight - pagePaddingTop - pagePaddingBottom;\n};\n\n/**\n * Checks if page has height\n *\n * @param {Object} page\n * @return {boolean} page has height\n */\nconst hasHeight = R.hasPath(['style', 'height']);\n\n/**\n * Transform node percent height to fixed\n *\n * @param {Object} page\n * @param {Object} node\n * @return {Object} transformed node\n */\nconst resolveNodePercentHeight = page => node => {\n  if (hasHeight(page)) {\n    const pageArea = getPageArea(page);\n    return R.evolve({ style: { height: transformHeight(pageArea) } })(node);\n  }\n\n  return node;\n};\n\n/**\n * Transform page immediate children with percent height to fixed\n *\n * @param {Object} page\n * @return {Object} transformed page\n */\nconst resolvePagePercentHeight = page =>\n  R.evolve({\n    children: R.map(resolveNodePercentHeight(page)),\n  })(page);\n\n/**\n * Transform all page immediate children with percent height to fixed\n *\n * @param {Object} document root\n * @return {Object} transformed document root\n */\nconst resolvePercentHeight = R.evolve({\n  children: R.map(\n    R.evolve({\n      children: R.map(resolvePagePercentHeight),\n    }),\n  ),\n});\n\nexport default resolvePercentHeight;\n","import * as R from 'ramda';\n\nimport { LINK } from '../constants';\n\n/**\n * Checks if node is link\n *\n * @param {Object} node\n * @returns {Boolean} is node link?\n */\nconst isLink = R.propEq('type', LINK);\n\nexport default isLink;\n","import * as R from 'ramda';\n\nimport { TEXT } from '../constants';\nimport isLink from '../node/isLink';\nimport isTextInstance from '../node/isTextInstance';\n\n/**\n * Checks if node has render prop\n *\n * @param {Object} node\n * @returns {Boolean} has render prop?\n */\nconst hasRenderProp = R.hasPath(['props', 'render']);\n\n/**\n * Checks if all children of node are text instances\n *\n * @param {Object} node\n * @returns {Boolean} are all children text instances?\n */\nconst hasTextInstanceChilds = R.compose(\n  R.all(isTextInstance),\n  R.propOr([], 'children'),\n);\n\n/**\n * If the Link has a strign child or render prop, substitute the instance by a Text,\n * that will ultimately render the inline Link via the textkit PDF renderer.\n *\n * @param {Object} node\n * @returns {Object} node with link substitution\n */\nconst resolveLinkSubstitution = node =>\n  R.evolve({\n    children: R.map(\n      R.ifElse(\n        R.both(isLink, R.either(hasRenderProp, hasTextInstanceChilds)),\n        R.assoc('type', TEXT),\n        resolveLinkSubstitution,\n      ),\n    ),\n  })(node);\n\nexport default resolveLinkSubstitution;\n","import * as R from 'ramda';\n\n/**\n * Translates relative coordinates to absolute coordinates\n *\n * @param {Object} root node\n * @returns {Object} root node with absolute coordinates\n */\nconst resolveAbsoluteCoordinates = node => {\n  const top = R.pathOr(0, ['box', 'top'], node);\n  const left = R.pathOr(0, ['box', 'left'], node);\n\n  return R.evolve({\n    children: R.map(\n      R.compose(\n        resolveAbsoluteCoordinates,\n        R.evolve({\n          box: R.evolve({\n            top: R.add(top),\n            bottom: R.add(top),\n            left: R.add(left),\n            right: R.add(left),\n          }),\n          origin: R.evolve({\n            top: R.add(top),\n            left: R.add(left),\n          }),\n        }),\n      ),\n    ),\n  })(node);\n};\n\nexport default resolveAbsoluteCoordinates;\n","import * as R from 'ramda';\n\n/**\n * Performs right-to-left function composition with async functions support\n *\n * @param  {...any} functions\n */\nconst asyncCompose = (...fns) => async value => {\n  for (const fn of R.reverse(fns)) value = await fn(value);\n  return value;\n};\n\nexport default asyncCompose;\n","import * as R from 'ramda';\n\nimport resolveAssets from './resolveAssets';\nimport resolveStyles from './resolveStyles';\nimport resolveZIndex from './resolveZIndex';\nimport resolveRulers from './resolveRulers';\nimport resolveOrigins from './resolveOrigins';\nimport resolvePageSizes from './resolvePageSizes';\nimport resolveDimensions from './resolveDimensions';\nimport resolveTextLayout from './resolveTextLayout';\nimport resolveInheritance from './resolveInheritance';\nimport resolvePageMargins from './resolvePageMargins';\nimport resolvePageWrapping from './resolvePageWrapping';\nimport resolveNoteChildren from './resolveNoteChildren';\nimport resolvePagePaddings from './resolvePagePaddings';\nimport resolvePercentRadius from './resolvePercentRadius';\nimport resolvePercentHeight from './resolvePercentHeight';\nimport resolveLinkSubstitution from './resolveLinkSubstitution';\nimport resolveAbsoluteCoordinates from './resolveAbsoluteCoordinates';\nimport asyncCompose from '../utils/asyncCompose';\n\nconst startTimer = name => R.tap(() => console.time(name));\nconst endTimer = name => R.tap(() => console.timeEnd(name));\n\nconst resolvePageSizeStyle = resolvePageSizes('style');\n\nconst layout = asyncCompose(\n  resolveAbsoluteCoordinates,\n  resolveRulers,\n  resolveOrigins,\n  endTimer('resolvePageBreaks'),\n  resolvePageWrapping,\n  startTimer('resolvePageBreaks'),\n  resolveTextLayout,\n  resolvePercentRadius,\n  resolveZIndex,\n  resolveDimensions,\n  resolveAssets,\n  resolveInheritance,\n  resolvePercentHeight,\n  resolvePagePaddings,\n  resolveStyles,\n  resolveNoteChildren,\n  resolveLinkSubstitution,\n  resolvePageMargins,\n  resolvePageSizeStyle,\n);\n\nexport default layout;\n","import * as R from 'ramda';\n\nconst save = ctx => R.tap(() => ctx.save());\n\nexport default save;\n","import * as R from 'ramda';\n\nconst restore = ctx => R.tap(() => ctx.restore());\n\nexport default restore;\n","import * as R from 'ramda';\nimport PDFRenderer from '@react-pdf/textkit/renderers/pdf';\n\nconst renderText = (ctx, node) => {\n  const { top, left } = node.box;\n  const paddingTop = R.pathOr(0, ['box', 'paddingTop'], node);\n  const paddingLeft = R.pathOr(0, ['box', 'paddingLeft'], node);\n  const initialY = node.lines[0] ? node.lines[0].box.y : 0;\n\n  ctx.save();\n  ctx.translate(left + paddingLeft, top + paddingTop - initialY);\n  PDFRenderer.render(ctx, [node.lines]);\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderText);\n","import * as R from 'ramda';\n\nconst renderPage = (ctx, node) => {\n  const { width, height } = node.box;\n\n  ctx.addPage({ size: [width, height], margin: 0 });\n\n  return node;\n};\n\nexport default R.curryN(2, renderPage);\n","const PROTOCOL_REGEXP = /^([a-z]+\\:(\\/\\/)?)/i;\n\n/**\n * Add protocol th URL if valid\n *\n * @param {String} value url\n * @returns {String} corrected url\n */\nexport const getURL = value => {\n  if (!value) return '';\n\n  if (typeof value === 'string' && !value.match(PROTOCOL_REGEXP)) {\n    return `http://${value}`;\n  }\n\n  return value;\n};\n","import * as R from 'ramda';\n\nimport { getURL } from '../utils/url';\n\nconst getSource = R.compose(\n  getURL,\n  R.either(R.path(['props', 'src']), R.path(['props', 'href'])),\n);\n\nexport default getSource;\n","import * as R from 'ramda';\n\nimport getSource from '../link/getSource';\n\nconst renderLink = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n  const src = getSource(node);\n\n  ctx.link(left, top, width, height, src);\n\n  return node;\n};\n\nexport default R.curryN(2, renderLink);\n","import * as R from 'ramda';\n\nconst renderNote = (ctx, node) => {\n  const { top, left } = node.box;\n  const value = node.children[0] ? node.children[0].value : '';\n\n  ctx.note(left, top, 0, 0, value);\n\n  return node;\n};\n\nexport default R.curryN(2, renderNote);\n","import * as R from 'ramda';\n\n// This constant is used to approximate a symmetrical arc using a cubic\n// Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipNode = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const {\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomRightRadius = 0,\n    borderBottomLeftRadius = 0,\n  } = node.style;\n\n  // Border top\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const ctr = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rtr, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - ctr,\n    top,\n    left + width,\n    top + ctr,\n    left + width,\n    top + rtr,\n  );\n\n  // Border right\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const cbr = rbr * (1.0 - KAPPA);\n\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - cbr,\n    left + width - cbr,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Border bottom\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n  const cbl = rbl * (1.0 - KAPPA);\n\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + cbl,\n    top + height,\n    left,\n    top + height - cbl,\n    left,\n    top + height - rbl,\n  );\n\n  // Border left\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const ctl = rtl * (1.0 - KAPPA);\n\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + ctl, left + ctl, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  return node;\n};\n\nexport default R.curryN(2, clipNode);\n","import matchPercent from '../utils/matchPercent';\n\nconst isNumeric = n => {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nconst applyContainObjectFit = (cw, ch, iw, ih, px, py) => {\n  const cr = cw / ch;\n  const ir = iw / ih;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const height = ch;\n    const width = height * ir;\n    const yOffset = isNumeric(py) ? py : 0;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n\n    return { width, height, xOffset, yOffset };\n  } else {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n    return { width, height, yOffset, xOffset };\n  }\n};\n\nconst applyNoneObjectFit = (cw, ch, iw, ih, px, py) => {\n  const width = iw;\n  const height = ih;\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n  const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n  const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n\n  return { width, height, xOffset, yOffset };\n};\n\nconst applyCoverObjectFit = (cw, ch, iw, ih, px, py) => {\n  const ir = iw / ih;\n  const cr = cw / ch;\n\n  const pxp = matchPercent(px);\n  const pyp = matchPercent(py);\n  const pxv = pxp ? pxp.percent : 0.5;\n  const pyv = pyp ? pyp.percent : 0.5;\n\n  if (cr > ir) {\n    const width = cw;\n    const height = width / ir;\n    const xOffset = isNumeric(px) ? px : 0;\n    const yOffset = isNumeric(py) ? py : (ch - height) * pyv;\n    return { width, height, yOffset, xOffset };\n  } else {\n    const height = ch;\n    const width = height * ir;\n    const xOffset = isNumeric(px) ? px : (cw - width) * pxv;\n    const yOffset = isNumeric(py) ? py : 0;\n    return { width, height, xOffset, yOffset };\n  }\n};\n\nconst applyScaleDownObjectFit = (cw, ch, iw, ih, px, py) => {\n  const containDimension = applyContainObjectFit(cw, ch, iw, ih, px, py);\n  const noneDimension = applyNoneObjectFit(cw, ch, iw, ih, px, py);\n\n  return containDimension.width < noneDimension.width\n    ? containDimension\n    : noneDimension;\n};\n\nconst applyFillObjectFit = (cw, ch, px, py) => {\n  return {\n    width: cw,\n    height: ch,\n    xOffset: matchPercent(px) ? 0 : px || 0,\n    yOffset: matchPercent(py) ? 0 : py || 0,\n  };\n};\n\nconst resolveObjectFit = (type = 'fill', cw, ch, iw, ih, px, py) => {\n  switch (type) {\n    case 'contain':\n      return applyContainObjectFit(cw, ch, iw, ih, px, py);\n    case 'cover':\n      return applyCoverObjectFit(cw, ch, iw, ih, px, py);\n    case 'none':\n      return applyNoneObjectFit(cw, ch, iw, ih, px, py);\n    case 'scale-down':\n      return applyScaleDownObjectFit(cw, ch, iw, ih, px, py);\n    default:\n      return applyFillObjectFit(cw, ch, px, py);\n  }\n};\n\nexport default resolveObjectFit;\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\nimport warning from '../utils/warning';\nimport resolveObjectFit from '../image/resolveObjectFit';\n\nconst drawImage = ctx => node => {\n  const { left, top } = node.box;\n  const { opacity, objectPositionX, objectPositionY } = node.style;\n  const paddingTop = node.box.paddingLeft || 0;\n  const paddingRight = node.box.paddingRight || 0;\n  const paddingBottom = node.box.paddingBottom || 0;\n  const paddingLeft = node.box.paddingLeft || 0;\n\n  const { width, height, xOffset, yOffset } = resolveObjectFit(\n    node.style.objectFit,\n    node.box.width - paddingLeft - paddingRight,\n    node.box.height - paddingTop - paddingBottom,\n    node.image.width,\n    node.image.height,\n    objectPositionX,\n    objectPositionY,\n  );\n\n  if (node.image.data) {\n    if (width !== 0 && height !== 0) {\n      ctx\n        .fillOpacity(opacity || 1)\n        .image(\n          node.image.data,\n          left + paddingLeft + xOffset,\n          top + paddingTop + yOffset,\n          {\n            width,\n            height,\n          },\n        );\n    } else {\n      warning(\n        false,\n        `Image with src '${node.props.src}' skipped due to invalid dimensions`,\n      );\n    }\n  }\n\n  return node;\n};\n\nconst renderImage = (ctx, node) => {\n  R.compose(\n    restore(ctx),\n    drawImage(ctx),\n    clipNode(ctx),\n    save(ctx),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderImage);\n","export const availableMethods = [\n  'dash',\n  'clip',\n  'save',\n  'path',\n  'fill',\n  'font',\n  'text',\n  'rect',\n  'scale',\n  'moveTo',\n  'lineTo',\n  'stroke',\n  'rotate',\n  'circle',\n  'lineCap',\n  'opacity',\n  'ellipse',\n  'polygon',\n  'restore',\n  'lineJoin',\n  'fontSize',\n  'fillColor',\n  'lineWidth',\n  'translate',\n  'miterLimit',\n  'strokeColor',\n  'fillOpacity',\n  'roundedRect',\n  'strokeOpacity',\n  'bezierCurveTo',\n  'quadraticCurveTo',\n  'linearGradient',\n  'radialGradient',\n];\n\nconst painter = function(ctx) {\n  const p = availableMethods.reduce(\n    (acc, prop) => ({\n      ...acc,\n      [prop]: (...args) => {\n        ctx[prop](...args);\n        return p;\n      },\n    }),\n    {},\n  );\n\n  return p;\n};\n\nexport default painter;\n","import * as R from 'ramda';\n\nimport painter from '../canvas/painter';\nimport warning from '../utils/warning';\n\nconst defaultsZero = R.pathOr(0);\n\nconst renderCanvas = (ctx, node) => {\n  const { top, left, width, height } = node.box;\n\n  const paddingLeft = defaultsZero('paddingLeft', node.box);\n  const paddingRight = defaultsZero('paddingRight', node.box);\n  const paddingTop = defaultsZero('paddingTop', node.box);\n  const paddingBottom = defaultsZero('paddingBottom', node.box);\n\n  const availableWidth = width - paddingLeft - paddingRight;\n  const availableHeight = height - paddingTop - paddingBottom;\n\n  warning(\n    availableWidth && availableHeight,\n    'Canvas element has null width or height. Please provide valid values via the `style` prop in order to correctly render it.',\n  );\n\n  ctx.save().translate(left + paddingLeft, top + paddingTop);\n\n  if (node.props.paint) {\n    node.props.paint(painter(ctx), availableWidth, availableHeight);\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderCanvas);\n","import * as R from 'ramda';\n\nimport matchPercent from '../utils/matchPercent';\nimport hasVerticalRuler from '../node/hasVerticalRuler';\nimport hasHorizontalRuler from '../node/hasHorizontalRuler';\nimport {\n  RULER_WIDTH,\n  RULER_COLOR,\n  LINE_COLOR,\n  GRID_COLOR,\n  LINE_WIDTH,\n  RULER_FONT_SIZE,\n  DEFAULT_RULER_STEPS,\n} from '../constants';\n\nconst range = (max, steps) =>\n  Array.from({ length: Math.ceil(max / steps) }, (_, i) => i * steps);\n\nconst matchPercentage = value => {\n  const match = matchPercent(value);\n  return match ? 100 / match.value : null;\n};\n\nconst getVerticalSteps = page => {\n  const value =\n    page.props.horizontalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const width = page.box.width - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return width / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst getHorizontalSteps = page => {\n  const value =\n    page.props.verticalRulerSteps ||\n    page.props.rulerSteps ||\n    DEFAULT_RULER_STEPS;\n\n  if (typeof value === 'string') {\n    const percentage = matchPercentage(value);\n    if (percentage) {\n      const height =\n        page.box.height - (hasVerticalRuler(page) ? RULER_WIDTH : 0);\n      return height / percentage;\n    }\n    throw new Error('Page: Invalid horizontal steps value');\n  }\n\n  return value;\n};\n\nconst renderVerticalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasHorizontalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(width, getVerticalSteps(page));\n\n  ctx\n    .rect(offset, 0, width, RULER_WIDTH)\n    .fill(RULER_COLOR)\n    .moveTo(offset, RULER_WIDTH)\n    .lineTo(width, RULER_WIDTH)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(offset + step, 0)\n      .lineTo(offset + step, RULER_WIDTH)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, offset + step + 1, 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(offset + step, RULER_WIDTH)\n        .lineTo(offset + step, height)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderHorizontalRuler = ctx => page => {\n  const width = page.box.width;\n  const height = page.box.height;\n  const offset = hasVerticalRuler(page) ? RULER_WIDTH : 0;\n  const hRange = range(height, getHorizontalSteps(page));\n\n  ctx\n    .rect(0, offset, RULER_WIDTH, height)\n    .fill(RULER_COLOR)\n    .moveTo(RULER_WIDTH, hasHorizontalRuler(page) ? RULER_WIDTH : 0)\n    .lineTo(RULER_WIDTH, height)\n    .stroke(LINE_COLOR);\n\n  hRange.map(step => {\n    ctx\n      .moveTo(0, offset + step)\n      .lineTo(RULER_WIDTH, offset + step)\n      .stroke(LINE_COLOR)\n      .fillColor('black')\n      .text(`${Math.round(step)}`, 1, offset + step + 1);\n\n    if (step !== 0) {\n      ctx\n        .moveTo(RULER_WIDTH, offset + step)\n        .lineTo(width, offset + step)\n        .stroke(GRID_COLOR);\n    }\n  });\n\n  return page;\n};\n\nconst renderRulers = (ctx, page) => {\n  ctx\n    .save()\n    .lineWidth(LINE_WIDTH)\n    .fontSize(RULER_FONT_SIZE)\n    .opacity(1);\n\n  R.compose(\n    R.when(hasVerticalRuler, renderVerticalRuler(ctx)),\n    R.when(hasHorizontalRuler, renderHorizontalRuler(ctx)),\n  )(page);\n\n  ctx.restore();\n\n  return page;\n};\n\nexport default R.curryN(2, renderRulers);\n","import * as R from 'ramda';\n\nconst getDocumentProp = target => (or, prop) =>\n  R.pathOr(or, ['children', 0, 'props', prop], target);\n\nconst setPDFMetadata = target => (key, value) => {\n  if (value) target.info[key] = value;\n};\n\n/**\n * Set document instance metadata\n *\n * @param {Object} ctx document instance\n * @param {Object} root document root\n */\nconst addMetadata = (ctx, root) => {\n  const getProp = getDocumentProp(root);\n  const setProp = setPDFMetadata(ctx);\n\n  const title = getProp(null, 'title');\n  const author = getProp(null, 'author');\n  const subject = getProp(null, 'subject');\n  const keywords = getProp(null, 'keywords');\n  const creator = getProp('react-pdf', 'creator');\n  const producer = getProp('react-pdf', 'producer');\n\n  setProp('Title', title);\n  setProp('Author', author);\n  setProp('Subject', subject);\n  setProp('Keywords', keywords);\n  setProp('Creator', creator);\n  setProp('Producer', producer);\n\n  return root;\n};\n\nexport default R.curryN(2, addMetadata);\n","import * as R from 'ramda';\n\nconst CONTENT_COLOR = '#a1c6e7';\nconst PADDING_COLOR = '#c4deb9';\nconst MARGIN_COLOR = '#f8cca1';\n\nconst shouldDebug = R.pathEq(['props', 'debug'], true);\n\n// TODO: Draw debug boxes using clipping to enhance quality\n\nconst debugContent = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    paddingLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n  } = node.box;\n\n  ctx\n    .fillColor(CONTENT_COLOR)\n    .opacity(0.5)\n    .rect(\n      left + paddingLeft,\n      top + paddingTop,\n      width - paddingLeft - paddingRight,\n      height - paddingTop - paddingBottom,\n    )\n    .fill();\n};\n\nconst debugPadding = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    paddingLeft,\n    paddingTop,\n    paddingRight,\n    paddingBottom,\n  } = node.box;\n\n  ctx.fillColor(PADDING_COLOR).opacity(0.5);\n\n  // Padding top\n  ctx\n    .rect(\n      left + paddingLeft,\n      top,\n      width - paddingRight - paddingLeft,\n      paddingTop,\n    )\n    .fill();\n\n  // Padding left\n  ctx.rect(left, top, paddingLeft, height).fill();\n\n  // Padding right\n  ctx.rect(left + width - paddingRight, top, paddingRight, height).fill();\n\n  // Padding bottom\n  ctx\n    .rect(\n      left + paddingLeft,\n      top + height - paddingBottom,\n      width - paddingRight - paddingLeft,\n      paddingBottom,\n    )\n    .fill();\n};\n\nconst debugMargin = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n  } = node.box;\n  ctx.fillColor(MARGIN_COLOR).opacity(0.5);\n\n  // Margin top\n  ctx.rect(left, top - marginTop, width, marginTop).fill();\n\n  // Margin left\n  ctx\n    .rect(\n      left - marginLeft,\n      top - marginTop,\n      marginLeft,\n      height + marginTop + marginBottom,\n    )\n    .fill();\n\n  // Margin right\n  ctx\n    .rect(\n      left + width,\n      top - marginTop,\n      marginRight,\n      height + marginTop + marginBottom,\n    )\n    .fill();\n\n  // Margin bottom\n  ctx.rect(left, top + height, width, marginBottom).fill();\n};\n\nconst debugText = (ctx, node) => {\n  const {\n    left,\n    top,\n    width,\n    height,\n    marginLeft,\n    marginTop,\n    marginRight,\n    marginBottom,\n  } = node.box;\n\n  const roundedWidth = Math.round(width + marginLeft + marginRight);\n  const roundedHeight = Math.round(height + marginTop + marginBottom);\n\n  ctx\n    .fontSize(4)\n    .opacity(1)\n    .fillColor('black')\n    .text(\n      `${roundedWidth} x ${roundedHeight}`,\n      left - marginLeft,\n      Math.max(top - marginTop - 4, 1),\n    );\n};\n\nconst debugOrigin = (ctx, node) => {\n  if (node.origin) {\n    ctx\n      .circle(node.origin.left, node.origin.top, 3)\n      .fill('red')\n      .circle(node.origin.left, node.origin.top, 5)\n      .stroke('red');\n  }\n};\n\nconst renderDebug = (ctx, node) => {\n  if (!shouldDebug(node)) return node;\n\n  ctx.save();\n\n  debugContent(ctx, node);\n  debugPadding(ctx, node);\n  debugMargin(ctx, node);\n  debugText(ctx, node);\n  debugOrigin(ctx, node);\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderDebug);\n","import * as R from 'ramda';\n\n// Ref: https://www.w3.org/TR/css-backgrounds-3/#borders\n\n// This constant is used to approximate a symmetrical arc using a cubic Bezier curve.\nconst KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n\nconst clipBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c0,\n    top,\n    left + width,\n    top + c0,\n    left + width,\n    top + rtr,\n  );\n\n  // Move down in case the margin exceedes the radius\n  const topRightYCoord = top + Math.max(borderTopWidth, rtr);\n  ctx.lineTo(left + width, topRightYCoord);\n\n  // Clip inner top right cap\n  ctx.lineTo(left + width - borderRightWidth, topRightYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c1 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c2,\n    left + width - borderRightWidth - c1,\n    top + borderTopWidth,\n    left + width - borderRightWidth - innerTopRightRadiusX,\n    top + borderTopWidth,\n  );\n\n  // Clip inner top border edge\n  ctx.lineTo(left + Math.max(rtl, borderLeftWidth), top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c3 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopLeftRadiusY * (1.0 - KAPPA);\n  const topLeftYCoord = top + Math.max(borderTopWidth, rtl);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c3,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c4,\n    left + borderLeftWidth,\n    topLeftYCoord,\n  );\n  ctx.lineTo(left, topLeftYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c5, left + c5, top, left + rtl, top);\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border top cap joins\n  if (borderRightWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderTop = (ctx, layout, style, rtr, rtl) => {\n  const { top, left, width } = layout;\n  const {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rtl * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left, top + Math.max(rtl, borderTopWidth));\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n  ctx.lineTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.strokeColor(borderTopColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderTopStyle === 'dashed') {\n    ctx.dash(borderTopWidth * 2, { space: borderTopWidth * 1.2 });\n  } else if (borderTopStyle === 'dotted') {\n    ctx.dash(borderTopWidth, { space: borderTopWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n\n  // Clip outer right border edge\n  ctx.moveTo(left + width, top + rtr);\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer bottom right cap\n  const c0 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  // Move left in case the margin exceedes the radius\n  const topBottomXCoord = left + width - Math.max(borderRightWidth, rbr);\n  ctx.lineTo(topBottomXCoord, top + height);\n\n  // Clip inner bottom right cap\n  ctx.lineTo(topBottomXCoord, top + height - borderBottomWidth);\n\n  // Ellipse coefficients inner bottom right cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c1 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomRightRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c1,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c2,\n    left + width - borderRightWidth,\n    top + height - Math.max(rbr, borderBottomWidth),\n  );\n\n  // Clip inner right border edge\n  ctx.lineTo(\n    left + width - borderRightWidth,\n    top + Math.max(rtr, borderTopWidth),\n  );\n\n  // Ellipse coefficients inner top right cap\n  const innerTopRightRadiusX = Math.max(rtr - borderRightWidth, 0);\n  const innerTopRightRadiusY = Math.max(rtr - borderTopWidth, 0);\n  const c3 = innerTopRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerTopRightRadiusY * (1.0 - KAPPA);\n  const topRightXCoord = left + width - Math.max(rtr, borderRightWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth,\n    top + borderTopWidth + c4,\n    left + width - borderRightWidth - c3,\n    top + borderTopWidth,\n    topRightXCoord,\n    top + borderTopWidth,\n  );\n  ctx.lineTo(topRightXCoord, top);\n\n  // Move right in case the margin exceedes the radius\n  ctx.lineTo(left + width - rtr, top);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rtr * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + width - c5,\n    top,\n    left + width,\n    top + c5,\n    left + width,\n    top + rtr,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderTopWidth) {\n    const trSlope = -borderTopWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderRight = (ctx, layout, style, rtr, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderRightColor,\n    borderRightStyle,\n    borderRightWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbr * (1.0 - KAPPA);\n  const c1 = rtr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width - rtr, top);\n  ctx.bezierCurveTo(\n    left + width - c1,\n    top,\n    left + width,\n    top + c1,\n    left + width,\n    top + rtr,\n  );\n  ctx.lineTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c0,\n    left + width - c0,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n\n  ctx.strokeColor(borderRightColor);\n  ctx.lineWidth(\n    Math.max(borderRightWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderRightStyle === 'dashed') {\n    ctx.dash(borderRightWidth * 2, { space: borderRightWidth * 1.2 });\n  } else if (borderRightStyle === 'dotted') {\n    ctx.dash(borderRightWidth, { space: borderRightWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const { borderBottomWidth, borderRightWidth, borderLeftWidth } = style;\n\n  // Clip outer top border edge\n  ctx.moveTo(left + width - rbr, top + height);\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c0 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  // Move up in case the margin exceedes the radius\n  const bottomLeftYCoord = top + height - Math.max(borderBottomWidth, rbl);\n  ctx.lineTo(left, bottomLeftYCoord);\n\n  // Clip inner bottom left cap\n  ctx.lineTo(left + borderLeftWidth, bottomLeftYCoord);\n\n  // Ellipse coefficients inner top right cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c1 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner bottom left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c2,\n    left + borderLeftWidth + c1,\n    top + height - borderBottomWidth,\n    left + borderLeftWidth + innerBottomLeftRadiusX,\n    top + height - borderBottomWidth,\n  );\n\n  // Clip inner bottom border edge\n  ctx.lineTo(\n    left + width - Math.max(rbr, borderRightWidth),\n    top + height - borderBottomWidth,\n  );\n\n  // Ellipse coefficients inner top left cap\n  const innerBottomRightRadiusX = Math.max(rbr - borderRightWidth, 0);\n  const innerBottomRightRadiusY = Math.max(rbr - borderBottomWidth, 0);\n  const c3 = innerBottomRightRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomRightRadiusY * (1.0 - KAPPA);\n  const bottomRightYCoord = top + height - Math.max(borderBottomWidth, rbr);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + width - borderRightWidth - c3,\n    top + height - borderBottomWidth,\n    left + width - borderRightWidth,\n    top + height - borderBottomWidth - c4,\n    left + width - borderRightWidth,\n    bottomRightYCoord,\n  );\n  ctx.lineTo(left + width, bottomRightYCoord);\n\n  // Move down in case the margin exceedes the radius\n  ctx.lineTo(left + width, top + height - rbr);\n\n  // Ellipse coefficients outer top left cap\n  const c5 = rbr * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c5,\n    left + width - c5,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border bottom cap joins\n  if (borderRightWidth) {\n    const brSlope = borderBottomWidth / borderRightWidth;\n    ctx.moveTo(left + width / 2, brSlope * (-width / 2) + top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderLeftWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderBottom = (ctx, layout, style, rbl, rbr) => {\n  const { top, left, width, height } = layout;\n  const {\n    borderBottomColor,\n    borderBottomStyle,\n    borderBottomWidth,\n    borderRightWidth,\n    borderLeftWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rbr * (1.0 - KAPPA);\n\n  ctx.moveTo(left + width, top + height - rbr);\n  ctx.bezierCurveTo(\n    left + width,\n    top + height - c1,\n    left + width - c1,\n    top + height,\n    left + width - rbr,\n    top + height,\n  );\n  ctx.lineTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.strokeColor(borderBottomColor);\n  ctx.lineWidth(\n    Math.max(borderBottomWidth, borderRightWidth, borderLeftWidth) * 2,\n  );\n\n  if (borderBottomStyle === 'dashed') {\n    ctx.dash(borderBottomWidth * 2, { space: borderBottomWidth * 1.2 });\n  } else if (borderBottomStyle === 'dotted') {\n    ctx.dash(borderBottomWidth, { space: borderBottomWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst clipBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, width, height } = layout;\n  const { borderTopWidth, borderLeftWidth, borderBottomWidth } = style;\n\n  // Clip outer left border edge\n  ctx.moveTo(left, top + height - rbl);\n  ctx.lineTo(left, top + rtl);\n\n  // Ellipse coefficients outer top left cap\n  const c0 = rtl * (1.0 - KAPPA);\n\n  // Clip outer top left cap\n  ctx.bezierCurveTo(left, top + c0, left + c0, top, left + rtl, top);\n\n  // Move right in case the margin exceedes the radius\n  const topLeftCoordX = left + Math.max(borderLeftWidth, rtl);\n  ctx.lineTo(topLeftCoordX, top);\n\n  // Clip inner top left cap\n  ctx.lineTo(topLeftCoordX, top + borderTopWidth);\n\n  // Ellipse coefficients inner top left cap\n  const innerTopLeftRadiusX = Math.max(rtl - borderLeftWidth, 0);\n  const innerTopLeftRadiusY = Math.max(rtl - borderTopWidth, 0);\n  const c1 = innerTopLeftRadiusX * (1.0 - KAPPA);\n  const c2 = innerTopLeftRadiusY * (1.0 - KAPPA);\n\n  // Clip inner top right cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth + c1,\n    top + borderTopWidth,\n    left + borderLeftWidth,\n    top + borderTopWidth + c2,\n    left + borderLeftWidth,\n    top + Math.max(rtl, borderTopWidth),\n  );\n\n  // Clip inner left border edge\n  ctx.lineTo(\n    left + borderLeftWidth,\n    top + height - Math.max(rbl, borderBottomWidth),\n  );\n\n  // Ellipse coefficients inner bottom left cap\n  const innerBottomLeftRadiusX = Math.max(rbl - borderLeftWidth, 0);\n  const innerBottomLeftRadiusY = Math.max(rbl - borderBottomWidth, 0);\n  const c3 = innerBottomLeftRadiusX * (1.0 - KAPPA);\n  const c4 = innerBottomLeftRadiusY * (1.0 - KAPPA);\n  const bottomLeftXCoord = left + Math.max(rbl, borderLeftWidth);\n\n  // Clip inner top left cap\n  ctx.bezierCurveTo(\n    left + borderLeftWidth,\n    top + height - borderBottomWidth - c4,\n    left + borderLeftWidth + c3,\n    top + height - borderBottomWidth,\n    bottomLeftXCoord,\n    top + height - borderBottomWidth,\n  );\n  ctx.lineTo(bottomLeftXCoord, top + height);\n\n  // Move left in case the margin exceedes the radius\n  ctx.lineTo(left + rbl, top + height);\n\n  // Ellipse coefficients outer top right cap\n  const c5 = rbl * (1.0 - KAPPA);\n\n  // Clip outer top right cap\n  ctx.bezierCurveTo(\n    left + c5,\n    top + height,\n    left,\n    top + height - c5,\n    left,\n    top + height - rbl,\n  );\n\n  ctx.closePath();\n  ctx.clip();\n\n  // Clip border right cap joins\n  if (borderBottomWidth) {\n    const trSlope = -borderBottomWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (width / 2) + top + height);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left + width, top);\n    ctx.closePath();\n    ctx.clip();\n  }\n\n  if (borderBottomWidth) {\n    const trSlope = -borderTopWidth / borderLeftWidth;\n    ctx.moveTo(left + width / 2, trSlope * (-width / 2) + top);\n    ctx.lineTo(left, top);\n    ctx.lineTo(left, top + height);\n    ctx.lineTo(left + width, top + height);\n    ctx.closePath();\n    ctx.clip();\n  }\n};\n\nconst fillBorderLeft = (ctx, layout, style, rbl, rtl) => {\n  const { top, left, height } = layout;\n  const {\n    borderLeftColor,\n    borderLeftStyle,\n    borderLeftWidth,\n    borderTopWidth,\n    borderBottomWidth,\n  } = style;\n\n  const c0 = rbl * (1.0 - KAPPA);\n  const c1 = rtl * (1.0 - KAPPA);\n\n  ctx.moveTo(left + rbl, top + height);\n  ctx.bezierCurveTo(\n    left + c0,\n    top + height,\n    left,\n    top + height - c0,\n    left,\n    top + height - rbl,\n  );\n  ctx.lineTo(left, top + rtl);\n  ctx.bezierCurveTo(left, top + c1, left + c1, top, left + rtl, top);\n\n  ctx.strokeColor(borderLeftColor);\n  ctx.lineWidth(\n    Math.max(borderLeftWidth, borderTopWidth, borderBottomWidth) * 2,\n  );\n\n  if (borderLeftStyle === 'dashed') {\n    ctx.dash(borderLeftWidth * 2, { space: borderLeftWidth * 1.2 });\n  } else if (borderLeftStyle === 'dotted') {\n    ctx.dash(borderLeftWidth, { space: borderLeftWidth * 1.2 });\n  }\n\n  ctx.stroke();\n  ctx.undash();\n};\n\nconst shouldRenderBorders = node =>\n  node.box &&\n  (node.box.borderTopWidth ||\n    node.box.borderRightWidth ||\n    node.box.borderBottomWidth ||\n    node.box.borderLeftWidth);\n\nconst renderBorders = (ctx, node) => {\n  if (!shouldRenderBorders(node)) return node;\n\n  const {\n    width,\n    height,\n    borderTopWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n  } = node.box;\n\n  const {\n    opacity,\n    borderTopLeftRadius = 0,\n    borderTopRightRadius = 0,\n    borderBottomLeftRadius = 0,\n    borderBottomRightRadius = 0,\n    borderTopColor = 'black',\n    borderTopStyle = 'solid',\n    borderLeftColor = 'black',\n    borderLeftStyle = 'solid',\n    borderRightColor = 'black',\n    borderRightStyle = 'solid',\n    borderBottomColor = 'black',\n    borderBottomStyle = 'solid',\n  } = node.style;\n\n  const style = {\n    borderTopColor,\n    borderTopWidth,\n    borderTopStyle,\n    borderLeftColor,\n    borderLeftWidth,\n    borderLeftStyle,\n    borderRightColor,\n    borderRightWidth,\n    borderRightStyle,\n    borderBottomColor,\n    borderBottomWidth,\n    borderBottomStyle,\n    borderTopLeftRadius,\n    borderTopRightRadius,\n    borderBottomLeftRadius,\n    borderBottomRightRadius,\n  };\n\n  const rtr = Math.min(borderTopRightRadius, 0.5 * width, 0.5 * height);\n  const rtl = Math.min(borderTopLeftRadius, 0.5 * width, 0.5 * height);\n  const rbr = Math.min(borderBottomRightRadius, 0.5 * width, 0.5 * height);\n  const rbl = Math.min(borderBottomLeftRadius, 0.5 * width, 0.5 * height);\n\n  ctx.save();\n  ctx.strokeOpacity(opacity);\n\n  if (borderTopWidth) {\n    ctx.save();\n    clipBorderTop(ctx, node.box, style, rtr, rtl);\n    fillBorderTop(ctx, node.box, style, rtr, rtl);\n    ctx.restore();\n  }\n\n  if (borderRightWidth) {\n    ctx.save();\n    clipBorderRight(ctx, node.box, style, rtr, rbr);\n    fillBorderRight(ctx, node.box, style, rtr, rbr);\n    ctx.restore();\n  }\n\n  if (borderBottomWidth) {\n    ctx.save();\n    clipBorderBottom(ctx, node.box, style, rbl, rbr);\n    fillBorderBottom(ctx, node.box, style, rbl, rbr);\n    ctx.restore();\n  }\n\n  if (borderLeftWidth) {\n    ctx.save();\n    clipBorderLeft(ctx, node.box, style, rbl, rtl);\n    fillBorderLeft(ctx, node.box, style, rbl, rtl);\n    ctx.restore();\n  }\n\n  ctx.restore();\n\n  return node;\n};\n\nexport default R.curryN(2, renderBorders);\n","import * as R from 'ramda';\n\nimport save from './save';\nimport restore from './restore';\nimport clipNode from './clipNode';\n\nconst drawBackground = ctx => node => {\n  if (node.box && node.style.backgroundColor) {\n    const { top, left, width, height } = node.box;\n\n    ctx\n      .fillOpacity(node.style.opacity || 1)\n      .fillColor(node.style.backgroundColor)\n      .rect(left, top, width, height)\n      .fill();\n  }\n\n  return node;\n};\n\nconst shouldRenderBackground = R.hasPath(['style', 'backgroundColor']);\n\nconst renderBackground = (ctx, node) => {\n  R.when(\n    shouldRenderBackground,\n    R.compose(\n      restore(ctx),\n      drawBackground(ctx),\n      clipNode(ctx),\n      save(ctx),\n    ),\n  )(node);\n\n  return node;\n};\n\nexport default R.curryN(2, renderBackground);\n","import * as R from 'ramda';\n\n// TODO: Implement using only matrices to support skew and even more operations than css.\n\nconst getRotation = transform => {\n  const match = /rotate\\((-?\\d+.?\\d+)(.+)\\)/g.exec(transform);\n\n  if (match && match[1] && match[2]) {\n    const value = match[1];\n    return match[2] === 'rad' ? (value * 180) / Math.PI : value;\n  }\n\n  return 0;\n};\n\nconst getTranslateX = transform => {\n  const matchX = /translateX\\((-?\\d+\\.?d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?d*).*,\\s*(-?\\d+\\.?d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 0;\n};\n\nconst getTranslateY = transform => {\n  const matchY = /translateY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /translate\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 0;\n};\n\nconst getScaleX = transform => {\n  const matchX = /scaleX\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchX && matchX[1]) return matchX[1];\n  if (matchGeneric && matchGeneric[1]) return matchGeneric[1];\n\n  return 1;\n};\n\nconst getScaleY = transform => {\n  const matchY = /scaleY\\((-?\\d+\\.?\\d*)\\)/g.exec(transform);\n  const matchGeneric = /scale\\((-?\\d+\\.?\\d*).*,\\s*(-?\\d+\\.?\\d*).*\\)/g.exec(\n    transform,\n  );\n\n  if (matchY && matchY[1]) return matchY[1];\n  if (matchGeneric && matchGeneric[2]) return matchGeneric[2];\n\n  return 1;\n};\n\nconst getMatrix = transform => {\n  const match = /matrix\\(([^,]+),([^,]+),([^,]+),([^,]+),([^,]+),([^,]+)\\)/g.exec(\n    transform,\n  );\n  if (match) return match.slice(1, 7);\n  return null;\n};\n\nconst applySingleTransformation = (ctx, transform, origin) => {\n  if (/rotate/g.test(transform)) {\n    ctx.rotate(getRotation(transform), { origin });\n  } else if (/scaleX/g.test(transform)) {\n    ctx.scale(getScaleX(transform), 1, { origin });\n  } else if (/scaleY/g.test(transform)) {\n    ctx.scale(1, getScaleY(transform), { origin });\n  } else if (/scale/g.test(transform)) {\n    ctx.scale(getScaleX(transform), getScaleY(transform), {\n      origin,\n    });\n  } else if (/translateX/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), 1, { origin });\n  } else if (/translateY/g.test(transform)) {\n    ctx.translate(1, getTranslateY(transform), { origin });\n  } else if (/translate/g.test(transform)) {\n    ctx.translate(getTranslateX(transform), getTranslateY(transform), {\n      origin,\n    });\n  } else if (/matrix/g.test(transform)) {\n    ctx.transform(...getMatrix(transform));\n  }\n};\n\nconst applyTransformations = (ctx, node) => {\n  if (!node.origin) return node;\n\n  let match;\n  const re = /[a-zA-Z]+\\([^)]+\\)/g;\n  const origin = [node.origin.left, node.origin.top];\n  const transform = (node.style && node.style.transform) || '';\n\n  while ((match = re.exec(transform)) != null) {\n    applySingleTransformation(ctx, match[0], origin);\n  }\n\n  return node;\n};\n\nexport default R.curryN(2, applyTransformations);\n","import * as R from 'ramda';\n\nimport Font from '../font';\nimport save from './save';\nimport restore from './restore';\nimport isText from '../node/isText';\nimport isPage from '../node/isPage';\nimport isImage from '../node/isImage';\nimport isNote from '../node/isNote';\nimport isLink from '../node/isLink';\nimport isCanvas from '../node/isCanvas';\nimport renderText from './renderText';\nimport renderPage from './renderPage';\nimport renderLink from './renderLink';\nimport renderNote from './renderNote';\nimport renderImage from './renderImage';\nimport renderCanvas from './renderCanvas';\nimport renderRulers from './renderRulers';\nimport addMetadata from './addMetadata';\nimport renderDebug from './renderDebug';\nimport renderBorders from './renderBorders';\nimport renderBackground from './renderBackground';\nimport applyTransformations from './applyTransformations';\n\nconst isNotText = R.complement(isText);\n\nconst renderNode = ctx => node => {\n  const renderChildren = R.tap(\n    R.compose(\n      R.forEach(renderNode(ctx)),\n      R.pathOr([], ['children']),\n    ),\n  );\n\n  return R.compose(\n    restore(ctx),\n    renderDebug(ctx),\n    R.when(isNotText, renderChildren),\n    R.cond([\n      [isText, renderText(ctx)],\n      [isLink, renderLink(ctx)],\n      [isNote, renderNote(ctx)],\n      [isImage, renderImage(ctx)],\n      [isCanvas, renderCanvas(ctx)],\n      [R.T, R.identity],\n    ]),\n    renderBorders(ctx),\n    renderBackground(ctx),\n    applyTransformations(ctx),\n    save(ctx),\n    R.when(isPage, renderPage(ctx)),\n  )(node);\n};\n\nconst renderDocument = ctx =>\n  R.compose(\n    R.forEach(\n      R.compose(\n        renderRulers(ctx),\n        renderNode(ctx),\n      ),\n    ),\n    R.pathOr([], ['children']),\n  );\n\nconst renderRoot = ctx =>\n  R.compose(\n    R.forEach(renderDocument(ctx)),\n    R.pathOr([], ['children']),\n  );\n\nconst render = (ctx, root) => {\n  addMetadata(ctx)(root);\n  renderRoot(ctx)(root);\n\n  ctx.end();\n  Font.reset();\n\n  return ctx;\n};\n\nexport default render;\n","import flatten from './flatten';\n\nconst create = styles => styles;\n\nconst absoluteFillObject = {\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport default {\n  hairlineWidth: 1,\n  create,\n  flatten,\n  absoluteFillObject,\n};\n","import BlobStream from 'blob-stream';\nimport PDFDocument from '@react-pdf/pdfkit';\n\nimport createRenderer from './renderer';\nimport layoutDocument from './layout';\nimport renderPDF from './pdf/render';\nimport StyleSheet from './stylesheet';\nimport Font from './font';\nimport { version } from '../package.json';\nimport {\n  VIEW,\n  TEXT,\n  LINK,\n  PAGE,\n  NOTE,\n  IMAGE,\n  DOCUMENT,\n  CANVAS,\n} from './constants';\n\nconst View = VIEW;\nconst Text = TEXT;\nconst Link = LINK;\nconst Page = PAGE;\nconst Note = NOTE;\nconst Image = IMAGE;\nconst Document = DOCUMENT;\nconst Canvas = CANVAS;\n\nconst pdf = input => {\n  let _isDirty = true;\n\n  const container = { type: 'ROOT', children: [] };\n  const PDFRenderer = createRenderer(markAsDirty);\n  const mountNode = PDFRenderer.createContainer(container);\n\n  if (input) updateContainer(input);\n\n  function isDirty() {\n    return _isDirty;\n  }\n\n  function markAsDirty() {\n    _isDirty = true;\n  }\n\n  function callOnRender(params = {}) {\n    // if (container.document.props.onRender) {\n    // const layoutData = container.document.getLayoutData();\n    // container.document.props.onRender({ ...params, layoutData });\n    // }\n  }\n\n  const render = async () => {\n    const ctx = new PDFDocument({ autoFirstPage: false });\n\n    // let layout;\n\n    // for (let i = 0; i < 10; i++) {\n    console.time('layout');\n    const layout = await layoutDocument(container);\n    console.timeEnd('layout');\n    // }\n\n    const instance = renderPDF(ctx, layout);\n\n    _isDirty = false;\n\n    // console.log(layout);\n\n    return instance;\n  };\n\n  const renderWithContext = async ctx => {\n    const layout = await layoutDocument(container);\n    const instance = renderPDF(ctx, layout);\n    _isDirty = false;\n\n    return instance;\n  };\n\n  const layout = async () => {\n    return layoutDocument(container);\n  };\n\n  function updateContainer(doc) {\n    PDFRenderer.updateContainer(doc, mountNode, null);\n  }\n\n  async function toBlob() {\n    const instance = await render();\n    const stream = instance.pipe(BlobStream());\n\n    return new Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        try {\n          const blob = stream.toBlob('application/pdf');\n          callOnRender({ blob });\n          resolve(blob);\n        } catch (error) {\n          reject(error);\n        }\n      });\n\n      stream.on('error', reject);\n    });\n  }\n\n  // async function toBuffer() {\n  //   await container.render();\n\n  //   callOnRender();\n\n  //   return container.instance;\n  // }\n\n  // function toString() {\n  //   let result = '';\n  //   container.render();\n\n  //   return new Promise((resolve, reject) => {\n  //     try {\n  //       container.instance.on('data', function(buffer) {\n  //         result += buffer;\n  //       });\n\n  //       container.instance.on('end', function() {\n  //         callOnRender({ string: result });\n  //         resolve(result);\n  //       });\n  //     } catch (error) {\n  //       reject(error);\n  //     }\n  //   });\n  // }\n\n  return {\n    layout,\n    isDirty,\n    container,\n    updateContainer,\n    renderWithContext,\n    // toBuffer,\n    toBlob,\n    toString,\n  };\n};\n\nexport {\n  version,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  Document,\n  Canvas,\n  StyleSheet,\n  pdf,\n};\n","import fs from 'fs';\nimport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n} from './index';\n\nexport const renderToStream = async function(element) {\n  const instance = pdf(element);\n  const buffer = await instance.toBuffer();\n  instance.container.finish();\n  return buffer;\n};\n\nexport const renderToFile = async function(element, filePath, callback) {\n  const output = await renderToStream(element);\n  const stream = fs.createWriteStream(filePath);\n\n  output.pipe(stream);\n\n  return new Promise((resolve, reject) => {\n    stream.on('finish', () => {\n      if (callback) callback(output, filePath);\n      resolve(output);\n    });\n    stream.on('error', reject);\n  });\n};\n\nconst throwEnvironmentError = name => {\n  throw new Error(\n    `${name} is a web specific API. Or you're either using this component on Node, or your bundler is not loading react-pdf from the appropiate web build.`,\n  );\n};\n\nexport const PDFViewer = () => {\n  throwEnvironmentError('PDFViewer');\n};\n\nexport const PDFDownloadLink = () => {\n  throwEnvironmentError('PDFDownloadLink');\n};\n\nexport const BlobProvider = () => {\n  throwEnvironmentError('BlobProvider');\n};\n\nexport const render = renderToFile;\n\nexport {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n} from './index';\n\nexport default {\n  pdf,\n  View,\n  Text,\n  Link,\n  Page,\n  Font,\n  Note,\n  Image,\n  version,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  BlobProvider,\n  PDFDownloadLink,\n  renderToStream,\n  renderToFile,\n  render,\n};\n"],"names":["propsEqual","a","b","oldPropsKeys","Object","keys","newPropsKeys","length","i","propName","emptyObject","createRenderer","onChange","ReactFiberReconciler","supportsMutation","appendInitialChild","parentInstance","child","children","push","createInstance","type","style","props","box","createTextInstance","text","rootContainerInstance","value","finalizeInitialChildren","element","getPublicInstance","instance","prepareForCommit","prepareUpdate","oldProps","newProps","resetAfterCommit","c","resetTextContent","getRootHostContext","getChildHostContext","shouldSetTextContent","now","Date","useSyncScheduling","appendChild","appendChildToContainer","insertBefore","beforeChild","index","indexOf","splice","removeChild","removeChildFromContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayload","VIEW","TEXT","LINK","PAGE","NOTE","IMAGE","DOCUMENT","CANVAS","TEXT_INSTANCE","DPI","FONT_WEIGHTS","thin","hairline","ultralight","extralight","light","normal","medium","semibold","demibold","bold","ultrabold","extrabold","heavy","black","PAGE_SIZES","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","PORTRAIT","LANDSCAPE","INHERITED_PROPERTIES","RULER_WIDTH","RULER_COLOR","RULER_FONT_SIZE","DEFAULT_RULER_STEPS","LINE_WIDTH","LINE_COLOR","GRID_COLOR","BOX_MODEL_REGEX","OBJECT_POSITION_REGEX","BORDER_SHORTHAND_REGEX","TRANSFORM_ORIGIN_REGEX","matchBoxModel","R","matchObjectPosition","matchBorderShorthand","matchTransformOrigin","isFontWeightStyle","key","match","isBorderStyle","isBoxModelStyle","isObjectPositionStyle","isTransformOriginStyle","processBorders","Error","processBoxModel","processFontWeight","toLowerCase","processObjectPosition","transformOffsetKeywords","processTransformOrigin","result","matchNumber","String","castFloat","v","parseFloat","transformStyles","propsArray","resolvedStyle","fetchFont","src","options","response","fetch","buffer","arrayBuffer","constructor","name","Buffer","from","FontSource","fontFamily","fontStyle","fontWeight","data","loading","load","BROWSER","isUrl","headers","body","method","fontkit","create","Promise","resolve","reject","open","err","Font","family","sources","register","descriptor","styleSources","filter","s","exactFit","find","res","leftOffset","rightOffset","fit","lt","gt","emojiSource","registerEmojiSource","url","format","getEmojiSource","hyphenationCallback","registerHyphenationCallback","callback","getHyphenationCallback","printWarning","args","argIndex","message","replace","console","error","x","__DEV__","process","env","NODE_ENV","warning","condition","undefined","fonts","font","getRegisteredFonts","getRegisteredFontFamilies","getFont","isStandard","standardFonts","includes","reset","hasOwnProperty","clear","emoji","hyphenation","isImage","PNG","isValid","e","MARKERS","JPEG","width","height","readUInt16BE","marker","pos","isBuffer","createCache","limit","cache","get","set","shift","IMAGE_CACHE","getAbsoluteLocalPath","protocol","auth","host","port","hostname","path","pathname","parse","absolutePath","fetchLocalFile","fs","readFile","fetchRemoteFile","uri","isValidFormat","lower","guessFormat","isCompatibleBase64","test","getImage","extension","resolveBase64Image","exec","resolveImageFromData","JSON","stringify","resolveBufferImage","getImageFormat","isPng","isJpg","resolveImageFromUrl","resolveImage","cacheKey","toString","image","getSource","fetchImage","node","warn","emojis","regex","emojiRegex","reflect","promise","then","makeFetchEmojiImage","_removeNoColor","getCodePoints","string","Array","map","char","codePointAt","join","buildEmojiUrl","fetchEmojis","promises","emojiUrl","fetchEmojiImage","embedEmojis","fragments","fragment","lastIndex","emojiSize","attributes","fontSize","chunk","slice","fromCharCode","attachment","yOffset","Math","floor","fetchAssets","listToExplore","forEach","childNode","resolveAssets","p","all","compact","Boolean","isArray","isNotArray","castArray","mergeStyles","styles","reduce","acc","flatten","prototype","styleShorthands","margin","marginTop","marginRight","marginBottom","marginLeft","marginHorizontal","marginVertical","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingHorizontal","paddingVertical","border","borderTopColor","borderTopStyle","borderTopWidth","borderRightColor","borderRightStyle","borderRightWidth","borderBottomColor","borderBottomStyle","borderBottomWidth","borderLeftColor","borderLeftStyle","borderLeftWidth","borderTop","borderRight","borderBottom","borderLeft","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderStyle","borderWidth","objectPosition","objectPositionX","objectPositionY","transformOrigin","transformOriginX","transformOriginY","expandedKeys","expandStyles","expandedProps","call","parseValue","unit","transformUnit","container","scalar","transformUnits","resolveMediaQueries","matchMedia","resolveStyles","flattenStyles","resolveNodeStyles","page","resolvePageStyles","pageBox","resolveZIndex","hasVerticalRuler","hasHorizontalRuler","adjustPageSize","top","left","resolveRulers","isPercent","matchPercent","percent","absValue","abs","absPercent","getTransformStyle","getOrigin","percentX","percentY","offsetX","offsetY","resolveNodeOrigin","resolveOrigin","VALID_ORIENTATIONS","getOrientation","isLandscape","toSizeObject","flipSizeObject","getStringSize","getNumberSize","throwInvalidError","size","getSize","Number","assocIfNil","target","resolvePageSize","getPageSize","resolvePageSizes","isNotNil","firstPass","fns","fn","getComputedMargin","edge","yogaNode","_yogaNode","getMargin","Yoga","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","getComputedPadding","getPadding","getTop","getComputedTop","getRight","getComputedRight","getBottom","getComputedBottom","getLeft","getComputedLeft","getPosition","right","bottom","DEFAULT_DIMENSION","getDimension","getComputedWidth","getComputedHeight","getComputedBorder","getBorderWidth","upperFirst","setYogaValue","attr","hasEdge","fixedMethod","autoMethod","percentMethod","setFlex","setDisplay","DISPLAY_NONE","DISPLAY_FLEX","setOverflow","yogaValue","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","setFlexWrap","WRAP_WRAP","WRAP_WRAP_REVERSE","WRAP_NO_WRAP","setFlexGrow","setFlexBasis","setAlign","ALIGN_FLEX_START","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_STRETCH","ALIGN_BASELINE","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","ALIGN_AUTO","setAlignSelf","setFlexShrink","setAspectRatio","setAlignContent","setPositionType","POSITION_TYPE_ABSOLUTE","POSITION_TYPE_RELATIVE","isRow","isRowReverse","isColumnReverse","setFlexDirection","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_COLUMN","setJustifyContent","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_EVENLY","JUSTIFY_FLEX_START","setMarginTop","setMarginRight","setMarginBottom","setMarginLeft","setMargin","setPaddingTop","setPaddingRight","setPaddingBottom","setPaddingLeft","setBorderTop","setBorderRight","setBorderBottom","setBorderLeft","setPositionTop","setPositionRight","setPositionBottom","setPositionLeft","setWidth","setMinWidth","setMaxWidth","setHeight","setMinHeight","setMaxHeight","isText","isNote","isPage","isCanvas","StandardFont","PDFFont","layout","str","encoded","positions","encode","stringIndices","_","glyphs","g","glyph","getGlyph","parseInt","advanceWidth","glyphForCodePoint","codePoint","id","_font","codePoints","isLigature","characterToGlyph","hasGlyphForCodePoint","ascent","descent","lineGap","unitsPerEm","fontCache","IGNORED_CODE_POINTS","getFontSize","getOrCreateFont","getFallbackFont","shouldFallbackToFont","fontSubstitution","runs","lastFont","run","defaultFont","start","end","shouldFallback","scale","capitalize","l","toUpperCase","IGNORABLE_CODEPOINTS","buildSubsetForFont","ignoreChars","charSubset","subsetRegex","RegExp","isTextInstance","PREPROCESSORS","transformText","transformation","getFragments","color","backgroundColor","textAlign","lineHeight","textDecoration","textDecorationColor","textDecorationStyle","textTransform","letterSpacing","textIndent","opacity","obj","align","indent","link","characterSpacing","underlineStyle","underline","underlineColor","strike","strikeStyle","strikeColor","preprocessor","getAttributedString","AttributedString","fromFragments","engines","linebreaker","justification","scriptItemizer","wordHyphenation","engine","layoutEngine","getContainer","maxLines","textOverflow","y","Infinity","truncateMode","getLayoutOptions","hyphenationPenalty","shrinkWhitespaceFactor","before","after","layoutText","linesWidth","lines","max","line","linesHeight","measureText","widthMode","heightMode","MEASURE_MODE_EXACTLY","MEASURE_MODE_AT_MOST","min","getRatio","isHeightAuto","SAFETY_HEIGHT","measureImage","imageRatio","imageMargin","pagePadding","pageArea","MEASURE_MODE_UNDEFINED","scaledHeight","getMax","measureCtx","ctx","points","nil","addPoint","moveTo","rect","w","h","ellipse","rx","ry","polygon","pts","lineTo","circle","roundedRect","lineWidth","bezierCurveTo","quadraticCurveTo","rotate","translate","dash","clip","save","fill","stroke","lineCap","restore","lineJoin","fillColor","miterLimit","strokeColor","fillOpacity","strokeOpacity","linearGradient","radialGradient","getWidth","getHeight","measureCanvas","paint","YOGA_NODE","YOGA_CONFIG","Config","setPointScaleFactor","setNodeHeight","setYogaValues","minWidth","maxWidth","minHeight","maxHeight","position","display","flexDirection","alignSelf","alignContent","justifyContent","flexWrap","overflow","aspectRatio","flex","flexBasis","flexGrow","flexShrink","insertYogaNodes","parent","insertChild","getChildCount","setMeasureFunc","isNotText","isNotNote","isLayoutElement","isNotTextInstance","createYogaNodes","Node","createWithConfig","calculateLayout","persistDimensions","destroyYogaNodes","n","destroy","resolvePageDimensions","resolveDimensions","shouldLayoutText","resolveTextLayout","getInheritStyles","resolveInheritance","inheritStyles","removeMargins","resolvePageMargins","getNodesHeight","nodes","getWrap","getBreak","getMinPresenceAhead","defaultPresenceAhead","getPresenceAhead","elements","isElementInside","presenceAhead","shouldBreak","futureElements","minPresenceAhead","futureHeight","shouldSplit","shouldWrap","getPaddingBottom","getContentArea","getChildren","setChildren","setBreak","breakChildren","offset","nextElements","currentElements","childTop","childHeight","shouldNodeBreak","currentChildren","nextChildren","childsOffset","ceil","breakNode","currentNode","nextNode","breakPage","pages","subpages","current","nextPage","resolvePageBreaks","isElementOutside","splitNodes","currentChild","nextChild","splitNode","splitChildren","availableHeight","nodeTop","nodeHeight","isOutside","next","currentChilds","getWrappingArea","splitPage","splittedPage","resolvePageSplitting","restorePageSize","resolvePageWrapping","getNodeText","getNodesText","wrapTextInstance","resolveNoteChildren","resolvePageHorizontalPadding","resolvePageVerticalPadding","resolvePagePaddings","resolveRadius","resolvePercentRadius","transformHeight","getPageArea","pageHeight","pagePaddingTop","pagePaddingBottom","hasHeight","resolveNodePercentHeight","resolvePagePercentHeight","resolvePercentHeight","isLink","hasRenderProp","hasTextInstanceChilds","resolveLinkSubstitution","resolveAbsoluteCoordinates","origin","asyncCompose","startTimer","time","endTimer","timeEnd","resolvePageSizeStyle","resolveOrigins","renderText","initialY","PDFRenderer","render","renderPage","addPage","PROTOCOL_REGEXP","getURL","renderLink","renderNote","note","KAPPA","sqrt","clipNode","rtr","ctr","rbr","cbr","rbl","cbl","rtl","ctl","closePath","isNumeric","isNaN","isFinite","applyContainObjectFit","cw","ch","iw","ih","px","py","cr","ir","pxp","pyp","pxv","pyv","xOffset","applyNoneObjectFit","applyCoverObjectFit","applyScaleDownObjectFit","containDimension","noneDimension","applyFillObjectFit","resolveObjectFit","drawImage","objectFit","renderImage","availableMethods","painter","prop","defaultsZero","renderCanvas","availableWidth","range","steps","matchPercentage","getVerticalSteps","horizontalRulerSteps","rulerSteps","percentage","getHorizontalSteps","verticalRulerSteps","renderVerticalRuler","hRange","step","round","renderHorizontalRuler","renderRulers","getDocumentProp","or","setPDFMetadata","info","addMetadata","root","getProp","setProp","title","author","subject","keywords","creator","producer","CONTENT_COLOR","PADDING_COLOR","MARGIN_COLOR","shouldDebug","debugContent","debugPadding","debugMargin","debugText","roundedWidth","roundedHeight","debugOrigin","renderDebug","clipBorderTop","c0","topRightYCoord","innerTopRightRadiusX","innerTopRightRadiusY","c1","c2","innerTopLeftRadiusX","innerTopLeftRadiusY","c3","c4","topLeftYCoord","c5","trSlope","fillBorderTop","space","undash","clipBorderRight","topBottomXCoord","innerBottomRightRadiusX","innerBottomRightRadiusY","topRightXCoord","brSlope","fillBorderRight","clipBorderBottom","bottomLeftYCoord","innerBottomLeftRadiusX","innerBottomLeftRadiusY","bottomRightYCoord","fillBorderBottom","clipBorderLeft","topLeftCoordX","bottomLeftXCoord","fillBorderLeft","shouldRenderBorders","renderBorders","drawBackground","shouldRenderBackground","renderBackground","getRotation","transform","PI","getTranslateX","matchX","matchGeneric","getTranslateY","matchY","getScaleX","getScaleY","getMatrix","applySingleTransformation","applyTransformations","re","renderNode","renderChildren","renderDocument","renderRoot","absoluteFillObject","hairlineWidth","View","Text","Link","Page","Note","Image","Document","pdf","input","_isDirty","markAsDirty","mountNode","createContainer","updateContainer","isDirty","PDFDocument","autoFirstPage","layoutDocument","renderPDF","renderWithContext","doc","toBlob","stream","pipe","BlobStream","on","blob","callOnRender","renderToStream","toBuffer","finish","renderToFile","filePath","output","createWriteStream","throwEnvironmentError","PDFViewer","PDFDownloadLink","BlobProvider","version","StyleSheet"],"mappings":"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"}